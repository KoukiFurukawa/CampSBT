{
	"id": "2b9aa8f975790b15ef059004328a6a7f",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.25",
	"solcLongVersion": "0.8.25+commit.b61c2a91",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/CampToken.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity >=0.6.12 <0.9.0;\n\nimport \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\";\nimport { AggregatorV3Interface } from \"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\";\n\ncontract CampToken is Initializable, ERC20Upgradeable, ERC20BurnableUpgradeable, OwnableUpgradeable, UUPSUpgradeable\n{\n  // 利用する変数\n  AggregatorV3Interface internal ETH_USD;\n  AggregatorV3Interface internal USD_JPY;\n  mapping(address => uint256) internal token_balances;\n\n  constructor() {\n    _disableInitializers();\n\n    /** -----------------------------------------------------------------\n    ETH/USD : https://data.chain.link/feeds/ethereum/mainnet/eth-usd\n    USD/JPY : https://data.chain.link/feeds/ethereum/mainnet/jpy-usd\n    ------------------------------------------------------------------ */\n    ETH_USD = AggregatorV3Interface(0x694AA1769357215DE4FAC081bf1f309aDC325306);\n    USD_JPY = AggregatorV3Interface(0x8A6af2B75F23831ADc973ce6288e5329F63D86c6);\n  }\n\n  function initialize(address initialOwner) initializer public {\n    __ERC20_init(\"CampToken\", \"CTK\");\n    __ERC20Burnable_init();\n    __Ownable_init(initialOwner);\n    __UUPSUpgradeable_init();\n  }\n\n  function _authorizeUpgrade(address newImplementation)\n      internal\n      onlyOwner\n      override\n  {}\n\n  // SCの説明を返す\n  function description() external view virtual returns (string memory)\n  {\n      return \"CampToken <-> ETH. CampToken is StableCoin that relating ETH <-> JPY\";\n  }\n\n  // Version を返す\n  function version() external view virtual returns (uint256) {\n    return 1;\n  }\n\n  // todo --impl ETHをCTKに変換\n  function Exchange_ETH_to_CTK() public payable\n  {\n    require(msg.value > 0, \"Amount must be greater than zero\");\n    uint256 amount = ETH_JPY() * msg.value / 10 ** 18;\n    _mint(msg.sender, amount);\n    token_balances[msg.sender] += amount;\n  }\n\n  function getAward() external\n  {\n    uint256 amount = 500 * 10 ** 18;\n    _mint(msg.sender, amount);\n    token_balances[msg.sender] += amount;\n  }\n\n  function withdraw(uint amount) external virtual \n  {\n    require(token_balances[msg.sender] >= amount, \"Amount must always be less than the number of possessions\");\n    token_balances[msg.sender] -= amount;\n    Burn_CTK(msg.sender, amount);\n    uint transfer_amount = JPY_ETH() * amount / 10 ** 18;\n    payable(msg.sender).transfer(transfer_amount);\n  }\n\n  // todo --impl 手数料を減らした鋳造量を返す\n  function Get_mint_quantity(uint256 deposit) private\n  {\n    \n  }\n\n  // todo --impl 送信された CTK を burnする\n  function Burn_CTK(address _sender, uint256 quantity) public\n  {\n    _burn(_sender, quantity);\n  }\n\n\n  // 1ETH = 何USD?\n  function get_Latest_EU_Price() public view returns (int256) {\n    (\n        /*uint80 roundID*/, // roundのid、roundidは毎回記録される\n        int256 price, // 最新の価格をint型のpriceに代入\n        /*uint startedAt*/, // roundスタートしたタイムスタンプ\n        /*uint timeStamp*/, // data更新のタイムスタンプ\n        /*uint80 answeredInRound*/ // どのroundで更新されたか\n    ) = ETH_USD.latestRoundData(); \n    return price;\n    // return 350000000000;\n  }\n\n  // 1JPY = 何USD？\n  function get_Latest_JU_Price() public view returns (int256) {\n    (\n        /*uint80 roundID*/, // roundのid、roundidは毎回記録される\n        int256 price, // 最新の価格をint型のpriceに代入\n        /*uint startedAt*/, // roundスタートしたタイムスタンプ\n        /*uint timeStamp*/, // data更新のタイムスタンプ\n        /*uint80 answeredInRound*/ // どのroundで更新されたか\n    ) = USD_JPY.latestRoundData();\n    return price;\n    // return 650000;\n  }\n\n    // 1ETH は何円？\n  function ETH_JPY() public view returns (uint256)\n  {\n    int USD_ETH_price = get_Latest_EU_Price();\n    int USD_JPY_price = 10 ** 8 / get_Latest_JU_Price();\n\n    uint result = uint(USD_ETH_price) * uint(USD_JPY_price) * 10 ** 10;\n    return result;\n  }\n\n  function JPY_ETH() public view returns (uint256)\n  {\n    uint ETH_JPY_price = uint(ETH_JPY()) / 10 ** 18;\n    uint result = 10 ** 18 / ETH_JPY_price;\n    return result;\n  }\n}"
			},
			"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface AggregatorV3Interface {\n  function decimals() external view returns (uint8);\n\n  function description() external view returns (string memory);\n\n  function version() external view returns (uint256);\n\n  function getRoundData(\n    uint80 _roundId\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\n\n  function latestRoundData()\n    external\n    view\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/UUPSUpgradeable.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC1822Proxiable} from \"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\";\nimport {ERC1967Utils} from \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\";\nimport {Initializable} from \"./Initializable.sol\";\n\n/**\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n *\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n * `UUPSUpgradeable` with a custom implementation of upgrades.\n *\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\n */\nabstract contract UUPSUpgradeable is Initializable, IERC1822Proxiable {\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable\n    address private immutable __self = address(this);\n\n    /**\n     * @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\n     * and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\n     * while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\n     * If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\n     * be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\n     * during an upgrade.\n     */\n    string public constant UPGRADE_INTERFACE_VERSION = \"5.0.0\";\n\n    /**\n     * @dev The call is from an unauthorized context.\n     */\n    error UUPSUnauthorizedCallContext();\n\n    /**\n     * @dev The storage `slot` is unsupported as a UUID.\n     */\n    error UUPSUnsupportedProxiableUUID(bytes32 slot);\n\n    /**\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n     * a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n     * function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n     * fail.\n     */\n    modifier onlyProxy() {\n        _checkProxy();\n        _;\n    }\n\n    /**\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n     * callable on the implementing contract but not through proxies.\n     */\n    modifier notDelegated() {\n        _checkNotDelegated();\n        _;\n    }\n\n    function __UUPSUpgradeable_init() internal onlyInitializing {\n    }\n\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\n     */\n    function proxiableUUID() external view virtual notDelegated returns (bytes32) {\n        return ERC1967Utils.IMPLEMENTATION_SLOT;\n    }\n\n    /**\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n     * encoded in `data`.\n     *\n     * Calls {_authorizeUpgrade}.\n     *\n     * Emits an {Upgraded} event.\n     *\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {\n        _authorizeUpgrade(newImplementation);\n        _upgradeToAndCallUUPS(newImplementation, data);\n    }\n\n    /**\n     * @dev Reverts if the execution is not performed via delegatecall or the execution\n     * context is not of a proxy with an ERC1967-compliant implementation pointing to self.\n     * See {_onlyProxy}.\n     */\n    function _checkProxy() internal view virtual {\n        if (\n            address(this) == __self || // Must be called through delegatecall\n            ERC1967Utils.getImplementation() != __self // Must be called through an active proxy\n        ) {\n            revert UUPSUnauthorizedCallContext();\n        }\n    }\n\n    /**\n     * @dev Reverts if the execution is performed via delegatecall.\n     * See {notDelegated}.\n     */\n    function _checkNotDelegated() internal view virtual {\n        if (address(this) != __self) {\n            // Must not be called through delegatecall\n            revert UUPSUnauthorizedCallContext();\n        }\n    }\n\n    /**\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n     * {upgradeToAndCall}.\n     *\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n     *\n     * ```solidity\n     * function _authorizeUpgrade(address) internal onlyOwner {}\n     * ```\n     */\n    function _authorizeUpgrade(address newImplementation) internal virtual;\n\n    /**\n     * @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\n     *\n     * As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\n     * is expected to be the implementation slot in ERC1967.\n     *\n     * Emits an {IERC1967-Upgraded} event.\n     */\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {\n        try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\n            if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {\n                revert UUPSUnsupportedProxiableUUID(slot);\n            }\n            ERC1967Utils.upgradeToAndCall(newImplementation, data);\n        } catch {\n            // The implementation is not UUPS\n            revert ERC1967Utils.ERC1967InvalidImplementation(newImplementation);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Storage of the initializable contract.\n     *\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n     * when using with upgradeable contracts.\n     *\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\n     */\n    struct InitializableStorage {\n        /**\n         * @dev Indicates that the contract has been initialized.\n         */\n        uint64 _initialized;\n        /**\n         * @dev Indicates that the contract is in the process of being initialized.\n         */\n        bool _initializing;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Initializable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\n\n    /**\n     * @dev The contract is already initialized.\n     */\n    error InvalidInitialization();\n\n    /**\n     * @dev The contract is not initializing.\n     */\n    error NotInitializing();\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint64 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n     * production.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        // Cache values to avoid duplicated sloads\n        bool isTopLevelCall = !$._initializing;\n        uint64 initialized = $._initialized;\n\n        // Allowed calls:\n        // - initialSetup: the contract is not in the initializing state and no previous version was\n        //                 initialized\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\n        //                 current contract is just being deployed\n        bool initialSetup = initialized == 0 && isTopLevelCall;\n        bool construction = initialized == 1 && address(this).code.length == 0;\n\n        if (!initialSetup && !construction) {\n            revert InvalidInitialization();\n        }\n        $._initialized = 1;\n        if (isTopLevelCall) {\n            $._initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            $._initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint64 version) {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing || $._initialized >= version) {\n            revert InvalidInitialization();\n        }\n        $._initialized = version;\n        $._initializing = true;\n        _;\n        $._initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        _checkInitializing();\n        _;\n    }\n\n    /**\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\n     */\n    function _checkInitializing() internal view virtual {\n        if (!_isInitializing()) {\n            revert NotInitializing();\n        }\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing) {\n            revert InvalidInitialization();\n        }\n        if ($._initialized != type(uint64).max) {\n            $._initialized = type(uint64).max;\n            emit Initialized(type(uint64).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint64) {\n        return _getInitializableStorage()._initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _getInitializableStorage()._initializing;\n    }\n\n    /**\n     * @dev Returns a pointer to the storage namespace.\n     */\n    // solhint-disable-next-line var-name-mixedcase\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\n        assembly {\n            $.slot := INITIALIZABLE_STORAGE\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ContextUpgradeable} from \"../utils/ContextUpgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\n    /// @custom:storage-location erc7201:openzeppelin.storage.Ownable\n    struct OwnableStorage {\n        address _owner;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Ownable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant OwnableStorageLocation = 0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300;\n\n    function _getOwnableStorage() private pure returns (OwnableStorage storage $) {\n        assembly {\n            $.slot := OwnableStorageLocation\n        }\n    }\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    function __Ownable_init(address initialOwner) internal onlyInitializing {\n        __Ownable_init_unchained(initialOwner);\n    }\n\n    function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        OwnableStorage storage $ = _getOwnableStorage();\n        return $._owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        OwnableStorage storage $ = _getOwnableStorage();\n        address oldOwner = $._owner;\n        $._owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/ERC20Burnable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC20Upgradeable} from \"../ERC20Upgradeable.sol\";\nimport {ContextUpgradeable} from \"../../../utils/ContextUpgradeable.sol\";\nimport {Initializable} from \"../../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\n * tokens and those that they have an allowance for, in a way that can be\n * recognized off-chain (via event analysis).\n */\nabstract contract ERC20BurnableUpgradeable is Initializable, ContextUpgradeable, ERC20Upgradeable {\n    function __ERC20Burnable_init() internal onlyInitializing {\n    }\n\n    function __ERC20Burnable_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev Destroys a `value` amount of tokens from the caller.\n     *\n     * See {ERC20-_burn}.\n     */\n    function burn(uint256 value) public virtual {\n        _burn(_msgSender(), value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, deducting from\n     * the caller's allowance.\n     *\n     * See {ERC20-_burn} and {ERC20-allowance}.\n     *\n     * Requirements:\n     *\n     * - the caller must have allowance for ``accounts``'s tokens of at least\n     * `value`.\n     */\n    function burnFrom(address account, uint256 value) public virtual {\n        _spendAllowance(account, _msgSender(), value);\n        _burn(account, value);\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport {IERC20Metadata} from \"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\";\nimport {ContextUpgradeable} from \"../../utils/ContextUpgradeable.sol\";\nimport {IERC20Errors} from \"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\";\nimport {Initializable} from \"../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20, IERC20Metadata, IERC20Errors {\n    /// @custom:storage-location erc7201:openzeppelin.storage.ERC20\n    struct ERC20Storage {\n        mapping(address account => uint256) _balances;\n\n        mapping(address account => mapping(address spender => uint256)) _allowances;\n\n        uint256 _totalSupply;\n\n        string _name;\n        string _symbol;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.ERC20\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant ERC20StorageLocation = 0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00;\n\n    function _getERC20Storage() private pure returns (ERC20Storage storage $) {\n        assembly {\n            $.slot := ERC20StorageLocation\n        }\n    }\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    function __ERC20_init(string memory name_, string memory symbol_) internal onlyInitializing {\n        __ERC20_init_unchained(name_, symbol_);\n    }\n\n    function __ERC20_init_unchained(string memory name_, string memory symbol_) internal onlyInitializing {\n        ERC20Storage storage $ = _getERC20Storage();\n        $._name = name_;\n        $._symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        ERC20Storage storage $ = _getERC20Storage();\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            $._totalSupply += value;\n        } else {\n            uint256 fromBalance = $._balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                $._balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                $._totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                $._balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        ERC20Storage storage $ = _getERC20Storage();\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        $._allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/ERC1967/ERC1967Utils.sol)\n\npragma solidity ^0.8.20;\n\nimport {IBeacon} from \"../beacon/IBeacon.sol\";\nimport {Address} from \"../../utils/Address.sol\";\nimport {StorageSlot} from \"../../utils/StorageSlot.sol\";\n\n/**\n * @dev This abstract contract provides getters and event emitting update functions for\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\n */\nlibrary ERC1967Utils {\n    // We re-declare ERC-1967 events here because they can't be used directly from IERC1967.\n    // This will be fixed in Solidity 0.8.21. At that point we should remove these events.\n    /**\n     * @dev Emitted when the implementation is upgraded.\n     */\n    event Upgraded(address indexed implementation);\n\n    /**\n     * @dev Emitted when the admin account has changed.\n     */\n    event AdminChanged(address previousAdmin, address newAdmin);\n\n    /**\n     * @dev Emitted when the beacon is changed.\n     */\n    event BeaconUpgraded(address indexed beacon);\n\n    /**\n     * @dev Storage slot with the address of the current implementation.\n     * This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n\n    /**\n     * @dev The `implementation` of the proxy is invalid.\n     */\n    error ERC1967InvalidImplementation(address implementation);\n\n    /**\n     * @dev The `admin` of the proxy is invalid.\n     */\n    error ERC1967InvalidAdmin(address admin);\n\n    /**\n     * @dev The `beacon` of the proxy is invalid.\n     */\n    error ERC1967InvalidBeacon(address beacon);\n\n    /**\n     * @dev An upgrade function sees `msg.value > 0` that may be lost.\n     */\n    error ERC1967NonPayable();\n\n    /**\n     * @dev Returns the current implementation address.\n     */\n    function getImplementation() internal view returns (address) {\n        return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 implementation slot.\n     */\n    function _setImplementation(address newImplementation) private {\n        if (newImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(newImplementation);\n        }\n        StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation;\n    }\n\n    /**\n     * @dev Performs implementation upgrade with additional setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-Upgraded} event.\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) internal {\n        _setImplementation(newImplementation);\n        emit Upgraded(newImplementation);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(newImplementation, data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Storage slot with the admin of the contract.\n     * This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\n\n    /**\n     * @dev Returns the current admin.\n     *\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using\n     * the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\n     */\n    function getAdmin() internal view returns (address) {\n        return StorageSlot.getAddressSlot(ADMIN_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 admin slot.\n     */\n    function _setAdmin(address newAdmin) private {\n        if (newAdmin == address(0)) {\n            revert ERC1967InvalidAdmin(address(0));\n        }\n        StorageSlot.getAddressSlot(ADMIN_SLOT).value = newAdmin;\n    }\n\n    /**\n     * @dev Changes the admin of the proxy.\n     *\n     * Emits an {IERC1967-AdminChanged} event.\n     */\n    function changeAdmin(address newAdmin) internal {\n        emit AdminChanged(getAdmin(), newAdmin);\n        _setAdmin(newAdmin);\n    }\n\n    /**\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n     * This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\n\n    /**\n     * @dev Returns the current beacon.\n     */\n    function getBeacon() internal view returns (address) {\n        return StorageSlot.getAddressSlot(BEACON_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\n     */\n    function _setBeacon(address newBeacon) private {\n        if (newBeacon.code.length == 0) {\n            revert ERC1967InvalidBeacon(newBeacon);\n        }\n\n        StorageSlot.getAddressSlot(BEACON_SLOT).value = newBeacon;\n\n        address beaconImplementation = IBeacon(newBeacon).implementation();\n        if (beaconImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(beaconImplementation);\n        }\n    }\n\n    /**\n     * @dev Change the beacon and trigger a setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-BeaconUpgraded} event.\n     *\n     * CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n     * it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n     * efficiency.\n     */\n    function upgradeBeaconToAndCall(address newBeacon, bytes memory data) internal {\n        _setBeacon(newBeacon);\n        emit BeaconUpgraded(newBeacon);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n     * if an upgrade doesn't perform an initialization call.\n     */\n    function _checkNonPayable() private {\n        if (msg.value > 0) {\n            revert ERC1967NonPayable();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC1822.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC1822.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n * proxy whose upgrades are fully controlled by the current implementation.\n */\ninterface IERC1822Proxiable {\n    /**\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n     * address.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy.\n     */\n    function proxiableUUID() external view returns (bytes32);\n}\n"
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error AddressInsufficientBalance(address account);\n\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedInnerCall();\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert AddressInsufficientBalance(address(this));\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert FailedInnerCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {FailedInnerCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert AddressInsufficientBalance(address(this));\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n     * unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {FailedInnerCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert FailedInnerCall();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/IBeacon.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\n */\ninterface IBeacon {\n    /**\n     * @dev Must return an address that can be used as a delegate call target.\n     *\n     * {UpgradeableBeacon} will check that this address is a contract.\n     */\n    function implementation() external view returns (address);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol": {
				"AggregatorV3Interface": {
					"abi": [
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "description",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint80",
									"name": "_roundId",
									"type": "uint80"
								}
							],
							"name": "getRoundData",
							"outputs": [
								{
									"internalType": "uint80",
									"name": "roundId",
									"type": "uint80"
								},
								{
									"internalType": "int256",
									"name": "answer",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "startedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "updatedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint80",
									"name": "answeredInRound",
									"type": "uint80"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "latestRoundData",
							"outputs": [
								{
									"internalType": "uint80",
									"name": "roundId",
									"type": "uint80"
								},
								{
									"internalType": "int256",
									"name": "answer",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "startedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "updatedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint80",
									"name": "answeredInRound",
									"type": "uint80"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "version",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"decimals()": "313ce567",
							"description()": "7284e416",
							"getRoundData(uint80)": "9a6fc8f5",
							"latestRoundData()": "feaf968c",
							"version()": "54fd4d50"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint80\",\"name\":\"_roundId\",\"type\":\"uint80\"}],\"name\":\"getRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":\"AggregatorV3Interface\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0xfe4e8bb4861bb3860ba890ab91a3b818ec66e5a8f544fb608cfcb73f433472cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://644cff84052e1e82b5bb502b2a46e8f142a62b0db4cd9b38200798ba8373c6f7\",\"dweb:/ipfs/QmTa99QHrJBn3SXDizquPBUiTxVCNKQrHgaWJhuds5Sce2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"OwnableUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":\"OwnableUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"Initializable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"custom:oz-upgrades-unsafe-allow": "constructor constructor() {     _disableInitializers(); } ``` ====",
						"details": "This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol": {
				"UUPSUpgradeable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidImplementation",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ERC1967NonPayable",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "UUPSUnauthorizedCallContext",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "slot",
									"type": "bytes32"
								}
							],
							"name": "UUPSUnsupportedProxiableUUID",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "UPGRADE_INTERFACE_VERSION",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "upgradeToAndCall",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"ERC1967InvalidImplementation(address)": [
								{
									"details": "The `implementation` of the proxy is invalid."
								}
							],
							"ERC1967NonPayable()": [
								{
									"details": "An upgrade function sees `msg.value > 0` that may be lost."
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"UUPSUnauthorizedCallContext()": [
								{
									"details": "The call is from an unauthorized context."
								}
							],
							"UUPSUnsupportedProxiableUUID(bytes32)": [
								{
									"details": "The storage `slot` is unsupported as a UUID."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {
							"proxiableUUID()": {
								"details": "Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
							},
							"upgradeToAndCall(address,bytes)": {
								"custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
								"details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
							}
						},
						"stateVariables": {
							"UPGRADE_INTERFACE_VERSION": {
								"details": "The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)` and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called, while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string. If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must be the empty byte string if no function should be called, making it impossible to invoke the `receive` function during an upgrade."
							},
							"__self": {
								"custom:oz-upgrades-unsafe-allow": "state-variable-immutable"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"UPGRADE_INTERFACE_VERSION()": "ad3cb1cc",
							"proxiableUUID()": "52d1902d",
							"upgradeToAndCall(address,bytes)": "4f1ef286"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"stateVariables\":{\"UPGRADE_INTERFACE_VERSION\":{\"details\":\"The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)` and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called, while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string. If the getter returns `\\\"5.0.0\\\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must be the empty byte string if no function should be called, making it impossible to invoke the `receive` function during an upgrade.\"},\"__self\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":\"UUPSUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x3f13b947637c4969c0644cab4ef399cdc4b67f101463b8775c5a43b118558e53\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6683e6ade6985d394d32baaef5eea0d8b9ff0b3eca86ae413d6cdde114a9930\",\"dweb:/ipfs/QmdBE8T1BTddZxpdECMsb3KiCFyjNWmxcCddYrWFTXmWPj\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef381843676aec64421200ee85eaa0b1356a35f28b9fc67e746a6bbb832077d9\",\"dweb:/ipfs/QmY8aorMYA2TeTCnu6ejDjzb4rW4t7TCtW4GZ6LoxTFm7v\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://547d21aa17f4f3f1a1a7edf7167beff8dd9496a0348d5588f15cc8a4b29d052a\",\"dweb:/ipfs/QmT16JtRQSWNpLo9W23jr6CzaMuTAcQcjJJcdRd8HLJ6cE\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol": {
				"ERC20Upgradeable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":\"ERC20Upgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0x9a1766b1921bf91b3e61eb53c7a6e70725254befd4bdcbbcd3af40bd9f66856f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://29bf2fa41a172086a665c9738377b93655aa4b1ffda9fe839c8bdf646f185040\",\"dweb:/ipfs/QmeB21qDuo8WPQSrqXJbQmWHKsdeocGNSUWLhCwniVejrt\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol": {
				"ERC20BurnableUpgradeable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}."
							},
							"burnFrom(address,uint256)": {
								"details": "Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":\"ERC20BurnableUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0x9a1766b1921bf91b3e61eb53c7a6e70725254befd4bdcbbcd3af40bd9f66856f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://29bf2fa41a172086a665c9738377b93655aa4b1ffda9fe839c8bdf646f185040\",\"dweb:/ipfs/QmeB21qDuo8WPQSrqXJbQmWHKsdeocGNSUWLhCwniVejrt\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":{\"keccak256\":\"0xe74dd150d031e8ecf9755893a2aae02dec954158140424f11c28ff689a48492f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://554e0934aecff6725e10d4aeb2e70ff214384b68782b1ba9f9322a0d16105a2f\",\"dweb:/ipfs/QmVvmHc7xPftEkWvJRNAqv7mXihKLEAVXpiebG7RT5rhMW\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ContextUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC1822.sol": {
				"IERC1822Proxiable": {
					"abi": [
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.",
						"kind": "dev",
						"methods": {
							"proxiableUUID()": {
								"details": "Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"proxiableUUID()": "52d1902d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.\",\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":\"IERC1822Proxiable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef381843676aec64421200ee85eaa0b1356a35f28b9fc67e746a6bbb832077d9\",\"dweb:/ipfs/QmY8aorMYA2TeTCnu6ejDjzb4rW4t7TCtW4GZ6LoxTFm7v\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol": {
				"ERC1967Utils": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "admin",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidAdmin",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidBeacon",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidImplementation",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ERC1967NonPayable",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousAdmin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "AdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "BeaconUpgraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.",
						"errors": {
							"ERC1967InvalidAdmin(address)": [
								{
									"details": "The `admin` of the proxy is invalid."
								}
							],
							"ERC1967InvalidBeacon(address)": [
								{
									"details": "The `beacon` of the proxy is invalid."
								}
							],
							"ERC1967InvalidImplementation(address)": [
								{
									"details": "The `implementation` of the proxy is invalid."
								}
							],
							"ERC1967NonPayable()": [
								{
									"details": "An upgrade function sees `msg.value > 0` that may be lost."
								}
							]
						},
						"events": {
							"AdminChanged(address,address)": {
								"details": "Emitted when the admin account has changed."
							},
							"BeaconUpgraded(address)": {
								"details": "Emitted when the beacon is changed."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"ADMIN_SLOT": {
								"details": "Storage slot with the admin of the contract. This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1."
							},
							"BEACON_SLOT": {
								"details": "The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1."
							},
							"IMPLEMENTATION_SLOT": {
								"details": "Storage slot with the address of the current implementation. This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":449:6722  library ERC1967Utils {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":449:6722  library ERC1967Utils {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122048b9a92808333df04cdaaa28775abe9ff422f169c8ba3036744df7a687f3ed3164736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122048b9a92808333df04cdaaa28775abe9ff422f169c8ba3036744df7a687f3ed3164736f6c63430008190033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BASEFEE 0xB9 0xA9 0x28 ADDMOD CALLER RETURNDATASIZE CREATE 0x4C 0xDA 0xAA 0x28 PUSH24 0x5ABE9FF422F169C8BA3036744DF7A687F3ED3164736F6C63 NUMBER STOP ADDMOD NOT STOP CALLER ",
							"sourceMap": "449:6273:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122048b9a92808333df04cdaaa28775abe9ff422f169c8ba3036744df7a687f3ed3164736f6c63430008190033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BASEFEE 0xB9 0xA9 0x28 ADDMOD CALLER RETURNDATASIZE CREATE 0x4C 0xDA 0xAA 0x28 PUSH24 0x5ABE9FF422F169C8BA3036744DF7A687F3ED3164736F6C63 NUMBER STOP ADDMOD NOT STOP CALLER ",
							"sourceMap": "449:6273:9:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_checkNonPayable()": "infinite",
								"_setAdmin(address)": "infinite",
								"_setBeacon(address)": "infinite",
								"_setImplementation(address)": "infinite",
								"changeAdmin(address)": "infinite",
								"getAdmin()": "infinite",
								"getBeacon()": "infinite",
								"getImplementation()": "infinite",
								"upgradeBeaconToAndCall(address,bytes memory)": "infinite",
								"upgradeToAndCall(address,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "BYTE",
									"source": 9
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "MSTORE8",
									"source": 9
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122048b9a92808333df04cdaaa28775abe9ff422f169c8ba3036744df7a687f3ed3164736f6c63430008190033",
									".code": [
										{
											"begin": 449,
											"end": 6722,
											"name": "PUSHDEPLOYADDRESS",
											"source": 9
										},
										{
											"begin": 449,
											"end": 6722,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 449,
											"end": 6722,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 449,
											"end": 6722,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 449,
											"end": 6722,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 449,
											"end": 6722,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 449,
											"end": 6722,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 449,
											"end": 6722,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 449,
											"end": 6722,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"contracts/CampToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidAdmin\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidBeacon\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\",\"errors\":{\"ERC1967InvalidAdmin(address)\":[{\"details\":\"The `admin` of the proxy is invalid.\"}],\"ERC1967InvalidBeacon(address)\":[{\"details\":\"The `beacon` of the proxy is invalid.\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}]},\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ADMIN_SLOT\":{\"details\":\"Storage slot with the admin of the contract. This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1.\"},\"BEACON_SLOT\":{\"details\":\"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is the keccak-256 hash of \\\"eip1967.proxy.beacon\\\" subtracted by 1.\"},\"IMPLEMENTATION_SLOT\":{\"details\":\"Storage slot with the address of the current implementation. This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":\"ERC1967Utils\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://547d21aa17f4f3f1a1a7edf7167beff8dd9496a0348d5588f15cc8a4b29d052a\",\"dweb:/ipfs/QmT16JtRQSWNpLo9W23jr6CzaMuTAcQcjJJcdRd8HLJ6cE\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
				"IBeacon": {
					"abi": [
						{
							"inputs": [],
							"name": "implementation",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "This is the interface that {BeaconProxy} expects of its beacon.",
						"kind": "dev",
						"methods": {
							"implementation()": {
								"details": "Must return an address that can be used as a delegate call target. {UpgradeableBeacon} will check that this address is a contract."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"implementation()": "5c60da1b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is the interface that {BeaconProxy} expects of its beacon.\",\"kind\":\"dev\",\"methods\":{\"implementation()\":{\"details\":\"Must return an address that can be used as a delegate call target. {UpgradeableBeacon} will check that this address is a contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":\"IBeacon\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "AddressInsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"AddressInsufficientBalance(address)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":195:6261  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":195:6261  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220881eb351652b618c77e203da79e265347075bf9824e33e181896a06523d9b6b764736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220881eb351652b618c77e203da79e265347075bf9824e33e181896a06523d9b6b764736f6c63430008190033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP9 0x1E 0xB3 MLOAD PUSH6 0x2B618C77E203 0xDA PUSH26 0xE265347075BF9824E33E181896A06523D9B6B764736F6C634300 ADDMOD NOT STOP CALLER ",
							"sourceMap": "195:6066:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220881eb351652b618c77e203da79e265347075bf9824e33e181896a06523d9b6b764736f6c63430008190033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP9 0x1E 0xB3 MLOAD PUSH6 0x2B618C77E203 0xDA PUSH26 0xE265347075BF9824E33E181896A06523D9B6B764736F6C634300 ADDMOD NOT STOP CALLER ",
							"sourceMap": "195:6066:13:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_revert(bytes memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH #[$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH [$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 13,
									"value": "B"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "CODECOPY",
									"source": 13
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "BYTE",
									"source": 13
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 13,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "tag",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "ADDRESS",
									"source": 13
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE8",
									"source": 13
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "RETURN",
									"source": 13
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220881eb351652b618c77e203da79e265347075bf9824e33e181896a06523d9b6b764736f6c63430008190033",
									".code": [
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSHDEPLOYADDRESS",
											"source": 13
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "ADDRESS",
											"source": 13
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "REVERT",
											"source": 13
										}
									]
								}
							},
							"sourceList": [
								"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"contracts/CampToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"StorageSlot": {
					"abi": [],
					"devdoc": {
						"details": "Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1245:3930  library StorageSlot {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1245:3930  library StorageSlot {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220311f7e6ffa154b5ab493a9afe982ea25312076f3d20efa211b038f476023b0eb64736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220311f7e6ffa154b5ab493a9afe982ea25312076f3d20efa211b038f476023b0eb64736f6c63430008190033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BALANCE 0x1F PUSH31 0x6FFA154B5AB493A9AFE982EA25312076F3D20EFA211B038F476023B0EB6473 PUSH16 0x6C634300081900330000000000000000 ",
							"sourceMap": "1245:2685:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220311f7e6ffa154b5ab493a9afe982ea25312076f3d20efa211b038f476023b0eb64736f6c63430008190033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BALANCE 0x1F PUSH31 0x6FFA154B5AB493A9AFE982EA25312076F3D20EFA211B038F476023B0EB6473 PUSH16 0x6C634300081900330000000000000000 ",
							"sourceMap": "1245:2685:14:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"getAddressSlot(bytes32)": "infinite",
								"getBooleanSlot(bytes32)": "infinite",
								"getBytes32Slot(bytes32)": "infinite",
								"getBytesSlot(bytes storage pointer)": "infinite",
								"getBytesSlot(bytes32)": "infinite",
								"getStringSlot(bytes32)": "infinite",
								"getStringSlot(string storage pointer)": "infinite",
								"getUint256Slot(bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH #[$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH [$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 14,
									"value": "B"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "CODECOPY",
									"source": 14
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "BYTE",
									"source": 14
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "EQ",
									"source": 14
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 14,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 14,
									"value": "4"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 14,
									"value": "24"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "tag",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "ADDRESS",
									"source": 14
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE8",
									"source": 14
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "RETURN",
									"source": 14
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220311f7e6ffa154b5ab493a9afe982ea25312076f3d20efa211b038f476023b0eb64736f6c63430008190033",
									".code": [
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSHDEPLOYADDRESS",
											"source": 14
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "ADDRESS",
											"source": 14
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "REVERT",
											"source": 14
										}
									]
								}
							},
							"sourceList": [
								"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"contracts/CampToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/CampToken.sol": {
				"CampToken": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidImplementation",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ERC1967NonPayable",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "UUPSUnauthorizedCallContext",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "slot",
									"type": "bytes32"
								}
							],
							"name": "UUPSUnsupportedProxiableUUID",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "quantity",
									"type": "uint256"
								}
							],
							"name": "Burn_CTK",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ETH_JPY",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "Exchange_ETH_to_CTK",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "JPY_ETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "UPGRADE_INTERFACE_VERSION",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "description",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getAward",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "get_Latest_EU_Price",
							"outputs": [
								{
									"internalType": "int256",
									"name": "",
									"type": "int256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "get_Latest_JU_Price",
							"outputs": [
								{
									"internalType": "int256",
									"name": "",
									"type": "int256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "initialOwner",
									"type": "address"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "upgradeToAndCall",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "version",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"ERC1967InvalidImplementation(address)": [
								{
									"details": "The `implementation` of the proxy is invalid."
								}
							],
							"ERC1967NonPayable()": [
								{
									"details": "An upgrade function sees `msg.value > 0` that may be lost."
								}
							],
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							],
							"UUPSUnauthorizedCallContext()": [
								{
									"details": "The call is from an unauthorized context."
								}
							],
							"UUPSUnsupportedProxiableUUID(bytes32)": [
								{
									"details": "The storage `slot` is unsupported as a UUID."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}."
							},
							"burnFrom(address,uint256)": {
								"details": "Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"proxiableUUID()": {
								"details": "Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"upgradeToAndCall(address,bytes)": {
								"custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
								"details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/CampToken.sol\":582:4561  contract CampToken is Initializable, ERC20Upgradeable, ERC20BurnableUpgradeable, OwnableUpgradeable, UUPSUpgradeable... */\n  mstore(0x40, 0xa0)\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1171:1175  this */\n  address\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1128:1176  address private immutable __self = address(this) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  swap1\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n    /* \"contracts/CampToken.sol\":867:1363  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/CampToken.sol\":887:909  _disableInitializers() */\n  tag_4\n    /* \"contracts/CampToken.sol\":887:907  _disableInitializers */\n  shl(0x20, tag_5)\n    /* \"contracts/CampToken.sol\":887:909  _disableInitializers() */\n  0x20\n  shr\n  jump\t// in\ntag_4:\n    /* \"contracts/CampToken.sol\":1234:1276  0x694AA1769357215DE4FAC081bf1f309aDC325306 */\n  0x694aa1769357215de4fac081bf1f309adc325306\n    /* \"contracts/CampToken.sol\":1202:1209  ETH_USD */\n  0x00\n  dup1\n    /* \"contracts/CampToken.sol\":1202:1277  ETH_USD = AggregatorV3Interface(0x694AA1769357215DE4FAC081bf1f309aDC325306) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/CampToken.sol\":1315:1357  0x8A6af2B75F23831ADc973ce6288e5329F63D86c6 */\n  0x8a6af2b75f23831adc973ce6288e5329f63d86c6\n    /* \"contracts/CampToken.sol\":1283:1290  USD_JPY */\n  0x01\n  0x00\n    /* \"contracts/CampToken.sol\":1283:1358  USD_JPY = AggregatorV3Interface(0x8A6af2B75F23831ADc973ce6288e5329F63D86c6) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/CampToken.sol\":582:4561  contract CampToken is Initializable, ERC20Upgradeable, ERC20BurnableUpgradeable, OwnableUpgradeable, UUPSUpgradeable... */\n  jump(tag_6)\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7711:8133  function _disableInitializers() internal virtual {... */\ntag_5:\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7826:7856  InitializableStorage storage $ */\n  0x00\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7859:7885  _getInitializableStorage() */\n  tag_8\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7859:7883  _getInitializableStorage */\n  shl(0x20, tag_9)\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7859:7885  _getInitializableStorage() */\n  0x20\n  shr\n  jump\t// in\ntag_8:\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7826:7885  InitializableStorage storage $ = _getInitializableStorage() */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7900:7901  $ */\n  dup1\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7900:7915  $._initializing */\n  0x00\n  add\n  0x08\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xff\n  and\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7896:7972  if ($._initializing) {... */\n  iszero\n  tag_10\n  jumpi\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7938:7961  InvalidInitialization() */\n  mload(0x40)\n  0xf92ee8a900000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7896:7972  if ($._initializing) {... */\ntag_10:\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8003:8019  type(uint64).max */\n  0xffffffffffffffff\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7985:8019  $._initialized != type(uint64).max */\n  dup1\n  and\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7985:7986  $ */\n  dup2\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7985:7999  $._initialized */\n  0x00\n  add\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7985:8019  $._initialized != type(uint64).max */\n  0xffffffffffffffff\n  and\n  eq\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7981:8127  if ($._initialized != type(uint64).max) {... */\n  tag_11\n  jumpi\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8052:8068  type(uint64).max */\n  0xffffffffffffffff\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8035:8036  $ */\n  dup2\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8035:8049  $._initialized */\n  0x00\n  add\n  0x00\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8035:8068  $._initialized = type(uint64).max */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8087:8116  Initialized(type(uint64).max) */\n  0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8099:8115  type(uint64).max */\n  0xffffffffffffffff\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8087:8116  Initialized(type(uint64).max) */\n  mload(0x40)\n  tag_12\n  swap2\n  swap1\n  tag_13\n  jump\t// in\ntag_12:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log1\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7981:8127  if ($._initialized != type(uint64).max) {... */\ntag_11:\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7760:8133  {... */\n  pop\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7711:8133  function _disableInitializers() internal virtual {... */\n  jump\t// out\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8737:8907  function _getInitializableStorage() private pure returns (InitializableStorage storage $) {... */\ntag_9:\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8795:8825  InitializableStorage storage $ */\n  0x00\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8870:8891  INITIALIZABLE_STORAGE */\n  0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8860:8891  $.slot := INITIALIZABLE_STORAGE */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8737:8907  function _getInitializableStorage() private pure returns (InitializableStorage storage $) {... */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":7:108   */\ntag_15:\n    /* \"#utility.yul\":43:50   */\n  0x00\n    /* \"#utility.yul\":83:101   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":76:81   */\n  dup3\n    /* \"#utility.yul\":72:102   */\n  and\n    /* \"#utility.yul\":61:102   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:108   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":114:229   */\ntag_16:\n    /* \"#utility.yul\":199:222   */\n  tag_20\n    /* \"#utility.yul\":216:221   */\n  dup2\n    /* \"#utility.yul\":199:222   */\n  tag_15\n  jump\t// in\ntag_20:\n    /* \"#utility.yul\":194:197   */\n  dup3\n    /* \"#utility.yul\":187:223   */\n  mstore\n    /* \"#utility.yul\":114:229   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":235:453   */\ntag_13:\n    /* \"#utility.yul\":326:330   */\n  0x00\n    /* \"#utility.yul\":364:366   */\n  0x20\n    /* \"#utility.yul\":353:362   */\n  dup3\n    /* \"#utility.yul\":349:367   */\n  add\n    /* \"#utility.yul\":341:367   */\n  swap1\n  pop\n    /* \"#utility.yul\":377:446   */\n  tag_22\n    /* \"#utility.yul\":443:444   */\n  0x00\n    /* \"#utility.yul\":432:441   */\n  dup4\n    /* \"#utility.yul\":428:445   */\n  add\n    /* \"#utility.yul\":419:425   */\n  dup5\n    /* \"#utility.yul\":377:446   */\n  tag_16\n  jump\t// in\ntag_22:\n    /* \"#utility.yul\":235:453   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/CampToken.sol\":582:4561  contract CampToken is Initializable, ERC20Upgradeable, ERC20BurnableUpgradeable, OwnableUpgradeable, UUPSUpgradeable... */\ntag_6:\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0xca4b0db001bf2677ca5ac885bd7766c7c4b4b5d0170066d4830e0728bf019f64\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/CampToken.sol\":582:4561  contract CampToken is Initializable, ERC20Upgradeable, ERC20BurnableUpgradeable, OwnableUpgradeable, UUPSUpgradeable... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x7284e416\n      gt\n      tag_30\n      jumpi\n      dup1\n      0xad3cb1cc\n      gt\n      tag_31\n      jumpi\n      dup1\n      0xdd62ed3e\n      gt\n      tag_32\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xe6c9566c\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xfee50359\n      eq\n      tag_29\n      jumpi\n      jump(tag_1)\n    tag_32:\n      dup1\n      0xad3cb1cc\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xb7c422f5\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xc4d66de8\n      eq\n      tag_25\n      jumpi\n      jump(tag_1)\n    tag_31:\n      dup1\n      0x8da5cb5b\n      gt\n      tag_33\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xabab4673\n      eq\n      tag_22\n      jumpi\n      jump(tag_1)\n    tag_33:\n      dup1\n      0x7284e416\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x79cc6790\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x7ce35188\n      eq\n      tag_18\n      jumpi\n      jump(tag_1)\n    tag_30:\n      dup1\n      0x331ee739\n      gt\n      tag_34\n      jumpi\n      dup1\n      0x52d1902d\n      gt\n      tag_35\n      jumpi\n      dup1\n      0x52d1902d\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x54fd4d50\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_15\n      jumpi\n      jump(tag_1)\n    tag_35:\n      dup1\n      0x331ee739\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x42966c68\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x4f1ef286\n      eq\n      tag_11\n      jumpi\n      jump(tag_1)\n    tag_34:\n      dup1\n      0x18b804a5\n      gt\n      tag_36\n      jumpi\n      dup1\n      0x18b804a5\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x2e1a7d4d\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_8\n      jumpi\n      jump(tag_1)\n    tag_36:\n      dup1\n      0x06fdde03\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_4\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3011:3155  function name() public view virtual returns (string memory) {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_37\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_37:\n      pop\n      tag_38\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      tag_40\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5505:5691  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_42\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_42:\n      pop\n      tag_43\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_44\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      tag_46\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      tag_47\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4191:4343  function totalSupply() public view virtual returns (uint256) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_49\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_49:\n      pop\n      tag_50\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      tag_52\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CampToken.sol\":4387:4559  function JPY_ETH() public view returns (uint256)... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_54\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_54:\n      pop\n      tag_55\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      tag_57\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6251:6495  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_58\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_58:\n      pop\n      tag_59\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_60\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_60:\n      tag_62\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      tag_63\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CampToken.sol\":2406:2759  function withdraw(uint amount) external virtual ... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_64\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_64:\n      pop\n      tag_65\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_66\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_66:\n      tag_68\n      jump\t// in\n    tag_65:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4049:4131  function decimals() public view virtual returns (uint8) {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_69\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_69:\n      pop\n      tag_70\n      tag_71\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      tag_72\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CampToken.sol\":2007:2252  function Exchange_ETH_to_CTK() public payable... */\n    tag_9:\n      tag_74\n      tag_75\n      jump\t// in\n    tag_74:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":931:1018  function burn(uint256 value) public virtual {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_76\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_76:\n      pop\n      tag_77\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_78\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_78:\n      tag_79\n      jump\t// in\n    tag_77:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4158:4372  function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {... */\n    tag_11:\n      tag_80\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_81\n      swap2\n      swap1\n      tag_82\n      jump\t// in\n    tag_81:\n      tag_83\n      jump\t// in\n    tag_80:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3705:3839  function proxiableUUID() external view virtual notDelegated returns (bytes32) {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_84\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_84:\n      pop\n      tag_85\n      tag_86\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      tag_87\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CampToken.sol\":1889:1967  function version() external view virtual returns (uint256) {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_89\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_89:\n      pop\n      tag_90\n      tag_91\n      jump\t// in\n    tag_90:\n      mload(0x40)\n      tag_92\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_92:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4401:4572  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_93\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_93:\n      pop\n      tag_94\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_95\n      swap2\n      swap1\n      tag_96\n      jump\t// in\n    tag_95:\n      tag_97\n      jump\t// in\n    tag_94:\n      mload(0x40)\n      tag_98\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_98:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3155:3256  function renounceOwnership() public virtual onlyOwner {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_99\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_99:\n      pop\n      tag_100\n      tag_101\n      jump\t// in\n    tag_100:\n      stop\n        /* \"contracts/CampToken.sol\":1701:1862  function description() external view virtual returns (string memory)... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_102\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_102:\n      pop\n      tag_103\n      tag_104\n      jump\t// in\n    tag_103:\n      mload(0x40)\n      tag_105\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_105:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":1334:1492  function burnFrom(address account, uint256 value) public virtual {... */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_106\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_106:\n      pop\n      tag_107\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_108\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_108:\n      tag_109\n      jump\t// in\n    tag_107:\n      stop\n        /* \"contracts/CampToken.sol\":4131:4383  function ETH_JPY() public view returns (uint256)... */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_110\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_110:\n      pop\n      tag_111\n      tag_112\n      jump\t// in\n    tag_111:\n      mload(0x40)\n      tag_113\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_113:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2441:2585  function owner() public view virtual returns (address) {... */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_114\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_114:\n      pop\n      tag_115\n      tag_116\n      jump\t// in\n    tag_115:\n      mload(0x40)\n      tag_117\n      swap2\n      swap1\n      tag_118\n      jump\t// in\n    tag_117:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3268:3416  function symbol() public view virtual returns (string memory) {... */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_119\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_119:\n      pop\n      tag_120\n      tag_121\n      jump\t// in\n    tag_120:\n      mload(0x40)\n      tag_122\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_122:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4767:4945  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_123\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_123:\n      pop\n      tag_124\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_125\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_125:\n      tag_126\n      jump\t// in\n    tag_124:\n      mload(0x40)\n      tag_127\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_127:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CampToken.sol\":2943:3040  function Burn_CTK(address _sender, uint256 quantity) public... */\n    tag_22:\n      callvalue\n      dup1\n      iszero\n      tag_128\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_128:\n      pop\n      tag_129\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_130\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_130:\n      tag_131\n      jump\t// in\n    tag_129:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1819:1877  string public constant UPGRADE_INTERFACE_VERSION = \"5.0.0\" */\n    tag_23:\n      callvalue\n      dup1\n      iszero\n      tag_132\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_132:\n      pop\n      tag_133\n      tag_134\n      jump\t// in\n    tag_133:\n      mload(0x40)\n      tag_135\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_135:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CampToken.sol\":3065:3574  function get_Latest_EU_Price() public view returns (int256) {... */\n    tag_24:\n      callvalue\n      dup1\n      iszero\n      tag_136\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_136:\n      pop\n      tag_137\n      tag_138\n      jump\t// in\n    tag_137:\n      mload(0x40)\n      tag_139\n      swap2\n      swap1\n      tag_140\n      jump\t// in\n    tag_139:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CampToken.sol\":1367:1563  function initialize(address initialOwner) initializer public {... */\n    tag_25:\n      callvalue\n      dup1\n      iszero\n      tag_141\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_141:\n      pop\n      tag_142\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_143\n      swap2\n      swap1\n      tag_96\n      jump\t// in\n    tag_143:\n      tag_144\n      jump\t// in\n    tag_142:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5003:5198  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_26:\n      callvalue\n      dup1\n      iszero\n      tag_145\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_145:\n      pop\n      tag_146\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_147\n      swap2\n      swap1\n      tag_148\n      jump\t// in\n    tag_147:\n      tag_149\n      jump\t// in\n    tag_146:\n      mload(0x40)\n      tag_150\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_150:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CampToken.sol\":3600:4102  function get_Latest_JU_Price() public view returns (int256) {... */\n    tag_27:\n      callvalue\n      dup1\n      iszero\n      tag_151\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_151:\n      pop\n      tag_152\n      tag_153\n      jump\t// in\n    tag_152:\n      mload(0x40)\n      tag_154\n      swap2\n      swap1\n      tag_140\n      jump\t// in\n    tag_154:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3405:3620  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_28:\n      callvalue\n      dup1\n      iszero\n      tag_155\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_155:\n      pop\n      tag_156\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_157\n      swap2\n      swap1\n      tag_96\n      jump\t// in\n    tag_157:\n      tag_158\n      jump\t// in\n    tag_156:\n      stop\n        /* \"contracts/CampToken.sol\":2256:2402  function getAward() external... */\n    tag_29:\n      callvalue\n      dup1\n      iszero\n      tag_159\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_159:\n      pop\n      tag_160\n      tag_161\n      jump\t// in\n    tag_160:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3011:3155  function name() public view virtual returns (string memory) {... */\n    tag_39:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3056:3069  string memory */\n      0x60\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3081:3103  ERC20Storage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3106:3124  _getERC20Storage() */\n      tag_163\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3106:3122  _getERC20Storage */\n      tag_164\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3106:3124  _getERC20Storage() */\n      jump\t// in\n    tag_163:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3081:3124  ERC20Storage storage $ = _getERC20Storage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3141:3142  $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3141:3148  $._name */\n      0x03\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3134:3148  return $._name */\n      dup1\n      sload\n      tag_165\n      swap1\n      tag_166\n      jump\t// in\n    tag_165:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_167\n      swap1\n      tag_166\n      jump\t// in\n    tag_167:\n      dup1\n      iszero\n      tag_168\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_169\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_168)\n    tag_169:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_170:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_170\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_168:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3011:3155  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5505:5691  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_46:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5578:5582  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5594:5607  address owner */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5610:5622  _msgSender() */\n      tag_172\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5610:5620  _msgSender */\n      tag_173\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5610:5622  _msgSender() */\n      jump\t// in\n    tag_172:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5594:5622  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5632:5663  _approve(owner, spender, value) */\n      tag_174\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5641:5646  owner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5648:5655  spender */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5657:5662  value */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5632:5640  _approve */\n      tag_175\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5632:5663  _approve(owner, spender, value) */\n      jump\t// in\n    tag_174:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5680:5684  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5673:5684  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5505:5691  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4191:4343  function totalSupply() public view virtual returns (uint256) {... */\n    tag_51:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4243:4250  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4262:4284  ERC20Storage storage $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4287:4305  _getERC20Storage() */\n      tag_177\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4287:4303  _getERC20Storage */\n      tag_164\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4287:4305  _getERC20Storage() */\n      jump\t// in\n    tag_177:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4262:4305  ERC20Storage storage $ = _getERC20Storage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4322:4323  $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4322:4336  $._totalSupply */\n      0x02\n      add\n      sload\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4315:4336  return $._totalSupply */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4191:4343  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/CampToken.sol\":4387:4559  function JPY_ETH() public view returns (uint256)... */\n    tag_56:\n        /* \"contracts/CampToken.sol\":4427:4434  uint256 */\n      0x00\n        /* \"contracts/CampToken.sol\":4444:4462  uint ETH_JPY_price */\n      dup1\n        /* \"contracts/CampToken.sol\":4483:4491  10 ** 18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/CampToken.sol\":4470:4479  ETH_JPY() */\n      tag_179\n        /* \"contracts/CampToken.sol\":4470:4477  ETH_JPY */\n      tag_112\n        /* \"contracts/CampToken.sol\":4470:4479  ETH_JPY() */\n      jump\t// in\n    tag_179:\n        /* \"contracts/CampToken.sol\":4465:4491  uint(ETH_JPY()) / 10 ** 18 */\n      tag_180\n      swap2\n      swap1\n      tag_181\n      jump\t// in\n    tag_180:\n        /* \"contracts/CampToken.sol\":4444:4491  uint ETH_JPY_price = uint(ETH_JPY()) / 10 ** 18 */\n      swap1\n      pop\n        /* \"contracts/CampToken.sol\":4497:4508  uint result */\n      0x00\n        /* \"contracts/CampToken.sol\":4522:4535  ETH_JPY_price */\n      dup2\n        /* \"contracts/CampToken.sol\":4511:4519  10 ** 18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/CampToken.sol\":4511:4535  10 ** 18 / ETH_JPY_price */\n      tag_182\n      swap2\n      swap1\n      tag_181\n      jump\t// in\n    tag_182:\n        /* \"contracts/CampToken.sol\":4497:4535  uint result = 10 ** 18 / ETH_JPY_price */\n      swap1\n      pop\n        /* \"contracts/CampToken.sol\":4548:4554  result */\n      dup1\n        /* \"contracts/CampToken.sol\":4541:4554  return result */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/CampToken.sol\":4387:4559  function JPY_ETH() public view returns (uint256)... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6251:6495  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_62:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6338:6342  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6354:6369  address spender */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6372:6384  _msgSender() */\n      tag_184\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6372:6382  _msgSender */\n      tag_173\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6372:6384  _msgSender() */\n      jump\t// in\n    tag_184:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6354:6384  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6394:6431  _spendAllowance(from, spender, value) */\n      tag_185\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6410:6414  from */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6416:6423  spender */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6425:6430  value */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6394:6409  _spendAllowance */\n      tag_186\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6394:6431  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_185:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6441:6467  _transfer(from, to, value) */\n      tag_187\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6451:6455  from */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6457:6459  to */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6461:6466  value */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6441:6450  _transfer */\n      tag_188\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6441:6467  _transfer(from, to, value) */\n      jump\t// in\n    tag_187:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6484:6488  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6477:6488  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6251:6495  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/CampToken.sol\":2406:2759  function withdraw(uint amount) external virtual ... */\n    tag_68:\n        /* \"contracts/CampToken.sol\":2501:2507  amount */\n      dup1\n        /* \"contracts/CampToken.sol\":2471:2485  token_balances */\n      0x02\n        /* \"contracts/CampToken.sol\":2471:2497  token_balances[msg.sender] */\n      0x00\n        /* \"contracts/CampToken.sol\":2486:2496  msg.sender */\n      caller\n        /* \"contracts/CampToken.sol\":2471:2497  token_balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/CampToken.sol\":2471:2507  token_balances[msg.sender] >= amount */\n      lt\n      iszero\n        /* \"contracts/CampToken.sol\":2463:2569  require(token_balances[msg.sender] >= amount, \"Amount must always be less than the number of possessions\") */\n      tag_190\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_191\n      swap1\n      tag_192\n      jump\t// in\n    tag_191:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_190:\n        /* \"contracts/CampToken.sol\":2605:2611  amount */\n      dup1\n        /* \"contracts/CampToken.sol\":2575:2589  token_balances */\n      0x02\n        /* \"contracts/CampToken.sol\":2575:2601  token_balances[msg.sender] */\n      0x00\n        /* \"contracts/CampToken.sol\":2590:2600  msg.sender */\n      caller\n        /* \"contracts/CampToken.sol\":2575:2601  token_balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/CampToken.sol\":2575:2611  token_balances[msg.sender] -= amount */\n      dup3\n      dup3\n      sload\n      tag_193\n      swap2\n      swap1\n      tag_194\n      jump\t// in\n    tag_193:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/CampToken.sol\":2617:2645  Burn_CTK(msg.sender, amount) */\n      tag_195\n        /* \"contracts/CampToken.sol\":2626:2636  msg.sender */\n      caller\n        /* \"contracts/CampToken.sol\":2638:2644  amount */\n      dup3\n        /* \"contracts/CampToken.sol\":2617:2625  Burn_CTK */\n      tag_131\n        /* \"contracts/CampToken.sol\":2617:2645  Burn_CTK(msg.sender, amount) */\n      jump\t// in\n    tag_195:\n        /* \"contracts/CampToken.sol\":2651:2671  uint transfer_amount */\n      0x00\n        /* \"contracts/CampToken.sol\":2695:2703  10 ** 18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/CampToken.sol\":2686:2692  amount */\n      dup3\n        /* \"contracts/CampToken.sol\":2674:2683  JPY_ETH() */\n      tag_196\n        /* \"contracts/CampToken.sol\":2674:2681  JPY_ETH */\n      tag_56\n        /* \"contracts/CampToken.sol\":2674:2683  JPY_ETH() */\n      jump\t// in\n    tag_196:\n        /* \"contracts/CampToken.sol\":2674:2692  JPY_ETH() * amount */\n      tag_197\n      swap2\n      swap1\n      tag_198\n      jump\t// in\n    tag_197:\n        /* \"contracts/CampToken.sol\":2674:2703  JPY_ETH() * amount / 10 ** 18 */\n      tag_199\n      swap2\n      swap1\n      tag_181\n      jump\t// in\n    tag_199:\n        /* \"contracts/CampToken.sol\":2651:2703  uint transfer_amount = JPY_ETH() * amount / 10 ** 18 */\n      swap1\n      pop\n        /* \"contracts/CampToken.sol\":2717:2727  msg.sender */\n      caller\n        /* \"contracts/CampToken.sol\":2709:2737  payable(msg.sender).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CampToken.sol\":2709:2754  payable(msg.sender).transfer(transfer_amount) */\n      0x08fc\n        /* \"contracts/CampToken.sol\":2738:2753  transfer_amount */\n      dup3\n        /* \"contracts/CampToken.sol\":2709:2754  payable(msg.sender).transfer(transfer_amount) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_201\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_201:\n      pop\n        /* \"contracts/CampToken.sol\":2457:2759  {... */\n      pop\n        /* \"contracts/CampToken.sol\":2406:2759  function withdraw(uint amount) external virtual ... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4049:4131  function decimals() public view virtual returns (uint8) {... */\n    tag_71:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4098:4103  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4122:4124  18 */\n      0x12\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4115:4124  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4049:4131  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/CampToken.sol\":2007:2252  function Exchange_ETH_to_CTK() public payable... */\n    tag_75:\n        /* \"contracts/CampToken.sol\":2081:2082  0 */\n      0x00\n        /* \"contracts/CampToken.sol\":2069:2078  msg.value */\n      callvalue\n        /* \"contracts/CampToken.sol\":2069:2082  msg.value > 0 */\n      gt\n        /* \"contracts/CampToken.sol\":2061:2119  require(msg.value > 0, \"Amount must be greater than zero\") */\n      tag_204\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_205\n      swap1\n      tag_206\n      jump\t// in\n    tag_205:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_204:\n        /* \"contracts/CampToken.sol\":2125:2139  uint256 amount */\n      0x00\n        /* \"contracts/CampToken.sol\":2166:2174  10 ** 18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/CampToken.sol\":2154:2163  msg.value */\n      callvalue\n        /* \"contracts/CampToken.sol\":2142:2151  ETH_JPY() */\n      tag_207\n        /* \"contracts/CampToken.sol\":2142:2149  ETH_JPY */\n      tag_112\n        /* \"contracts/CampToken.sol\":2142:2151  ETH_JPY() */\n      jump\t// in\n    tag_207:\n        /* \"contracts/CampToken.sol\":2142:2163  ETH_JPY() * msg.value */\n      tag_208\n      swap2\n      swap1\n      tag_198\n      jump\t// in\n    tag_208:\n        /* \"contracts/CampToken.sol\":2142:2174  ETH_JPY() * msg.value / 10 ** 18 */\n      tag_209\n      swap2\n      swap1\n      tag_181\n      jump\t// in\n    tag_209:\n        /* \"contracts/CampToken.sol\":2125:2174  uint256 amount = ETH_JPY() * msg.value / 10 ** 18 */\n      swap1\n      pop\n        /* \"contracts/CampToken.sol\":2180:2205  _mint(msg.sender, amount) */\n      tag_210\n        /* \"contracts/CampToken.sol\":2186:2196  msg.sender */\n      caller\n        /* \"contracts/CampToken.sol\":2198:2204  amount */\n      dup3\n        /* \"contracts/CampToken.sol\":2180:2185  _mint */\n      tag_211\n        /* \"contracts/CampToken.sol\":2180:2205  _mint(msg.sender, amount) */\n      jump\t// in\n    tag_210:\n        /* \"contracts/CampToken.sol\":2241:2247  amount */\n      dup1\n        /* \"contracts/CampToken.sol\":2211:2225  token_balances */\n      0x02\n        /* \"contracts/CampToken.sol\":2211:2237  token_balances[msg.sender] */\n      0x00\n        /* \"contracts/CampToken.sol\":2226:2236  msg.sender */\n      caller\n        /* \"contracts/CampToken.sol\":2211:2237  token_balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/CampToken.sol\":2211:2247  token_balances[msg.sender] += amount */\n      dup3\n      dup3\n      sload\n      tag_212\n      swap2\n      swap1\n      tag_213\n      jump\t// in\n    tag_212:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/CampToken.sol\":2055:2252  {... */\n      pop\n        /* \"contracts/CampToken.sol\":2007:2252  function Exchange_ETH_to_CTK() public payable... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":931:1018  function burn(uint256 value) public virtual {... */\n    tag_79:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":985:1011  _burn(_msgSender(), value) */\n      tag_215\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":991:1003  _msgSender() */\n      tag_216\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":991:1001  _msgSender */\n      tag_173\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":991:1003  _msgSender() */\n      jump\t// in\n    tag_216:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":1005:1010  value */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":985:990  _burn */\n      tag_217\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":985:1011  _burn(_msgSender(), value) */\n      jump\t// in\n    tag_215:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":931:1018  function burn(uint256 value) public virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4158:4372  function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {... */\n    tag_83:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2653:2666  _checkProxy() */\n      tag_219\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2653:2664  _checkProxy */\n      tag_220\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2653:2666  _checkProxy() */\n      jump\t// in\n    tag_219:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4273:4309  _authorizeUpgrade(newImplementation) */\n      tag_222\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4291:4308  newImplementation */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4273:4290  _authorizeUpgrade */\n      tag_223\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4273:4309  _authorizeUpgrade(newImplementation) */\n      jump\t// in\n    tag_222:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4319:4365  _upgradeToAndCallUUPS(newImplementation, data) */\n      tag_224\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4341:4358  newImplementation */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4360:4364  data */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4319:4340  _upgradeToAndCallUUPS */\n      tag_225\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4319:4365  _upgradeToAndCallUUPS(newImplementation, data) */\n      jump\t// in\n    tag_224:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4158:4372  function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3705:3839  function proxiableUUID() external view virtual notDelegated returns (bytes32) {... */\n    tag_86:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3774:3781  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2924:2944  _checkNotDelegated() */\n      tag_227\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2924:2942  _checkNotDelegated */\n      tag_228\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2924:2944  _checkNotDelegated() */\n      jump\t// in\n    tag_227:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1327:1393  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n      0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3800:3832  ERC1967Utils.IMPLEMENTATION_SLOT */\n      0x00\n      shl\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3793:3832  return ERC1967Utils.IMPLEMENTATION_SLOT */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3705:3839  function proxiableUUID() external view virtual notDelegated returns (bytes32) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/CampToken.sol\":1889:1967  function version() external view virtual returns (uint256) {... */\n    tag_91:\n        /* \"contracts/CampToken.sol\":1939:1946  uint256 */\n      0x00\n        /* \"contracts/CampToken.sol\":1961:1962  1 */\n      0x01\n        /* \"contracts/CampToken.sol\":1954:1962  return 1 */\n      swap1\n      pop\n        /* \"contracts/CampToken.sol\":1889:1967  function version() external view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4401:4572  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_97:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4466:4473  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4485:4507  ERC20Storage storage $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4510:4528  _getERC20Storage() */\n      tag_232\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4510:4526  _getERC20Storage */\n      tag_164\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4510:4528  _getERC20Storage() */\n      jump\t// in\n    tag_232:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4485:4528  ERC20Storage storage $ = _getERC20Storage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4545:4546  $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4545:4556  $._balances */\n      0x00\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4545:4565  $._balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4557:4564  account */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4545:4565  $._balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4538:4565  return $._balances[account] */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4401:4572  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3155:3256  function renounceOwnership() public virtual onlyOwner {... */\n    tag_101:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_234\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_235\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_234:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3219:3249  _transferOwnership(address(0)) */\n      tag_237\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3246:3247  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3219:3237  _transferOwnership */\n      tag_238\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3219:3249  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_237:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3155:3256  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/CampToken.sol\":1701:1862  function description() external view virtual returns (string memory)... */\n    tag_104:\n        /* \"contracts/CampToken.sol\":1755:1768  string memory */\n      0x60\n        /* \"contracts/CampToken.sol\":1780:1857  return \"CampToken <-> ETH. CampToken is StableCoin that relating ETH <-> JPY\" */\n      mload(0x40)\n      dup1\n      0x80\n      add\n      0x40\n      mstore\n      dup1\n      0x44\n      dup2\n      mstore\n      0x20\n      add\n      data_665ce53e9d59c8d2ac0ba934bb50732c0bcd4aa94c46168cb289aff831bc6a83\n      0x44\n      swap2\n      codecopy\n      swap1\n      pop\n        /* \"contracts/CampToken.sol\":1701:1862  function description() external view virtual returns (string memory)... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":1334:1492  function burnFrom(address account, uint256 value) public virtual {... */\n    tag_109:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":1409:1454  _spendAllowance(account, _msgSender(), value) */\n      tag_241\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":1425:1432  account */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":1434:1446  _msgSender() */\n      tag_242\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":1434:1444  _msgSender */\n      tag_173\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":1434:1446  _msgSender() */\n      jump\t// in\n    tag_242:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":1448:1453  value */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":1409:1424  _spendAllowance */\n      tag_186\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":1409:1454  _spendAllowance(account, _msgSender(), value) */\n      jump\t// in\n    tag_241:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":1464:1485  _burn(account, value) */\n      tag_243\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":1470:1477  account */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":1479:1484  value */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":1464:1469  _burn */\n      tag_217\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":1464:1485  _burn(account, value) */\n      jump\t// in\n    tag_243:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":1334:1492  function burnFrom(address account, uint256 value) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/CampToken.sol\":4131:4383  function ETH_JPY() public view returns (uint256)... */\n    tag_112:\n        /* \"contracts/CampToken.sol\":4171:4178  uint256 */\n      0x00\n        /* \"contracts/CampToken.sol\":4188:4205  int USD_ETH_price */\n      dup1\n        /* \"contracts/CampToken.sol\":4208:4229  get_Latest_EU_Price() */\n      tag_245\n        /* \"contracts/CampToken.sol\":4208:4227  get_Latest_EU_Price */\n      tag_138\n        /* \"contracts/CampToken.sol\":4208:4229  get_Latest_EU_Price() */\n      jump\t// in\n    tag_245:\n        /* \"contracts/CampToken.sol\":4188:4229  int USD_ETH_price = get_Latest_EU_Price() */\n      swap1\n      pop\n        /* \"contracts/CampToken.sol\":4235:4252  int USD_JPY_price */\n      0x00\n        /* \"contracts/CampToken.sol\":4265:4286  get_Latest_JU_Price() */\n      tag_246\n        /* \"contracts/CampToken.sol\":4265:4284  get_Latest_JU_Price */\n      tag_153\n        /* \"contracts/CampToken.sol\":4265:4286  get_Latest_JU_Price() */\n      jump\t// in\n    tag_246:\n        /* \"contracts/CampToken.sol\":4255:4262  10 ** 8 */\n      0x05f5e100\n        /* \"contracts/CampToken.sol\":4255:4286  10 ** 8 / get_Latest_JU_Price() */\n      tag_247\n      swap2\n      swap1\n      tag_248\n      jump\t// in\n    tag_247:\n        /* \"contracts/CampToken.sol\":4235:4286  int USD_JPY_price = 10 ** 8 / get_Latest_JU_Price() */\n      swap1\n      pop\n        /* \"contracts/CampToken.sol\":4293:4304  uint result */\n      0x00\n        /* \"contracts/CampToken.sol\":4351:4359  10 ** 10 */\n      0x02540be400\n        /* \"contracts/CampToken.sol\":4334:4347  USD_JPY_price */\n      dup3\n        /* \"contracts/CampToken.sol\":4312:4325  USD_ETH_price */\n      dup5\n        /* \"contracts/CampToken.sol\":4307:4348  uint(USD_ETH_price) * uint(USD_JPY_price) */\n      tag_249\n      swap2\n      swap1\n      tag_198\n      jump\t// in\n    tag_249:\n        /* \"contracts/CampToken.sol\":4307:4359  uint(USD_ETH_price) * uint(USD_JPY_price) * 10 ** 10 */\n      tag_250\n      swap2\n      swap1\n      tag_198\n      jump\t// in\n    tag_250:\n        /* \"contracts/CampToken.sol\":4293:4359  uint result = uint(USD_ETH_price) * uint(USD_JPY_price) * 10 ** 10 */\n      swap1\n      pop\n        /* \"contracts/CampToken.sol\":4372:4378  result */\n      dup1\n        /* \"contracts/CampToken.sol\":4365:4378  return result */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/CampToken.sol\":4131:4383  function ETH_JPY() public view returns (uint256)... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2441:2585  function owner() public view virtual returns (address) {... */\n    tag_116:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2487:2494  address */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2506:2530  OwnableStorage storage $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2533:2553  _getOwnableStorage() */\n      tag_252\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2533:2551  _getOwnableStorage */\n      tag_253\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2533:2553  _getOwnableStorage() */\n      jump\t// in\n    tag_252:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2506:2553  OwnableStorage storage $ = _getOwnableStorage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2570:2571  $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2570:2578  $._owner */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2563:2578  return $._owner */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2441:2585  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3268:3416  function symbol() public view virtual returns (string memory) {... */\n    tag_121:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3315:3328  string memory */\n      0x60\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3340:3362  ERC20Storage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3365:3383  _getERC20Storage() */\n      tag_255\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3365:3381  _getERC20Storage */\n      tag_164\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3365:3383  _getERC20Storage() */\n      jump\t// in\n    tag_255:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3340:3383  ERC20Storage storage $ = _getERC20Storage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3400:3401  $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3400:3409  $._symbol */\n      0x04\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3393:3409  return $._symbol */\n      dup1\n      sload\n      tag_256\n      swap1\n      tag_166\n      jump\t// in\n    tag_256:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_257\n      swap1\n      tag_166\n      jump\t// in\n    tag_257:\n      dup1\n      iszero\n      tag_258\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_259\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_258)\n    tag_259:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_260:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_260\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_258:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3268:3416  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4767:4945  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_126:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4836:4840  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4852:4865  address owner */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4868:4880  _msgSender() */\n      tag_262\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4868:4878  _msgSender */\n      tag_173\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4868:4880  _msgSender() */\n      jump\t// in\n    tag_262:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4852:4880  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4890:4917  _transfer(owner, to, value) */\n      tag_263\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4900:4905  owner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4907:4909  to */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4911:4916  value */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4890:4899  _transfer */\n      tag_188\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4890:4917  _transfer(owner, to, value) */\n      jump\t// in\n    tag_263:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4934:4938  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4927:4938  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4767:4945  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/CampToken.sol\":2943:3040  function Burn_CTK(address _sender, uint256 quantity) public... */\n    tag_131:\n        /* \"contracts/CampToken.sol\":3011:3035  _burn(_sender, quantity) */\n      tag_265\n        /* \"contracts/CampToken.sol\":3017:3024  _sender */\n      dup3\n        /* \"contracts/CampToken.sol\":3026:3034  quantity */\n      dup3\n        /* \"contracts/CampToken.sol\":3011:3016  _burn */\n      tag_217\n        /* \"contracts/CampToken.sol\":3011:3035  _burn(_sender, quantity) */\n      jump\t// in\n    tag_265:\n        /* \"contracts/CampToken.sol\":2943:3040  function Burn_CTK(address _sender, uint256 quantity) public... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1819:1877  string public constant UPGRADE_INTERFACE_VERSION = \"5.0.0\" */\n    tag_134:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x05\n      dup2\n      mstore\n      0x20\n      add\n      0x352e302e30000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/CampToken.sol\":3065:3574  function get_Latest_EU_Price() public view returns (int256) {... */\n    tag_138:\n        /* \"contracts/CampToken.sol\":3117:3123  int256 */\n      0x00\n        /* \"contracts/CampToken.sol\":3217:3229  int256 price */\n      dup1\n        /* \"contracts/CampToken.sol\":3497:3504  ETH_USD */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CampToken.sol\":3497:3520  ETH_USD.latestRoundData */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xfeaf968c\n        /* \"contracts/CampToken.sol\":3497:3522  ETH_USD.latestRoundData() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0xa0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_268\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_268:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_269\n      swap2\n      swap1\n      tag_270\n      jump\t// in\n    tag_269:\n        /* \"contracts/CampToken.sol\":3131:3522  (... */\n      pop\n      pop\n      pop\n      swap2\n      pop\n      pop\n        /* \"contracts/CampToken.sol\":3536:3541  price */\n      dup1\n        /* \"contracts/CampToken.sol\":3529:3541  return price */\n      swap2\n      pop\n      pop\n        /* \"contracts/CampToken.sol\":3065:3574  function get_Latest_EU_Price() public view returns (int256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/CampToken.sol\":1367:1563  function initialize(address initialOwner) initializer public {... */\n    tag_144:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4158:4188  InitializableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4191:4217  _getInitializableStorage() */\n      tag_272\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4191:4215  _getInitializableStorage */\n      tag_273\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4191:4217  _getInitializableStorage() */\n      jump\t// in\n    tag_272:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4158:4217  InitializableStorage storage $ = _getInitializableStorage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4279:4298  bool isTopLevelCall */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4302:4303  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4302:4317  $._initializing */\n      0x00\n      add\n      0x08\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4301:4317  !$._initializing */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4279:4317  bool isTopLevelCall = !$._initializing */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4327:4345  uint64 initialized */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4348:4349  $ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4348:4362  $._initialized */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4327:4362  uint64 initialized = $._initialized */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4706:4723  bool initialSetup */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4741:4742  0 */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4737  initialized */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4742  initialized == 0 */\n      0xffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4760  initialized == 0 && isTopLevelCall */\n      dup1\n      iszero\n      tag_274\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4746:4760  isTopLevelCall */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4760  initialized == 0 && isTopLevelCall */\n    tag_274:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4706:4760  bool initialSetup = initialized == 0 && isTopLevelCall */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4770:4787  bool construction */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4805:4806  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4801  initialized */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4806  initialized == 1 */\n      0xffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4840  initialized == 1 && address(this).code.length == 0 */\n      dup1\n      iszero\n      tag_275\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4839:4840  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4818:4822  this */\n      address\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4810:4835  address(this).code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4810:4840  address(this).code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4840  initialized == 1 && address(this).code.length == 0 */\n    tag_275:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4770:4840  bool construction = initialized == 1 && address(this).code.length == 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4856:4868  initialSetup */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4855:4868  !initialSetup */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4855:4885  !initialSetup && !construction */\n      dup1\n      iszero\n      tag_276\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4873:4885  construction */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4872:4885  !construction */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4855:4885  !initialSetup && !construction */\n    tag_276:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4851:4942  if (!initialSetup && !construction) {... */\n      iszero\n      tag_277\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4908:4931  InvalidInitialization() */\n      mload(0x40)\n      0xf92ee8a900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4851:4942  if (!initialSetup && !construction) {... */\n    tag_277:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4968:4969  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4951:4952  $ */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4951:4965  $._initialized */\n      0x00\n      add\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4951:4969  $._initialized = 1 */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4983:4997  isTopLevelCall */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4979:5046  if (isTopLevelCall) {... */\n      iszero\n      tag_278\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5031:5035  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5013:5014  $ */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5013:5028  $._initializing */\n      0x00\n      add\n      0x08\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5013:5035  $._initializing = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4979:5046  if (isTopLevelCall) {... */\n    tag_278:\n        /* \"contracts/CampToken.sol\":1434:1466  __ERC20_init(\"CampToken\", \"CTK\") */\n      tag_280\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x09\n      dup2\n      mstore\n      0x20\n      add\n      0x43616d70546f6b656e0000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x03\n      dup2\n      mstore\n      0x20\n      add\n      0x43544b0000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n        /* \"contracts/CampToken.sol\":1434:1446  __ERC20_init */\n      tag_281\n        /* \"contracts/CampToken.sol\":1434:1466  __ERC20_init(\"CampToken\", \"CTK\") */\n      jump\t// in\n    tag_280:\n        /* \"contracts/CampToken.sol\":1472:1494  __ERC20Burnable_init() */\n      tag_282\n        /* \"contracts/CampToken.sol\":1472:1492  __ERC20Burnable_init */\n      tag_283\n        /* \"contracts/CampToken.sol\":1472:1494  __ERC20Burnable_init() */\n      jump\t// in\n    tag_282:\n        /* \"contracts/CampToken.sol\":1500:1528  __Ownable_init(initialOwner) */\n      tag_284\n        /* \"contracts/CampToken.sol\":1515:1527  initialOwner */\n      dup7\n        /* \"contracts/CampToken.sol\":1500:1514  __Ownable_init */\n      tag_285\n        /* \"contracts/CampToken.sol\":1500:1528  __Ownable_init(initialOwner) */\n      jump\t// in\n    tag_284:\n        /* \"contracts/CampToken.sol\":1534:1558  __UUPSUpgradeable_init() */\n      tag_286\n        /* \"contracts/CampToken.sol\":1534:1556  __UUPSUpgradeable_init */\n      tag_287\n        /* \"contracts/CampToken.sol\":1534:1558  __UUPSUpgradeable_init() */\n      jump\t// in\n    tag_286:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5070:5084  isTopLevelCall */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5066:5167  if (isTopLevelCall) {... */\n      iszero\n      tag_288\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5118:5123  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5100:5101  $ */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5100:5115  $._initializing */\n      0x00\n      add\n      0x08\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5100:5123  $._initializing = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5142:5156  Initialized(1) */\n      0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5154:5155  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5142:5156  Initialized(1) */\n      mload(0x40)\n      tag_289\n      swap2\n      swap1\n      tag_290\n      jump\t// in\n    tag_289:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5066:5167  if (isTopLevelCall) {... */\n    tag_288:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4092:5173  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/CampToken.sol\":1367:1563  function initialize(address initialOwner) initializer public {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5003:5198  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_149:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5083:5090  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5102:5124  ERC20Storage storage $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5127:5145  _getERC20Storage() */\n      tag_292\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5127:5143  _getERC20Storage */\n      tag_164\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5127:5145  _getERC20Storage() */\n      jump\t// in\n    tag_292:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5102:5145  ERC20Storage storage $ = _getERC20Storage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5162:5163  $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5162:5175  $._allowances */\n      0x01\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5162:5182  $._allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5176:5181  owner */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5162:5182  $._allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5162:5191  $._allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5183:5190  spender */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5162:5191  $._allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5155:5191  return $._allowances[owner][spender] */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5003:5198  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/CampToken.sol\":3600:4102  function get_Latest_JU_Price() public view returns (int256) {... */\n    tag_153:\n        /* \"contracts/CampToken.sol\":3652:3658  int256 */\n      0x00\n        /* \"contracts/CampToken.sol\":3752:3764  int256 price */\n      dup1\n        /* \"contracts/CampToken.sol\":4032:4039  USD_JPY */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CampToken.sol\":4032:4055  USD_JPY.latestRoundData */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xfeaf968c\n        /* \"contracts/CampToken.sol\":4032:4057  USD_JPY.latestRoundData() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0xa0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_295\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_295:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_296\n      swap2\n      swap1\n      tag_270\n      jump\t// in\n    tag_296:\n        /* \"contracts/CampToken.sol\":3666:4057  (... */\n      pop\n      pop\n      pop\n      swap2\n      pop\n      pop\n        /* \"contracts/CampToken.sol\":4070:4075  price */\n      dup1\n        /* \"contracts/CampToken.sol\":4063:4075  return price */\n      swap2\n      pop\n      pop\n        /* \"contracts/CampToken.sol\":3600:4102  function get_Latest_JU_Price() public view returns (int256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3405:3620  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_158:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_298\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_235\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_298:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3509:3510  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3489:3511  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3489:3497  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3489:3511  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3485:3576  if (newOwner == address(0)) {... */\n      tag_300\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3562:3563  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3534:3565  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_301\n      swap2\n      swap1\n      tag_118\n      jump\t// in\n    tag_301:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3485:3576  if (newOwner == address(0)) {... */\n    tag_300:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3585:3613  _transferOwnership(newOwner) */\n      tag_302\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3604:3612  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3585:3603  _transferOwnership */\n      tag_238\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3585:3613  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_302:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3405:3620  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/CampToken.sol\":2256:2402  function getAward() external... */\n    tag_161:\n        /* \"contracts/CampToken.sol\":2293:2307  uint256 amount */\n      0x00\n        /* \"contracts/CampToken.sol\":2310:2324  500 * 10 ** 18 */\n      0x1b1ae4d6e2ef500000\n        /* \"contracts/CampToken.sol\":2293:2324  uint256 amount = 500 * 10 ** 18 */\n      swap1\n      pop\n        /* \"contracts/CampToken.sol\":2330:2355  _mint(msg.sender, amount) */\n      tag_304\n        /* \"contracts/CampToken.sol\":2336:2346  msg.sender */\n      caller\n        /* \"contracts/CampToken.sol\":2348:2354  amount */\n      dup3\n        /* \"contracts/CampToken.sol\":2330:2335  _mint */\n      tag_211\n        /* \"contracts/CampToken.sol\":2330:2355  _mint(msg.sender, amount) */\n      jump\t// in\n    tag_304:\n        /* \"contracts/CampToken.sol\":2391:2397  amount */\n      dup1\n        /* \"contracts/CampToken.sol\":2361:2375  token_balances */\n      0x02\n        /* \"contracts/CampToken.sol\":2361:2387  token_balances[msg.sender] */\n      0x00\n        /* \"contracts/CampToken.sol\":2376:2386  msg.sender */\n      caller\n        /* \"contracts/CampToken.sol\":2361:2387  token_balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/CampToken.sol\":2361:2397  token_balances[msg.sender] += amount */\n      dup3\n      dup3\n      sload\n      tag_305\n      swap2\n      swap1\n      tag_213\n      jump\t// in\n    tag_305:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/CampToken.sol\":2287:2402  {... */\n      pop\n        /* \"contracts/CampToken.sol\":2256:2402  function getAward() external... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2242:2395  function _getERC20Storage() private pure returns (ERC20Storage storage $) {... */\n    tag_164:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2292:2314  ERC20Storage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2359:2379  ERC20StorageLocation */\n      0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2349:2379  $.slot := ERC20StorageLocation */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2242:2395  function _getERC20Storage() private pure returns (ERC20Storage storage $) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":887:983  function _msgSender() internal view virtual returns (address) {... */\n    tag_173:\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":940:947  address */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":959:976  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":887:983  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10264:10392  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_175:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10348:10385  _approve(owner, spender, value, true) */\n      tag_309\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10357:10362  owner */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10364:10371  spender */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10373:10378  value */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10380:10384  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10348:10356  _approve */\n      tag_310\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10348:10385  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_309:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10264:10392  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11993:12470  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_186:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12092:12116  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12119:12144  allowance(owner, spender) */\n      tag_312\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12129:12134  owner */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12136:12143  spender */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12119:12128  allowance */\n      tag_149\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12119:12144  allowance(owner, spender) */\n      jump\t// in\n    tag_312:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12092:12144  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12178:12195  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12158:12174  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12158:12195  currentAllowance != type(uint256).max */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12154:12464  if (currentAllowance != type(uint256).max) {... */\n      tag_313\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12234:12239  value */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12215:12231  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12215:12239  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12211:12341  if (currentAllowance < value) {... */\n      iszero\n      tag_314\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12293:12300  spender */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12302:12318  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12320:12325  value */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12266:12326  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_315\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_316\n      jump\t// in\n    tag_315:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12211:12341  if (currentAllowance < value) {... */\n    tag_314:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12382:12439  _approve(owner, spender, currentAllowance - value, false) */\n      tag_317\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12391:12396  owner */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12398:12405  spender */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12426:12431  value */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12407:12423  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12407:12431  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12433:12438  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12382:12390  _approve */\n      tag_310\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12382:12439  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_317:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12154:12464  if (currentAllowance != type(uint256).max) {... */\n    tag_313:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12082:12470  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11993:12470  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6868:7168  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_188:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6967:6968  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6951:6969  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6951:6955  from */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6951:6969  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6947:7033  if (from == address(0)) {... */\n      tag_319\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7019:7020  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6992:7022  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_320\n      swap2\n      swap1\n      tag_118\n      jump\t// in\n    tag_320:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6947:7033  if (from == address(0)) {... */\n    tag_319:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7060:7061  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7046:7062  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7046:7048  to */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7046:7062  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7042:7128  if (to == address(0)) {... */\n      tag_321\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7114:7115  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7085:7117  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_322\n      swap2\n      swap1\n      tag_118\n      jump\t// in\n    tag_322:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7042:7128  if (to == address(0)) {... */\n    tag_321:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7137:7161  _update(from, to, value) */\n      tag_323\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7145:7149  from */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7151:7153  to */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7155:7160  value */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7137:7144  _update */\n      tag_324\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7137:7161  _update(from, to, value) */\n      jump\t// in\n    tag_323:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6868:7168  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8996:9204  function _mint(address account, uint256 value) internal {... */\n    tag_211:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9085:9086  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9066:9087  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9066:9073  account */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9066:9087  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9062:9153  if (account == address(0)) {... */\n      tag_326\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9139:9140  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9110:9142  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_327\n      swap2\n      swap1\n      tag_118\n      jump\t// in\n    tag_327:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9062:9153  if (account == address(0)) {... */\n    tag_326:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9162:9197  _update(address(0), account, value) */\n      tag_328\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9178:9179  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9182:9189  account */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9191:9196  value */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9162:9169  _update */\n      tag_324\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9162:9197  _update(address(0), account, value) */\n      jump\t// in\n    tag_328:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8996:9204  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9522:9728  function _burn(address account, uint256 value) internal {... */\n    tag_217:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9611:9612  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9592:9613  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9592:9599  account */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9592:9613  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9588:9677  if (account == address(0)) {... */\n      tag_330\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9663:9664  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9636:9666  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_331\n      swap2\n      swap1\n      tag_118\n      jump\t// in\n    tag_331:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9588:9677  if (account == address(0)) {... */\n    tag_330:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9686:9721  _update(account, address(0), value) */\n      tag_332\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9694:9701  account */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9711:9712  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9715:9720  value */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9686:9693  _update */\n      tag_324\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9686:9721  _update(account, address(0), value) */\n      jump\t// in\n    tag_332:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9522:9728  function _burn(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4599:4911  function _checkProxy() internal view virtual {... */\n    tag_220:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4688:4694  __self */\n      immutable(\"0xca4b0db001bf2677ca5ac885bd7766c7c4b4b5d0170066d4830e0728bf019f64\")\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4671:4694  address(this) == __self */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4679:4683  this */\n      address\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4671:4694  address(this) == __self */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4671:4791  address(this) == __self || // Must be called through delegatecall... */\n      dup1\n      tag_334\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4785:4791  __self */\n      immutable(\"0xca4b0db001bf2677ca5ac885bd7766c7c4b4b5d0170066d4830e0728bf019f64\")\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4749:4791  ERC1967Utils.getImplementation() != __self */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4749:4781  ERC1967Utils.getImplementation() */\n      tag_335\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4749:4779  ERC1967Utils.getImplementation */\n      tag_336\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4749:4781  ERC1967Utils.getImplementation() */\n      jump\t// in\n    tag_335:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4749:4791  ERC1967Utils.getImplementation() != __self */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4671:4791  address(this) == __self || // Must be called through delegatecall... */\n    tag_334:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4654:4905  if (... */\n      iszero\n      tag_337\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4865:4894  UUPSUnauthorizedCallContext() */\n      mload(0x40)\n      0xe07c8dba00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4654:4905  if (... */\n    tag_337:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4599:4911  function _checkProxy() internal view virtual {... */\n      jump\t// out\n        /* \"contracts/CampToken.sol\":1567:1671  function _authorizeUpgrade(address newImplementation)... */\n    tag_223:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_339\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_235\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_339:\n        /* \"contracts/CampToken.sol\":1567:1671  function _authorizeUpgrade(address newImplementation)... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6052:6590  function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {... */\n    tag_225:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6169:6186  newImplementation */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6151:6201  IERC1822Proxiable(newImplementation).proxiableUUID */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x52d1902d\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6151:6203  IERC1822Proxiable(newImplementation).proxiableUUID() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_342\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_343\n      swap2\n      swap1\n      tag_344\n      jump\t// in\n    tag_343:\n      0x01\n    tag_342:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6147:6584  try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {... */\n      tag_345\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6555:6572  newImplementation */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6513:6573  ERC1967Utils.ERC1967InvalidImplementation(newImplementation) */\n      mload(0x40)\n      0x4c9c8ce300000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_349\n      swap2\n      swap1\n      tag_118\n      jump\t// in\n    tag_349:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6147:6584  try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {... */\n    tag_345:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1327:1393  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n      0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6253:6285  ERC1967Utils.IMPLEMENTATION_SLOT */\n      0x00\n      shl\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6245:6249  slot */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6245:6285  slot != ERC1967Utils.IMPLEMENTATION_SLOT */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6241:6361  if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {... */\n      tag_351\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6341:6345  slot */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6312:6346  UUPSUnsupportedProxiableUUID(slot) */\n      mload(0x40)\n      0xaa1d49a400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_352\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_352:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6241:6361  if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {... */\n    tag_351:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6374:6428  ERC1967Utils.upgradeToAndCall(newImplementation, data) */\n      tag_353\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6404:6421  newImplementation */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6423:6427  data */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6374:6403  ERC1967Utils.upgradeToAndCall */\n      tag_354\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6374:6428  ERC1967Utils.upgradeToAndCall(newImplementation, data) */\n      jump\t// in\n    tag_353:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6204:6439  returns (bytes32 slot) {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6052:6590  function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5028:5241  function _checkNotDelegated() internal view virtual {... */\n    tag_228:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5111:5117  __self */\n      immutable(\"0xca4b0db001bf2677ca5ac885bd7766c7c4b4b5d0170066d4830e0728bf019f64\")\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5094:5117  address(this) != __self */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5102:5106  this */\n      address\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5094:5117  address(this) != __self */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5090:5235  if (address(this) != __self) {... */\n      tag_356\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5195:5224  UUPSUnauthorizedCallContext() */\n      mload(0x40)\n      0xe07c8dba00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5090:5235  if (address(this) != __self) {... */\n    tag_356:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5028:5241  function _checkNotDelegated() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2658:2820  function _checkOwner() internal view virtual {... */\n    tag_235:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2728:2740  _msgSender() */\n      tag_358\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2728:2738  _msgSender */\n      tag_173\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2728:2740  _msgSender() */\n      jump\t// in\n    tag_358:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2740  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2724  owner() */\n      tag_359\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2722  owner */\n      tag_116\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2724  owner() */\n      jump\t// in\n    tag_359:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2740  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2713:2814  if (owner() != _msgSender()) {... */\n      tag_360\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2790:2802  _msgSender() */\n      tag_361\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2790:2800  _msgSender */\n      tag_173\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2790:2802  _msgSender() */\n      jump\t// in\n    tag_361:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2763:2803  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_362\n      swap2\n      swap1\n      tag_118\n      jump\t// in\n    tag_362:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2713:2814  if (owner() != _msgSender()) {... */\n    tag_360:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2658:2820  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3774:4022  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_238:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3847:3871  OwnableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3874:3894  _getOwnableStorage() */\n      tag_364\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3874:3892  _getOwnableStorage */\n      tag_253\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3874:3894  _getOwnableStorage() */\n      jump\t// in\n    tag_364:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3847:3894  OwnableStorage storage $ = _getOwnableStorage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3904:3920  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3923:3924  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3923:3931  $._owner */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3904:3931  address oldOwner = $._owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3952:3960  newOwner */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3941:3942  $ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3941:3949  $._owner */\n      0x00\n      add\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3941:3960  $._owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":4006:4014  newOwner */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3975:4015  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3996:4004  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3975:4015  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3837:4022  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3774:4022  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1192:1351  function _getOwnableStorage() private pure returns (OwnableStorage storage $) {... */\n    tag_253:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1244:1268  OwnableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1313:1335  OwnableStorageLocation */\n      0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1303:1335  $.slot := OwnableStorageLocation */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1192:1351  function _getOwnableStorage() private pure returns (OwnableStorage storage $) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8737:8907  function _getInitializableStorage() private pure returns (InitializableStorage storage $) {... */\n    tag_273:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8795:8825  InitializableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8870:8891  INITIALIZABLE_STORAGE */\n      0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8860:8891  $.slot := INITIALIZABLE_STORAGE */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8737:8907  function _getInitializableStorage() private pure returns (InitializableStorage storage $) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2577:2724  function __ERC20_init(string memory name_, string memory symbol_) internal onlyInitializing {... */\n    tag_281:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_368\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_369\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_368:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2679:2717  __ERC20_init_unchained(name_, symbol_) */\n      tag_371\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2702:2707  name_ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2709:2716  symbol_ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2679:2701  __ERC20_init_unchained */\n      tag_372\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2679:2717  __ERC20_init_unchained(name_, symbol_) */\n      jump\t// in\n    tag_371:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2577:2724  function __ERC20_init(string memory name_, string memory symbol_) internal onlyInitializing {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":666:731  function __ERC20Burnable_init() internal onlyInitializing {... */\n    tag_283:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_374\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_369\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_374:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":666:731  function __ERC20Burnable_init() internal onlyInitializing {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1847:1974  function __Ownable_init(address initialOwner) internal onlyInitializing {... */\n    tag_285:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_377\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_369\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_377:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1929:1967  __Ownable_init_unchained(initialOwner) */\n      tag_379\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1954:1966  initialOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1929:1953  __Ownable_init_unchained */\n      tag_380\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1929:1967  __Ownable_init_unchained(initialOwner) */\n      jump\t// in\n    tag_379:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1847:1974  function __Ownable_init(address initialOwner) internal onlyInitializing {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2968:3035  function __UUPSUpgradeable_init() internal onlyInitializing {... */\n    tag_287:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_382\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_369\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_382:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2968:3035  function __UUPSUpgradeable_init() internal onlyInitializing {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11224:11711  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_310:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11332:11354  ERC20Storage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11357:11375  _getERC20Storage() */\n      tag_385\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11357:11373  _getERC20Storage */\n      tag_164\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11357:11375  _getERC20Storage() */\n      jump\t// in\n    tag_385:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11332:11375  ERC20Storage storage $ = _getERC20Storage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11406:11407  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11389:11408  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11389:11394  owner */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11389:11408  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11385:11474  if (owner == address(0)) {... */\n      tag_386\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11460:11461  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11431:11463  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_387\n      swap2\n      swap1\n      tag_118\n      jump\t// in\n    tag_387:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11385:11474  if (owner == address(0)) {... */\n    tag_386:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11506:11507  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11487:11508  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11487:11494  spender */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11487:11508  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11483:11573  if (spender == address(0)) {... */\n      tag_388\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11559:11560  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11531:11562  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_389\n      swap2\n      swap1\n      tag_118\n      jump\t// in\n    tag_389:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11483:11573  if (spender == address(0)) {... */\n    tag_388:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11614:11619  value */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11582:11583  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11582:11595  $._allowances */\n      0x01\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11582:11602  $._allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11596:11601  owner */\n      dup8\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11582:11602  $._allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11582:11611  $._allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11603:11610  spender */\n      dup7\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11582:11611  $._allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11582:11619  $._allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11633:11642  emitEvent */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11629:11705  if (emitEvent) {... */\n      iszero\n      tag_390\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11679:11686  spender */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11663:11694  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11672:11677  owner */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11663:11694  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11688:11693  value */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11663:11694  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_391\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_391:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11629:11705  if (emitEvent) {... */\n    tag_390:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11322:11711  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11224:11711  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7483:8653  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_324:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7568:7590  ERC20Storage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7593:7611  _getERC20Storage() */\n      tag_393\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7593:7609  _getERC20Storage */\n      tag_164\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7593:7611  _getERC20Storage() */\n      jump\t// in\n    tag_393:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7568:7611  ERC20Storage storage $ = _getERC20Storage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7641:7642  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7625:7643  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7625:7629  from */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7625:7643  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7621:8167  if (from == address(0)) {... */\n      tag_394\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7779:7784  value */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7761:7762  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7761:7775  $._totalSupply */\n      0x02\n      add\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7761:7784  $._totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_395\n      swap2\n      swap1\n      tag_213\n      jump\t// in\n    tag_395:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7621:8167  if (from == address(0)) {... */\n      jump(tag_396)\n    tag_394:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7815:7834  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7837:7838  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7837:7848  $._balances */\n      0x00\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7837:7854  $._balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7849:7853  from */\n      dup7\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7837:7854  $._balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7815:7854  uint256 fromBalance = $._balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7886:7891  value */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7872:7883  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7872:7891  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7868:7983  if (fromBalance < value) {... */\n      iszero\n      tag_397\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7943:7947  from */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7949:7960  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7962:7967  value */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7918:7968  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_398\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_316\n      jump\t// in\n    tag_398:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7868:7983  if (fromBalance < value) {... */\n    tag_397:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8137:8142  value */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8123:8134  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8123:8142  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8103:8104  $ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8103:8114  $._balances */\n      0x00\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8103:8120  $._balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8115:8119  from */\n      dup8\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8103:8120  $._balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8103:8142  $._balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7801:8167  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7621:8167  if (from == address(0)) {... */\n    tag_396:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8195:8196  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8181:8197  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8181:8183  to */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8181:8197  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8177:8606  if (to == address(0)) {... */\n      tag_399\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8362:8367  value */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8344:8345  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8344:8358  $._totalSupply */\n      0x02\n      add\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8344:8367  $._totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8177:8606  if (to == address(0)) {... */\n      jump(tag_400)\n    tag_399:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8576:8581  value */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8557:8558  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8557:8568  $._balances */\n      0x00\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8557:8572  $._balances[to] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8569:8571  to */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8557:8572  $._balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8557:8581  $._balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8177:8606  if (to == address(0)) {... */\n    tag_400:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8636:8638  to */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8621:8646  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8630:8634  from */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8621:8646  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8640:8645  value */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8621:8646  Transfer(from, to, value) */\n      mload(0x40)\n      tag_401\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_401:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7558:8653  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7483:8653  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1957:2095  function getImplementation() internal view returns (address) {... */\n    tag_336:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2009:2016  address */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2035:2082  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT) */\n      tag_403\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1327:1393  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n      0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2062:2081  IMPLEMENTATION_SLOT */\n      0x00\n      shl\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2035:2061  StorageSlot.getAddressSlot */\n      tag_404\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2035:2082  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT) */\n      jump\t// in\n    tag_403:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2035:2088  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2028:2088  return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1957:2095  function getImplementation() internal view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2779:3114  function upgradeToAndCall(address newImplementation, bytes memory data) internal {... */\n    tag_354:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2870:2907  _setImplementation(newImplementation) */\n      tag_406\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2889:2906  newImplementation */\n      dup3\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2870:2888  _setImplementation */\n      tag_407\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2870:2907  _setImplementation(newImplementation) */\n      jump\t// in\n    tag_406:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2931:2948  newImplementation */\n      dup2\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2922:2949  Upgraded(newImplementation) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2978:2979  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2964:2968  data */\n      dup2\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2964:2975  data.length */\n      mload\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2964:2979  data.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2960:3108  if (data.length > 0) {... */\n      iszero\n      tag_408\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2995:3048  Address.functionDelegateCall(newImplementation, data) */\n      tag_409\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":3024:3041  newImplementation */\n      dup3\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":3043:3047  data */\n      dup3\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2995:3023  Address.functionDelegateCall */\n      tag_410\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2995:3048  Address.functionDelegateCall(newImplementation, data) */\n      jump\t// in\n    tag_409:\n      pop\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2960:3108  if (data.length > 0) {... */\n      jump(tag_411)\n    tag_408:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":3079:3097  _checkNonPayable() */\n      tag_412\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":3079:3095  _checkNonPayable */\n      tag_413\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":3079:3097  _checkNonPayable() */\n      jump\t// in\n    tag_412:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2960:3108  if (data.length > 0) {... */\n    tag_411:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2779:3114  function upgradeToAndCall(address newImplementation, bytes memory data) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7084:7225  function _checkInitializing() internal view virtual {... */\n    tag_369:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7151:7168  _isInitializing() */\n      tag_415\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7151:7166  _isInitializing */\n      tag_416\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7151:7168  _isInitializing() */\n      jump\t// in\n    tag_415:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7146:7219  if (!_isInitializing()) {... */\n      tag_417\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7191:7208  NotInitializing() */\n      mload(0x40)\n      0xd7e6bcf800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7146:7219  if (!_isInitializing()) {... */\n    tag_417:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7084:7225  function _checkInitializing() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2730:2946  function __ERC20_init_unchained(string memory name_, string memory symbol_) internal onlyInitializing {... */\n    tag_372:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_419\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_369\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_419:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2842:2864  ERC20Storage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2867:2885  _getERC20Storage() */\n      tag_421\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2867:2883  _getERC20Storage */\n      tag_164\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2867:2885  _getERC20Storage() */\n      jump\t// in\n    tag_421:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2842:2885  ERC20Storage storage $ = _getERC20Storage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2905:2910  name_ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2895:2896  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2895:2902  $._name */\n      0x03\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2895:2910  $._name = name_ */\n      swap1\n      dup2\n      tag_422\n      swap2\n      swap1\n      tag_423\n      jump\t// in\n    tag_422:\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2932:2939  symbol_ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2920:2921  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2920:2929  $._symbol */\n      0x04\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2920:2939  $._symbol = symbol_ */\n      swap1\n      dup2\n      tag_424\n      swap2\n      swap1\n      tag_423\n      jump\t// in\n    tag_424:\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2832:2946  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2730:2946  function __ERC20_init_unchained(string memory name_, string memory symbol_) internal onlyInitializing {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1980:2215  function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {... */\n    tag_380:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_426\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_369\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_426:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2100:2101  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2076:2102  initialOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2076:2088  initialOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2076:2102  initialOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2072:2167  if (initialOwner == address(0)) {... */\n      tag_428\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2153:2154  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2125:2156  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_429\n      swap2\n      swap1\n      tag_118\n      jump\t// in\n    tag_429:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2072:2167  if (initialOwner == address(0)) {... */\n    tag_428:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2176:2208  _transferOwnership(initialOwner) */\n      tag_430\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2195:2207  initialOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2176:2194  _transferOwnership */\n      tag_238\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2176:2208  _transferOwnership(initialOwner) */\n      jump\t// in\n    tag_430:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1980:2215  function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1684:1874  function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {... */\n    tag_404:\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1745:1766  AddressSlot storage r */\n      0x00\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1854:1858  slot */\n      dup2\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1844:1858  r.slot := slot */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1684:1874  function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2186:2467  function _setImplementation(address newImplementation) private {... */\n    tag_407:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2296:2297  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2263:2280  newImplementation */\n      dup2\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2263:2292  newImplementation.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2263:2297  newImplementation.code.length == 0 */\n      sub\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2259:2378  if (newImplementation.code.length == 0) {... */\n      tag_433\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2349:2366  newImplementation */\n      dup1\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2320:2367  ERC1967InvalidImplementation(newImplementation) */\n      mload(0x40)\n      0x4c9c8ce300000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_434\n      swap2\n      swap1\n      tag_118\n      jump\t// in\n    tag_434:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2259:2378  if (newImplementation.code.length == 0) {... */\n    tag_433:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2443:2460  newImplementation */\n      dup1\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2387:2434  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT) */\n      tag_435\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1327:1393  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n      0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2414:2433  IMPLEMENTATION_SLOT */\n      0x00\n      shl\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2387:2413  StorageSlot.getAddressSlot */\n      tag_404\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2387:2434  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT) */\n      jump\t// in\n    tag_435:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2387:2440  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value */\n      0x00\n      add\n      0x00\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2387:2460  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2186:2467  function _setImplementation(address newImplementation) private {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4106:4359  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n    tag_410:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4189:4201  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4214:4226  bool success */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4228:4251  bytes memory returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4255:4261  target */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4255:4274  target.delegatecall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4275:4279  data */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4255:4280  target.delegatecall(data) */\n      mload(0x40)\n      tag_437\n      swap2\n      swap1\n      tag_438\n      jump\t// in\n    tag_437:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      gas\n      delegatecall\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_441\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_440)\n    tag_441:\n      0x60\n      swap2\n      pop\n    tag_440:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4213:4280  (bool success, bytes memory returndata) = target.delegatecall(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4297:4352  verifyCallResultFromTarget(target, success, returndata) */\n      tag_442\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4324:4330  target */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4332:4339  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4341:4351  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4297:4323  verifyCallResultFromTarget */\n      tag_443\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4297:4352  verifyCallResultFromTarget(target, success, returndata) */\n      jump\t// in\n    tag_442:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4290:4352  return verifyCallResultFromTarget(target, success, returndata) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4106:4359  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6598:6720  function _checkNonPayable() private {... */\n    tag_413:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6660:6661  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6648:6657  msg.value */\n      callvalue\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6648:6661  msg.value > 0 */\n      gt\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6644:6714  if (msg.value > 0) {... */\n      iszero\n      tag_445\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6684:6703  ERC1967NonPayable() */\n      mload(0x40)\n      0xb398979f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6644:6714  if (msg.value > 0) {... */\n    tag_445:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6598:6720  function _checkNonPayable() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8487:8607  function _isInitializing() internal view returns (bool) {... */\n    tag_416:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8537:8541  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8560:8586  _getInitializableStorage() */\n      tag_447\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8560:8584  _getInitializableStorage */\n      tag_273\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8560:8586  _getInitializableStorage() */\n      jump\t// in\n    tag_447:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8560:8600  _getInitializableStorage()._initializing */\n      0x00\n      add\n      0x08\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8553:8600  return _getInitializableStorage()._initializing */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8487:8607  function _isInitializing() internal view returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4625:5207  function verifyCallResultFromTarget(... */\n    tag_443:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4769:4781  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4798:4805  success */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n      tag_449\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4840  _revert(returndata) */\n      tag_450\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4829:4839  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4828  _revert */\n      tag_451\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4840  _revert(returndata) */\n      jump\t// in\n    tag_450:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n      jump(tag_452)\n    tag_449:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5066:5067  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5055  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5062  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5067  returndata.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5094  returndata.length == 0 && target.code.length == 0 */\n      dup1\n      iszero\n      tag_453\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5093:5094  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5077  target */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5089  target.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5094  target.code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5094  returndata.length == 0 && target.code.length == 0 */\n    tag_453:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5041:5160  if (returndata.length == 0 && target.code.length == 0) {... */\n      iszero\n      tag_454\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5138:5144  target */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5121:5145  AddressEmptyCode(target) */\n      mload(0x40)\n      0x9996b31500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_455\n      swap2\n      swap1\n      tag_118\n      jump\t// in\n    tag_455:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5041:5160  if (returndata.length == 0 && target.code.length == 0) {... */\n    tag_454:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5180:5190  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5173:5190  return returndata */\n      swap1\n      pop\n      jump(tag_448)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n    tag_452:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4625:5207  function verifyCallResultFromTarget(... */\n    tag_448:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5743:6259  function _revert(bytes memory returndata) private pure {... */\n    tag_451:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5894:5895  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5884  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5891  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5895  returndata.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5870:6253  if (returndata.length > 0) {... */\n      iszero\n      tag_457\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6102:6112  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6096:6113  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6158:6173  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6145:6155  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6141:6143  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6137:6156  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6130:6174  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5870:6253  if (returndata.length > 0) {... */\n    tag_457:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6225:6242  FailedInnerCall() */\n      mload(0x40)\n      0x1425ea4200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"#utility.yul\":7:106   */\n    tag_459:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_460:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:426   */\n    tag_461:\n        /* \"#utility.yul\":376:382   */\n      dup3\n        /* \"#utility.yul\":371:374   */\n      dup2\n        /* \"#utility.yul\":366:369   */\n      dup4\n        /* \"#utility.yul\":360:383   */\n      mcopy\n        /* \"#utility.yul\":417:418   */\n      0x00\n        /* \"#utility.yul\":408:414   */\n      dup4\n        /* \"#utility.yul\":403:406   */\n      dup4\n        /* \"#utility.yul\":399:415   */\n      add\n        /* \"#utility.yul\":392:419   */\n      mstore\n        /* \"#utility.yul\":287:426   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":432:534   */\n    tag_462:\n        /* \"#utility.yul\":473:479   */\n      0x00\n        /* \"#utility.yul\":524:526   */\n      0x1f\n        /* \"#utility.yul\":520:527   */\n      not\n        /* \"#utility.yul\":515:517   */\n      0x1f\n        /* \"#utility.yul\":508:513   */\n      dup4\n        /* \"#utility.yul\":504:518   */\n      add\n        /* \"#utility.yul\":500:528   */\n      and\n        /* \"#utility.yul\":490:528   */\n      swap1\n      pop\n        /* \"#utility.yul\":432:534   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":540:917   */\n    tag_463:\n        /* \"#utility.yul\":628:631   */\n      0x00\n        /* \"#utility.yul\":656:695   */\n      tag_536\n        /* \"#utility.yul\":689:694   */\n      dup3\n        /* \"#utility.yul\":656:695   */\n      tag_459\n      jump\t// in\n    tag_536:\n        /* \"#utility.yul\":711:782   */\n      tag_537\n        /* \"#utility.yul\":775:781   */\n      dup2\n        /* \"#utility.yul\":770:773   */\n      dup6\n        /* \"#utility.yul\":711:782   */\n      tag_460\n      jump\t// in\n    tag_537:\n        /* \"#utility.yul\":704:782   */\n      swap4\n      pop\n        /* \"#utility.yul\":791:856   */\n      tag_538\n        /* \"#utility.yul\":849:855   */\n      dup2\n        /* \"#utility.yul\":844:847   */\n      dup6\n        /* \"#utility.yul\":837:841   */\n      0x20\n        /* \"#utility.yul\":830:835   */\n      dup7\n        /* \"#utility.yul\":826:842   */\n      add\n        /* \"#utility.yul\":791:856   */\n      tag_461\n      jump\t// in\n    tag_538:\n        /* \"#utility.yul\":881:910   */\n      tag_539\n        /* \"#utility.yul\":903:909   */\n      dup2\n        /* \"#utility.yul\":881:910   */\n      tag_462\n      jump\t// in\n    tag_539:\n        /* \"#utility.yul\":876:879   */\n      dup5\n        /* \"#utility.yul\":872:911   */\n      add\n        /* \"#utility.yul\":865:911   */\n      swap2\n      pop\n        /* \"#utility.yul\":632:917   */\n      pop\n        /* \"#utility.yul\":540:917   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":923:1236   */\n    tag_41:\n        /* \"#utility.yul\":1036:1040   */\n      0x00\n        /* \"#utility.yul\":1074:1076   */\n      0x20\n        /* \"#utility.yul\":1063:1072   */\n      dup3\n        /* \"#utility.yul\":1059:1077   */\n      add\n        /* \"#utility.yul\":1051:1077   */\n      swap1\n      pop\n        /* \"#utility.yul\":1123:1132   */\n      dup2\n        /* \"#utility.yul\":1117:1121   */\n      dup2\n        /* \"#utility.yul\":1113:1133   */\n      sub\n        /* \"#utility.yul\":1109:1110   */\n      0x00\n        /* \"#utility.yul\":1098:1107   */\n      dup4\n        /* \"#utility.yul\":1094:1111   */\n      add\n        /* \"#utility.yul\":1087:1134   */\n      mstore\n        /* \"#utility.yul\":1151:1229   */\n      tag_541\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1215:1221   */\n      dup5\n        /* \"#utility.yul\":1151:1229   */\n      tag_463\n      jump\t// in\n    tag_541:\n        /* \"#utility.yul\":1143:1229   */\n      swap1\n      pop\n        /* \"#utility.yul\":923:1236   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1242:1317   */\n    tag_464:\n        /* \"#utility.yul\":1275:1281   */\n      0x00\n        /* \"#utility.yul\":1308:1310   */\n      0x40\n        /* \"#utility.yul\":1302:1311   */\n      mload\n        /* \"#utility.yul\":1292:1311   */\n      swap1\n      pop\n        /* \"#utility.yul\":1242:1317   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":1323:1440   */\n    tag_465:\n        /* \"#utility.yul\":1432:1433   */\n      0x00\n        /* \"#utility.yul\":1429:1430   */\n      dup1\n        /* \"#utility.yul\":1422:1434   */\n      revert\n        /* \"#utility.yul\":1446:1563   */\n    tag_466:\n        /* \"#utility.yul\":1555:1556   */\n      0x00\n        /* \"#utility.yul\":1552:1553   */\n      dup1\n        /* \"#utility.yul\":1545:1557   */\n      revert\n        /* \"#utility.yul\":1569:1695   */\n    tag_467:\n        /* \"#utility.yul\":1606:1613   */\n      0x00\n        /* \"#utility.yul\":1646:1688   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1639:1644   */\n      dup3\n        /* \"#utility.yul\":1635:1689   */\n      and\n        /* \"#utility.yul\":1624:1689   */\n      swap1\n      pop\n        /* \"#utility.yul\":1569:1695   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1701:1797   */\n    tag_468:\n        /* \"#utility.yul\":1738:1745   */\n      0x00\n        /* \"#utility.yul\":1767:1791   */\n      tag_547\n        /* \"#utility.yul\":1785:1790   */\n      dup3\n        /* \"#utility.yul\":1767:1791   */\n      tag_467\n      jump\t// in\n    tag_547:\n        /* \"#utility.yul\":1756:1791   */\n      swap1\n      pop\n        /* \"#utility.yul\":1701:1797   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1803:1925   */\n    tag_469:\n        /* \"#utility.yul\":1876:1900   */\n      tag_549\n        /* \"#utility.yul\":1894:1899   */\n      dup2\n        /* \"#utility.yul\":1876:1900   */\n      tag_468\n      jump\t// in\n    tag_549:\n        /* \"#utility.yul\":1869:1874   */\n      dup2\n        /* \"#utility.yul\":1866:1901   */\n      eq\n        /* \"#utility.yul\":1856:1919   */\n      tag_550\n      jumpi\n        /* \"#utility.yul\":1915:1916   */\n      0x00\n        /* \"#utility.yul\":1912:1913   */\n      dup1\n        /* \"#utility.yul\":1905:1917   */\n      revert\n        /* \"#utility.yul\":1856:1919   */\n    tag_550:\n        /* \"#utility.yul\":1803:1925   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1931:2070   */\n    tag_470:\n        /* \"#utility.yul\":1977:1982   */\n      0x00\n        /* \"#utility.yul\":2015:2021   */\n      dup2\n        /* \"#utility.yul\":2002:2022   */\n      calldataload\n        /* \"#utility.yul\":1993:2022   */\n      swap1\n      pop\n        /* \"#utility.yul\":2031:2064   */\n      tag_552\n        /* \"#utility.yul\":2058:2063   */\n      dup2\n        /* \"#utility.yul\":2031:2064   */\n      tag_469\n      jump\t// in\n    tag_552:\n        /* \"#utility.yul\":1931:2070   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2076:2153   */\n    tag_471:\n        /* \"#utility.yul\":2113:2120   */\n      0x00\n        /* \"#utility.yul\":2142:2147   */\n      dup2\n        /* \"#utility.yul\":2131:2147   */\n      swap1\n      pop\n        /* \"#utility.yul\":2076:2153   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2159:2281   */\n    tag_472:\n        /* \"#utility.yul\":2232:2256   */\n      tag_555\n        /* \"#utility.yul\":2250:2255   */\n      dup2\n        /* \"#utility.yul\":2232:2256   */\n      tag_471\n      jump\t// in\n    tag_555:\n        /* \"#utility.yul\":2225:2230   */\n      dup2\n        /* \"#utility.yul\":2222:2257   */\n      eq\n        /* \"#utility.yul\":2212:2275   */\n      tag_556\n      jumpi\n        /* \"#utility.yul\":2271:2272   */\n      0x00\n        /* \"#utility.yul\":2268:2269   */\n      dup1\n        /* \"#utility.yul\":2261:2273   */\n      revert\n        /* \"#utility.yul\":2212:2275   */\n    tag_556:\n        /* \"#utility.yul\":2159:2281   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2287:2426   */\n    tag_473:\n        /* \"#utility.yul\":2333:2338   */\n      0x00\n        /* \"#utility.yul\":2371:2377   */\n      dup2\n        /* \"#utility.yul\":2358:2378   */\n      calldataload\n        /* \"#utility.yul\":2349:2378   */\n      swap1\n      pop\n        /* \"#utility.yul\":2387:2420   */\n      tag_558\n        /* \"#utility.yul\":2414:2419   */\n      dup2\n        /* \"#utility.yul\":2387:2420   */\n      tag_472\n      jump\t// in\n    tag_558:\n        /* \"#utility.yul\":2287:2426   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2432:2906   */\n    tag_45:\n        /* \"#utility.yul\":2500:2506   */\n      0x00\n        /* \"#utility.yul\":2508:2514   */\n      dup1\n        /* \"#utility.yul\":2557:2559   */\n      0x40\n        /* \"#utility.yul\":2545:2554   */\n      dup4\n        /* \"#utility.yul\":2536:2543   */\n      dup6\n        /* \"#utility.yul\":2532:2555   */\n      sub\n        /* \"#utility.yul\":2528:2560   */\n      slt\n        /* \"#utility.yul\":2525:2644   */\n      iszero\n      tag_560\n      jumpi\n        /* \"#utility.yul\":2563:2642   */\n      tag_561\n      tag_465\n      jump\t// in\n    tag_561:\n        /* \"#utility.yul\":2525:2644   */\n    tag_560:\n        /* \"#utility.yul\":2683:2684   */\n      0x00\n        /* \"#utility.yul\":2708:2761   */\n      tag_562\n        /* \"#utility.yul\":2753:2760   */\n      dup6\n        /* \"#utility.yul\":2744:2750   */\n      dup3\n        /* \"#utility.yul\":2733:2742   */\n      dup7\n        /* \"#utility.yul\":2729:2751   */\n      add\n        /* \"#utility.yul\":2708:2761   */\n      tag_470\n      jump\t// in\n    tag_562:\n        /* \"#utility.yul\":2698:2761   */\n      swap3\n      pop\n        /* \"#utility.yul\":2654:2771   */\n      pop\n        /* \"#utility.yul\":2810:2812   */\n      0x20\n        /* \"#utility.yul\":2836:2889   */\n      tag_563\n        /* \"#utility.yul\":2881:2888   */\n      dup6\n        /* \"#utility.yul\":2872:2878   */\n      dup3\n        /* \"#utility.yul\":2861:2870   */\n      dup7\n        /* \"#utility.yul\":2857:2879   */\n      add\n        /* \"#utility.yul\":2836:2889   */\n      tag_473\n      jump\t// in\n    tag_563:\n        /* \"#utility.yul\":2826:2889   */\n      swap2\n      pop\n        /* \"#utility.yul\":2781:2899   */\n      pop\n        /* \"#utility.yul\":2432:2906   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2912:3002   */\n    tag_474:\n        /* \"#utility.yul\":2946:2953   */\n      0x00\n        /* \"#utility.yul\":2989:2994   */\n      dup2\n        /* \"#utility.yul\":2982:2995   */\n      iszero\n        /* \"#utility.yul\":2975:2996   */\n      iszero\n        /* \"#utility.yul\":2964:2996   */\n      swap1\n      pop\n        /* \"#utility.yul\":2912:3002   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3008:3117   */\n    tag_475:\n        /* \"#utility.yul\":3089:3110   */\n      tag_566\n        /* \"#utility.yul\":3104:3109   */\n      dup2\n        /* \"#utility.yul\":3089:3110   */\n      tag_474\n      jump\t// in\n    tag_566:\n        /* \"#utility.yul\":3084:3087   */\n      dup3\n        /* \"#utility.yul\":3077:3111   */\n      mstore\n        /* \"#utility.yul\":3008:3117   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3123:3333   */\n    tag_48:\n        /* \"#utility.yul\":3210:3214   */\n      0x00\n        /* \"#utility.yul\":3248:3250   */\n      0x20\n        /* \"#utility.yul\":3237:3246   */\n      dup3\n        /* \"#utility.yul\":3233:3251   */\n      add\n        /* \"#utility.yul\":3225:3251   */\n      swap1\n      pop\n        /* \"#utility.yul\":3261:3326   */\n      tag_568\n        /* \"#utility.yul\":3323:3324   */\n      0x00\n        /* \"#utility.yul\":3312:3321   */\n      dup4\n        /* \"#utility.yul\":3308:3325   */\n      add\n        /* \"#utility.yul\":3299:3305   */\n      dup5\n        /* \"#utility.yul\":3261:3326   */\n      tag_475\n      jump\t// in\n    tag_568:\n        /* \"#utility.yul\":3123:3333   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3339:3457   */\n    tag_476:\n        /* \"#utility.yul\":3426:3450   */\n      tag_570\n        /* \"#utility.yul\":3444:3449   */\n      dup2\n        /* \"#utility.yul\":3426:3450   */\n      tag_471\n      jump\t// in\n    tag_570:\n        /* \"#utility.yul\":3421:3424   */\n      dup3\n        /* \"#utility.yul\":3414:3451   */\n      mstore\n        /* \"#utility.yul\":3339:3457   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3463:3685   */\n    tag_53:\n        /* \"#utility.yul\":3556:3560   */\n      0x00\n        /* \"#utility.yul\":3594:3596   */\n      0x20\n        /* \"#utility.yul\":3583:3592   */\n      dup3\n        /* \"#utility.yul\":3579:3597   */\n      add\n        /* \"#utility.yul\":3571:3597   */\n      swap1\n      pop\n        /* \"#utility.yul\":3607:3678   */\n      tag_572\n        /* \"#utility.yul\":3675:3676   */\n      0x00\n        /* \"#utility.yul\":3664:3673   */\n      dup4\n        /* \"#utility.yul\":3660:3677   */\n      add\n        /* \"#utility.yul\":3651:3657   */\n      dup5\n        /* \"#utility.yul\":3607:3678   */\n      tag_476\n      jump\t// in\n    tag_572:\n        /* \"#utility.yul\":3463:3685   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3691:4310   */\n    tag_61:\n        /* \"#utility.yul\":3768:3774   */\n      0x00\n        /* \"#utility.yul\":3776:3782   */\n      dup1\n        /* \"#utility.yul\":3784:3790   */\n      0x00\n        /* \"#utility.yul\":3833:3835   */\n      0x60\n        /* \"#utility.yul\":3821:3830   */\n      dup5\n        /* \"#utility.yul\":3812:3819   */\n      dup7\n        /* \"#utility.yul\":3808:3831   */\n      sub\n        /* \"#utility.yul\":3804:3836   */\n      slt\n        /* \"#utility.yul\":3801:3920   */\n      iszero\n      tag_574\n      jumpi\n        /* \"#utility.yul\":3839:3918   */\n      tag_575\n      tag_465\n      jump\t// in\n    tag_575:\n        /* \"#utility.yul\":3801:3920   */\n    tag_574:\n        /* \"#utility.yul\":3959:3960   */\n      0x00\n        /* \"#utility.yul\":3984:4037   */\n      tag_576\n        /* \"#utility.yul\":4029:4036   */\n      dup7\n        /* \"#utility.yul\":4020:4026   */\n      dup3\n        /* \"#utility.yul\":4009:4018   */\n      dup8\n        /* \"#utility.yul\":4005:4027   */\n      add\n        /* \"#utility.yul\":3984:4037   */\n      tag_470\n      jump\t// in\n    tag_576:\n        /* \"#utility.yul\":3974:4037   */\n      swap4\n      pop\n        /* \"#utility.yul\":3930:4047   */\n      pop\n        /* \"#utility.yul\":4086:4088   */\n      0x20\n        /* \"#utility.yul\":4112:4165   */\n      tag_577\n        /* \"#utility.yul\":4157:4164   */\n      dup7\n        /* \"#utility.yul\":4148:4154   */\n      dup3\n        /* \"#utility.yul\":4137:4146   */\n      dup8\n        /* \"#utility.yul\":4133:4155   */\n      add\n        /* \"#utility.yul\":4112:4165   */\n      tag_470\n      jump\t// in\n    tag_577:\n        /* \"#utility.yul\":4102:4165   */\n      swap3\n      pop\n        /* \"#utility.yul\":4057:4175   */\n      pop\n        /* \"#utility.yul\":4214:4216   */\n      0x40\n        /* \"#utility.yul\":4240:4293   */\n      tag_578\n        /* \"#utility.yul\":4285:4292   */\n      dup7\n        /* \"#utility.yul\":4276:4282   */\n      dup3\n        /* \"#utility.yul\":4265:4274   */\n      dup8\n        /* \"#utility.yul\":4261:4283   */\n      add\n        /* \"#utility.yul\":4240:4293   */\n      tag_473\n      jump\t// in\n    tag_578:\n        /* \"#utility.yul\":4230:4293   */\n      swap2\n      pop\n        /* \"#utility.yul\":4185:4303   */\n      pop\n        /* \"#utility.yul\":3691:4310   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4316:4645   */\n    tag_67:\n        /* \"#utility.yul\":4375:4381   */\n      0x00\n        /* \"#utility.yul\":4424:4426   */\n      0x20\n        /* \"#utility.yul\":4412:4421   */\n      dup3\n        /* \"#utility.yul\":4403:4410   */\n      dup5\n        /* \"#utility.yul\":4399:4422   */\n      sub\n        /* \"#utility.yul\":4395:4427   */\n      slt\n        /* \"#utility.yul\":4392:4511   */\n      iszero\n      tag_580\n      jumpi\n        /* \"#utility.yul\":4430:4509   */\n      tag_581\n      tag_465\n      jump\t// in\n    tag_581:\n        /* \"#utility.yul\":4392:4511   */\n    tag_580:\n        /* \"#utility.yul\":4550:4551   */\n      0x00\n        /* \"#utility.yul\":4575:4628   */\n      tag_582\n        /* \"#utility.yul\":4620:4627   */\n      dup5\n        /* \"#utility.yul\":4611:4617   */\n      dup3\n        /* \"#utility.yul\":4600:4609   */\n      dup6\n        /* \"#utility.yul\":4596:4618   */\n      add\n        /* \"#utility.yul\":4575:4628   */\n      tag_473\n      jump\t// in\n    tag_582:\n        /* \"#utility.yul\":4565:4628   */\n      swap2\n      pop\n        /* \"#utility.yul\":4521:4638   */\n      pop\n        /* \"#utility.yul\":4316:4645   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4651:4737   */\n    tag_477:\n        /* \"#utility.yul\":4686:4693   */\n      0x00\n        /* \"#utility.yul\":4726:4730   */\n      0xff\n        /* \"#utility.yul\":4719:4724   */\n      dup3\n        /* \"#utility.yul\":4715:4731   */\n      and\n        /* \"#utility.yul\":4704:4731   */\n      swap1\n      pop\n        /* \"#utility.yul\":4651:4737   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4743:4855   */\n    tag_478:\n        /* \"#utility.yul\":4826:4848   */\n      tag_585\n        /* \"#utility.yul\":4842:4847   */\n      dup2\n        /* \"#utility.yul\":4826:4848   */\n      tag_477\n      jump\t// in\n    tag_585:\n        /* \"#utility.yul\":4821:4824   */\n      dup3\n        /* \"#utility.yul\":4814:4849   */\n      mstore\n        /* \"#utility.yul\":4743:4855   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4861:5075   */\n    tag_73:\n        /* \"#utility.yul\":4950:4954   */\n      0x00\n        /* \"#utility.yul\":4988:4990   */\n      0x20\n        /* \"#utility.yul\":4977:4986   */\n      dup3\n        /* \"#utility.yul\":4973:4991   */\n      add\n        /* \"#utility.yul\":4965:4991   */\n      swap1\n      pop\n        /* \"#utility.yul\":5001:5068   */\n      tag_587\n        /* \"#utility.yul\":5065:5066   */\n      0x00\n        /* \"#utility.yul\":5054:5063   */\n      dup4\n        /* \"#utility.yul\":5050:5067   */\n      add\n        /* \"#utility.yul\":5041:5047   */\n      dup5\n        /* \"#utility.yul\":5001:5068   */\n      tag_478\n      jump\t// in\n    tag_587:\n        /* \"#utility.yul\":4861:5075   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5081:5198   */\n    tag_479:\n        /* \"#utility.yul\":5190:5191   */\n      0x00\n        /* \"#utility.yul\":5187:5188   */\n      dup1\n        /* \"#utility.yul\":5180:5192   */\n      revert\n        /* \"#utility.yul\":5204:5321   */\n    tag_480:\n        /* \"#utility.yul\":5313:5314   */\n      0x00\n        /* \"#utility.yul\":5310:5311   */\n      dup1\n        /* \"#utility.yul\":5303:5315   */\n      revert\n        /* \"#utility.yul\":5327:5507   */\n    tag_481:\n        /* \"#utility.yul\":5375:5452   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5372:5373   */\n      0x00\n        /* \"#utility.yul\":5365:5453   */\n      mstore\n        /* \"#utility.yul\":5472:5476   */\n      0x41\n        /* \"#utility.yul\":5469:5470   */\n      0x04\n        /* \"#utility.yul\":5462:5477   */\n      mstore\n        /* \"#utility.yul\":5496:5500   */\n      0x24\n        /* \"#utility.yul\":5493:5494   */\n      0x00\n        /* \"#utility.yul\":5486:5501   */\n      revert\n        /* \"#utility.yul\":5513:5794   */\n    tag_482:\n        /* \"#utility.yul\":5596:5623   */\n      tag_592\n        /* \"#utility.yul\":5618:5622   */\n      dup3\n        /* \"#utility.yul\":5596:5623   */\n      tag_462\n      jump\t// in\n    tag_592:\n        /* \"#utility.yul\":5588:5594   */\n      dup2\n        /* \"#utility.yul\":5584:5624   */\n      add\n        /* \"#utility.yul\":5726:5732   */\n      dup2\n        /* \"#utility.yul\":5714:5724   */\n      dup2\n        /* \"#utility.yul\":5711:5733   */\n      lt\n        /* \"#utility.yul\":5690:5708   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5678:5688   */\n      dup3\n        /* \"#utility.yul\":5675:5709   */\n      gt\n        /* \"#utility.yul\":5672:5734   */\n      or\n        /* \"#utility.yul\":5669:5757   */\n      iszero\n      tag_593\n      jumpi\n        /* \"#utility.yul\":5737:5755   */\n      tag_594\n      tag_481\n      jump\t// in\n    tag_594:\n        /* \"#utility.yul\":5669:5757   */\n    tag_593:\n        /* \"#utility.yul\":5777:5787   */\n      dup1\n        /* \"#utility.yul\":5773:5775   */\n      0x40\n        /* \"#utility.yul\":5766:5788   */\n      mstore\n        /* \"#utility.yul\":5556:5794   */\n      pop\n        /* \"#utility.yul\":5513:5794   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5800:5929   */\n    tag_483:\n        /* \"#utility.yul\":5834:5840   */\n      0x00\n        /* \"#utility.yul\":5861:5881   */\n      tag_596\n      tag_464\n      jump\t// in\n    tag_596:\n        /* \"#utility.yul\":5851:5881   */\n      swap1\n      pop\n        /* \"#utility.yul\":5890:5923   */\n      tag_597\n        /* \"#utility.yul\":5918:5922   */\n      dup3\n        /* \"#utility.yul\":5910:5916   */\n      dup3\n        /* \"#utility.yul\":5890:5923   */\n      tag_482\n      jump\t// in\n    tag_597:\n        /* \"#utility.yul\":5800:5929   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5935:6242   */\n    tag_484:\n        /* \"#utility.yul\":5996:6000   */\n      0x00\n        /* \"#utility.yul\":6086:6104   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6078:6084   */\n      dup3\n        /* \"#utility.yul\":6075:6105   */\n      gt\n        /* \"#utility.yul\":6072:6128   */\n      iszero\n      tag_599\n      jumpi\n        /* \"#utility.yul\":6108:6126   */\n      tag_600\n      tag_481\n      jump\t// in\n    tag_600:\n        /* \"#utility.yul\":6072:6128   */\n    tag_599:\n        /* \"#utility.yul\":6146:6175   */\n      tag_601\n        /* \"#utility.yul\":6168:6174   */\n      dup3\n        /* \"#utility.yul\":6146:6175   */\n      tag_462\n      jump\t// in\n    tag_601:\n        /* \"#utility.yul\":6138:6175   */\n      swap1\n      pop\n        /* \"#utility.yul\":6230:6234   */\n      0x20\n        /* \"#utility.yul\":6224:6228   */\n      dup2\n        /* \"#utility.yul\":6220:6235   */\n      add\n        /* \"#utility.yul\":6212:6235   */\n      swap1\n      pop\n        /* \"#utility.yul\":5935:6242   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6248:6396   */\n    tag_485:\n        /* \"#utility.yul\":6346:6352   */\n      dup3\n        /* \"#utility.yul\":6341:6344   */\n      dup2\n        /* \"#utility.yul\":6336:6339   */\n      dup4\n        /* \"#utility.yul\":6323:6353   */\n      calldatacopy\n        /* \"#utility.yul\":6387:6388   */\n      0x00\n        /* \"#utility.yul\":6378:6384   */\n      dup4\n        /* \"#utility.yul\":6373:6376   */\n      dup4\n        /* \"#utility.yul\":6369:6385   */\n      add\n        /* \"#utility.yul\":6362:6389   */\n      mstore\n        /* \"#utility.yul\":6248:6396   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6402:6825   */\n    tag_486:\n        /* \"#utility.yul\":6479:6484   */\n      0x00\n        /* \"#utility.yul\":6504:6569   */\n      tag_604\n        /* \"#utility.yul\":6520:6568   */\n      tag_605\n        /* \"#utility.yul\":6561:6567   */\n      dup5\n        /* \"#utility.yul\":6520:6568   */\n      tag_484\n      jump\t// in\n    tag_605:\n        /* \"#utility.yul\":6504:6569   */\n      tag_483\n      jump\t// in\n    tag_604:\n        /* \"#utility.yul\":6495:6569   */\n      swap1\n      pop\n        /* \"#utility.yul\":6592:6598   */\n      dup3\n        /* \"#utility.yul\":6585:6590   */\n      dup2\n        /* \"#utility.yul\":6578:6599   */\n      mstore\n        /* \"#utility.yul\":6630:6634   */\n      0x20\n        /* \"#utility.yul\":6623:6628   */\n      dup2\n        /* \"#utility.yul\":6619:6635   */\n      add\n        /* \"#utility.yul\":6668:6671   */\n      dup5\n        /* \"#utility.yul\":6659:6665   */\n      dup5\n        /* \"#utility.yul\":6654:6657   */\n      dup5\n        /* \"#utility.yul\":6650:6666   */\n      add\n        /* \"#utility.yul\":6647:6672   */\n      gt\n        /* \"#utility.yul\":6644:6756   */\n      iszero\n      tag_606\n      jumpi\n        /* \"#utility.yul\":6675:6754   */\n      tag_607\n      tag_480\n      jump\t// in\n    tag_607:\n        /* \"#utility.yul\":6644:6756   */\n    tag_606:\n        /* \"#utility.yul\":6765:6819   */\n      tag_608\n        /* \"#utility.yul\":6812:6818   */\n      dup5\n        /* \"#utility.yul\":6807:6810   */\n      dup3\n        /* \"#utility.yul\":6802:6805   */\n      dup6\n        /* \"#utility.yul\":6765:6819   */\n      tag_485\n      jump\t// in\n    tag_608:\n        /* \"#utility.yul\":6485:6825   */\n      pop\n        /* \"#utility.yul\":6402:6825   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6844:7182   */\n    tag_487:\n        /* \"#utility.yul\":6899:6904   */\n      0x00\n        /* \"#utility.yul\":6948:6951   */\n      dup3\n        /* \"#utility.yul\":6941:6945   */\n      0x1f\n        /* \"#utility.yul\":6933:6939   */\n      dup4\n        /* \"#utility.yul\":6929:6946   */\n      add\n        /* \"#utility.yul\":6925:6952   */\n      slt\n        /* \"#utility.yul\":6915:7037   */\n      tag_610\n      jumpi\n        /* \"#utility.yul\":6956:7035   */\n      tag_611\n      tag_479\n      jump\t// in\n    tag_611:\n        /* \"#utility.yul\":6915:7037   */\n    tag_610:\n        /* \"#utility.yul\":7073:7079   */\n      dup2\n        /* \"#utility.yul\":7060:7080   */\n      calldataload\n        /* \"#utility.yul\":7098:7176   */\n      tag_612\n        /* \"#utility.yul\":7172:7175   */\n      dup5\n        /* \"#utility.yul\":7164:7170   */\n      dup3\n        /* \"#utility.yul\":7157:7161   */\n      0x20\n        /* \"#utility.yul\":7149:7155   */\n      dup7\n        /* \"#utility.yul\":7145:7162   */\n      add\n        /* \"#utility.yul\":7098:7176   */\n      tag_486\n      jump\t// in\n    tag_612:\n        /* \"#utility.yul\":7089:7176   */\n      swap2\n      pop\n        /* \"#utility.yul\":6905:7182   */\n      pop\n        /* \"#utility.yul\":6844:7182   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7188:7840   */\n    tag_82:\n        /* \"#utility.yul\":7265:7271   */\n      0x00\n        /* \"#utility.yul\":7273:7279   */\n      dup1\n        /* \"#utility.yul\":7322:7324   */\n      0x40\n        /* \"#utility.yul\":7310:7319   */\n      dup4\n        /* \"#utility.yul\":7301:7308   */\n      dup6\n        /* \"#utility.yul\":7297:7320   */\n      sub\n        /* \"#utility.yul\":7293:7325   */\n      slt\n        /* \"#utility.yul\":7290:7409   */\n      iszero\n      tag_614\n      jumpi\n        /* \"#utility.yul\":7328:7407   */\n      tag_615\n      tag_465\n      jump\t// in\n    tag_615:\n        /* \"#utility.yul\":7290:7409   */\n    tag_614:\n        /* \"#utility.yul\":7448:7449   */\n      0x00\n        /* \"#utility.yul\":7473:7526   */\n      tag_616\n        /* \"#utility.yul\":7518:7525   */\n      dup6\n        /* \"#utility.yul\":7509:7515   */\n      dup3\n        /* \"#utility.yul\":7498:7507   */\n      dup7\n        /* \"#utility.yul\":7494:7516   */\n      add\n        /* \"#utility.yul\":7473:7526   */\n      tag_470\n      jump\t// in\n    tag_616:\n        /* \"#utility.yul\":7463:7526   */\n      swap3\n      pop\n        /* \"#utility.yul\":7419:7536   */\n      pop\n        /* \"#utility.yul\":7603:7605   */\n      0x20\n        /* \"#utility.yul\":7592:7601   */\n      dup4\n        /* \"#utility.yul\":7588:7606   */\n      add\n        /* \"#utility.yul\":7575:7607   */\n      calldataload\n        /* \"#utility.yul\":7634:7652   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7626:7632   */\n      dup2\n        /* \"#utility.yul\":7623:7653   */\n      gt\n        /* \"#utility.yul\":7620:7737   */\n      iszero\n      tag_617\n      jumpi\n        /* \"#utility.yul\":7656:7735   */\n      tag_618\n      tag_466\n      jump\t// in\n    tag_618:\n        /* \"#utility.yul\":7620:7737   */\n    tag_617:\n        /* \"#utility.yul\":7761:7823   */\n      tag_619\n        /* \"#utility.yul\":7815:7822   */\n      dup6\n        /* \"#utility.yul\":7806:7812   */\n      dup3\n        /* \"#utility.yul\":7795:7804   */\n      dup7\n        /* \"#utility.yul\":7791:7813   */\n      add\n        /* \"#utility.yul\":7761:7823   */\n      tag_487\n      jump\t// in\n    tag_619:\n        /* \"#utility.yul\":7751:7823   */\n      swap2\n      pop\n        /* \"#utility.yul\":7546:7833   */\n      pop\n        /* \"#utility.yul\":7188:7840   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7846:7923   */\n    tag_488:\n        /* \"#utility.yul\":7883:7890   */\n      0x00\n        /* \"#utility.yul\":7912:7917   */\n      dup2\n        /* \"#utility.yul\":7901:7917   */\n      swap1\n      pop\n        /* \"#utility.yul\":7846:7923   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7929:8047   */\n    tag_489:\n        /* \"#utility.yul\":8016:8040   */\n      tag_622\n        /* \"#utility.yul\":8034:8039   */\n      dup2\n        /* \"#utility.yul\":8016:8040   */\n      tag_488\n      jump\t// in\n    tag_622:\n        /* \"#utility.yul\":8011:8014   */\n      dup3\n        /* \"#utility.yul\":8004:8041   */\n      mstore\n        /* \"#utility.yul\":7929:8047   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8053:8275   */\n    tag_88:\n        /* \"#utility.yul\":8146:8150   */\n      0x00\n        /* \"#utility.yul\":8184:8186   */\n      0x20\n        /* \"#utility.yul\":8173:8182   */\n      dup3\n        /* \"#utility.yul\":8169:8187   */\n      add\n        /* \"#utility.yul\":8161:8187   */\n      swap1\n      pop\n        /* \"#utility.yul\":8197:8268   */\n      tag_624\n        /* \"#utility.yul\":8265:8266   */\n      0x00\n        /* \"#utility.yul\":8254:8263   */\n      dup4\n        /* \"#utility.yul\":8250:8267   */\n      add\n        /* \"#utility.yul\":8241:8247   */\n      dup5\n        /* \"#utility.yul\":8197:8268   */\n      tag_489\n      jump\t// in\n    tag_624:\n        /* \"#utility.yul\":8053:8275   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8281:8610   */\n    tag_96:\n        /* \"#utility.yul\":8340:8346   */\n      0x00\n        /* \"#utility.yul\":8389:8391   */\n      0x20\n        /* \"#utility.yul\":8377:8386   */\n      dup3\n        /* \"#utility.yul\":8368:8375   */\n      dup5\n        /* \"#utility.yul\":8364:8387   */\n      sub\n        /* \"#utility.yul\":8360:8392   */\n      slt\n        /* \"#utility.yul\":8357:8476   */\n      iszero\n      tag_626\n      jumpi\n        /* \"#utility.yul\":8395:8474   */\n      tag_627\n      tag_465\n      jump\t// in\n    tag_627:\n        /* \"#utility.yul\":8357:8476   */\n    tag_626:\n        /* \"#utility.yul\":8515:8516   */\n      0x00\n        /* \"#utility.yul\":8540:8593   */\n      tag_628\n        /* \"#utility.yul\":8585:8592   */\n      dup5\n        /* \"#utility.yul\":8576:8582   */\n      dup3\n        /* \"#utility.yul\":8565:8574   */\n      dup6\n        /* \"#utility.yul\":8561:8583   */\n      add\n        /* \"#utility.yul\":8540:8593   */\n      tag_470\n      jump\t// in\n    tag_628:\n        /* \"#utility.yul\":8530:8593   */\n      swap2\n      pop\n        /* \"#utility.yul\":8486:8603   */\n      pop\n        /* \"#utility.yul\":8281:8610   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8616:8734   */\n    tag_490:\n        /* \"#utility.yul\":8703:8727   */\n      tag_630\n        /* \"#utility.yul\":8721:8726   */\n      dup2\n        /* \"#utility.yul\":8703:8727   */\n      tag_468\n      jump\t// in\n    tag_630:\n        /* \"#utility.yul\":8698:8701   */\n      dup3\n        /* \"#utility.yul\":8691:8728   */\n      mstore\n        /* \"#utility.yul\":8616:8734   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8740:8962   */\n    tag_118:\n        /* \"#utility.yul\":8833:8837   */\n      0x00\n        /* \"#utility.yul\":8871:8873   */\n      0x20\n        /* \"#utility.yul\":8860:8869   */\n      dup3\n        /* \"#utility.yul\":8856:8874   */\n      add\n        /* \"#utility.yul\":8848:8874   */\n      swap1\n      pop\n        /* \"#utility.yul\":8884:8955   */\n      tag_632\n        /* \"#utility.yul\":8952:8953   */\n      0x00\n        /* \"#utility.yul\":8941:8950   */\n      dup4\n        /* \"#utility.yul\":8937:8954   */\n      add\n        /* \"#utility.yul\":8928:8934   */\n      dup5\n        /* \"#utility.yul\":8884:8955   */\n      tag_490\n      jump\t// in\n    tag_632:\n        /* \"#utility.yul\":8740:8962   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8968:9044   */\n    tag_491:\n        /* \"#utility.yul\":9004:9011   */\n      0x00\n        /* \"#utility.yul\":9033:9038   */\n      dup2\n        /* \"#utility.yul\":9022:9038   */\n      swap1\n      pop\n        /* \"#utility.yul\":8968:9044   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9050:9165   */\n    tag_492:\n        /* \"#utility.yul\":9135:9158   */\n      tag_635\n        /* \"#utility.yul\":9152:9157   */\n      dup2\n        /* \"#utility.yul\":9135:9158   */\n      tag_491\n      jump\t// in\n    tag_635:\n        /* \"#utility.yul\":9130:9133   */\n      dup3\n        /* \"#utility.yul\":9123:9159   */\n      mstore\n        /* \"#utility.yul\":9050:9165   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9171:9389   */\n    tag_140:\n        /* \"#utility.yul\":9262:9266   */\n      0x00\n        /* \"#utility.yul\":9300:9302   */\n      0x20\n        /* \"#utility.yul\":9289:9298   */\n      dup3\n        /* \"#utility.yul\":9285:9303   */\n      add\n        /* \"#utility.yul\":9277:9303   */\n      swap1\n      pop\n        /* \"#utility.yul\":9313:9382   */\n      tag_637\n        /* \"#utility.yul\":9379:9380   */\n      0x00\n        /* \"#utility.yul\":9368:9377   */\n      dup4\n        /* \"#utility.yul\":9364:9381   */\n      add\n        /* \"#utility.yul\":9355:9361   */\n      dup5\n        /* \"#utility.yul\":9313:9382   */\n      tag_492\n      jump\t// in\n    tag_637:\n        /* \"#utility.yul\":9171:9389   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9395:9869   */\n    tag_148:\n        /* \"#utility.yul\":9463:9469   */\n      0x00\n        /* \"#utility.yul\":9471:9477   */\n      dup1\n        /* \"#utility.yul\":9520:9522   */\n      0x40\n        /* \"#utility.yul\":9508:9517   */\n      dup4\n        /* \"#utility.yul\":9499:9506   */\n      dup6\n        /* \"#utility.yul\":9495:9518   */\n      sub\n        /* \"#utility.yul\":9491:9523   */\n      slt\n        /* \"#utility.yul\":9488:9607   */\n      iszero\n      tag_639\n      jumpi\n        /* \"#utility.yul\":9526:9605   */\n      tag_640\n      tag_465\n      jump\t// in\n    tag_640:\n        /* \"#utility.yul\":9488:9607   */\n    tag_639:\n        /* \"#utility.yul\":9646:9647   */\n      0x00\n        /* \"#utility.yul\":9671:9724   */\n      tag_641\n        /* \"#utility.yul\":9716:9723   */\n      dup6\n        /* \"#utility.yul\":9707:9713   */\n      dup3\n        /* \"#utility.yul\":9696:9705   */\n      dup7\n        /* \"#utility.yul\":9692:9714   */\n      add\n        /* \"#utility.yul\":9671:9724   */\n      tag_470\n      jump\t// in\n    tag_641:\n        /* \"#utility.yul\":9661:9724   */\n      swap3\n      pop\n        /* \"#utility.yul\":9617:9734   */\n      pop\n        /* \"#utility.yul\":9773:9775   */\n      0x20\n        /* \"#utility.yul\":9799:9852   */\n      tag_642\n        /* \"#utility.yul\":9844:9851   */\n      dup6\n        /* \"#utility.yul\":9835:9841   */\n      dup3\n        /* \"#utility.yul\":9824:9833   */\n      dup7\n        /* \"#utility.yul\":9820:9842   */\n      add\n        /* \"#utility.yul\":9799:9852   */\n      tag_470\n      jump\t// in\n    tag_642:\n        /* \"#utility.yul\":9789:9852   */\n      swap2\n      pop\n        /* \"#utility.yul\":9744:9862   */\n      pop\n        /* \"#utility.yul\":9395:9869   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9875:10055   */\n    tag_493:\n        /* \"#utility.yul\":9923:10000   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9920:9921   */\n      0x00\n        /* \"#utility.yul\":9913:10001   */\n      mstore\n        /* \"#utility.yul\":10020:10024   */\n      0x22\n        /* \"#utility.yul\":10017:10018   */\n      0x04\n        /* \"#utility.yul\":10010:10025   */\n      mstore\n        /* \"#utility.yul\":10044:10048   */\n      0x24\n        /* \"#utility.yul\":10041:10042   */\n      0x00\n        /* \"#utility.yul\":10034:10049   */\n      revert\n        /* \"#utility.yul\":10061:10381   */\n    tag_166:\n        /* \"#utility.yul\":10105:10111   */\n      0x00\n        /* \"#utility.yul\":10142:10143   */\n      0x02\n        /* \"#utility.yul\":10136:10140   */\n      dup3\n        /* \"#utility.yul\":10132:10144   */\n      div\n        /* \"#utility.yul\":10122:10144   */\n      swap1\n      pop\n        /* \"#utility.yul\":10189:10190   */\n      0x01\n        /* \"#utility.yul\":10183:10187   */\n      dup3\n        /* \"#utility.yul\":10179:10191   */\n      and\n        /* \"#utility.yul\":10210:10228   */\n      dup1\n        /* \"#utility.yul\":10200:10281   */\n      tag_645\n      jumpi\n        /* \"#utility.yul\":10266:10270   */\n      0x7f\n        /* \"#utility.yul\":10258:10264   */\n      dup3\n        /* \"#utility.yul\":10254:10271   */\n      and\n        /* \"#utility.yul\":10244:10271   */\n      swap2\n      pop\n        /* \"#utility.yul\":10200:10281   */\n    tag_645:\n        /* \"#utility.yul\":10328:10330   */\n      0x20\n        /* \"#utility.yul\":10320:10326   */\n      dup3\n        /* \"#utility.yul\":10317:10331   */\n      lt\n        /* \"#utility.yul\":10297:10315   */\n      dup2\n        /* \"#utility.yul\":10294:10332   */\n      sub\n        /* \"#utility.yul\":10291:10375   */\n      tag_646\n      jumpi\n        /* \"#utility.yul\":10347:10365   */\n      tag_647\n      tag_493\n      jump\t// in\n    tag_647:\n        /* \"#utility.yul\":10291:10375   */\n    tag_646:\n        /* \"#utility.yul\":10112:10381   */\n      pop\n        /* \"#utility.yul\":10061:10381   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10387:10567   */\n    tag_494:\n        /* \"#utility.yul\":10435:10512   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10432:10433   */\n      0x00\n        /* \"#utility.yul\":10425:10513   */\n      mstore\n        /* \"#utility.yul\":10532:10536   */\n      0x12\n        /* \"#utility.yul\":10529:10530   */\n      0x04\n        /* \"#utility.yul\":10522:10537   */\n      mstore\n        /* \"#utility.yul\":10556:10560   */\n      0x24\n        /* \"#utility.yul\":10553:10554   */\n      0x00\n        /* \"#utility.yul\":10546:10561   */\n      revert\n        /* \"#utility.yul\":10573:10753   */\n    tag_495:\n        /* \"#utility.yul\":10621:10698   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10618:10619   */\n      0x00\n        /* \"#utility.yul\":10611:10699   */\n      mstore\n        /* \"#utility.yul\":10718:10722   */\n      0x11\n        /* \"#utility.yul\":10715:10716   */\n      0x04\n        /* \"#utility.yul\":10708:10723   */\n      mstore\n        /* \"#utility.yul\":10742:10746   */\n      0x24\n        /* \"#utility.yul\":10739:10740   */\n      0x00\n        /* \"#utility.yul\":10732:10747   */\n      revert\n        /* \"#utility.yul\":10759:10944   */\n    tag_181:\n        /* \"#utility.yul\":10799:10800   */\n      0x00\n        /* \"#utility.yul\":10816:10836   */\n      tag_651\n        /* \"#utility.yul\":10834:10835   */\n      dup3\n        /* \"#utility.yul\":10816:10836   */\n      tag_471\n      jump\t// in\n    tag_651:\n        /* \"#utility.yul\":10811:10836   */\n      swap2\n      pop\n        /* \"#utility.yul\":10850:10870   */\n      tag_652\n        /* \"#utility.yul\":10868:10869   */\n      dup4\n        /* \"#utility.yul\":10850:10870   */\n      tag_471\n      jump\t// in\n    tag_652:\n        /* \"#utility.yul\":10845:10870   */\n      swap3\n      pop\n        /* \"#utility.yul\":10889:10890   */\n      dup3\n        /* \"#utility.yul\":10879:10914   */\n      tag_653\n      jumpi\n        /* \"#utility.yul\":10894:10912   */\n      tag_654\n      tag_494\n      jump\t// in\n    tag_654:\n        /* \"#utility.yul\":10879:10914   */\n    tag_653:\n        /* \"#utility.yul\":10936:10937   */\n      dup3\n        /* \"#utility.yul\":10933:10934   */\n      dup3\n        /* \"#utility.yul\":10929:10938   */\n      div\n        /* \"#utility.yul\":10924:10938   */\n      swap1\n      pop\n        /* \"#utility.yul\":10759:10944   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10950:11194   */\n    tag_496:\n        /* \"#utility.yul\":11090:11124   */\n      0x416d6f756e74206d75737420616c77617973206265206c657373207468616e20\n        /* \"#utility.yul\":11086:11087   */\n      0x00\n        /* \"#utility.yul\":11078:11084   */\n      dup3\n        /* \"#utility.yul\":11074:11088   */\n      add\n        /* \"#utility.yul\":11067:11125   */\n      mstore\n        /* \"#utility.yul\":11159:11186   */\n      0x746865206e756d626572206f6620706f7373657373696f6e7300000000000000\n        /* \"#utility.yul\":11154:11156   */\n      0x20\n        /* \"#utility.yul\":11146:11152   */\n      dup3\n        /* \"#utility.yul\":11142:11157   */\n      add\n        /* \"#utility.yul\":11135:11187   */\n      mstore\n        /* \"#utility.yul\":10950:11194   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11200:11566   */\n    tag_497:\n        /* \"#utility.yul\":11342:11345   */\n      0x00\n        /* \"#utility.yul\":11363:11430   */\n      tag_657\n        /* \"#utility.yul\":11427:11429   */\n      0x39\n        /* \"#utility.yul\":11422:11425   */\n      dup4\n        /* \"#utility.yul\":11363:11430   */\n      tag_460\n      jump\t// in\n    tag_657:\n        /* \"#utility.yul\":11356:11430   */\n      swap2\n      pop\n        /* \"#utility.yul\":11439:11532   */\n      tag_658\n        /* \"#utility.yul\":11528:11531   */\n      dup3\n        /* \"#utility.yul\":11439:11532   */\n      tag_496\n      jump\t// in\n    tag_658:\n        /* \"#utility.yul\":11557:11559   */\n      0x40\n        /* \"#utility.yul\":11552:11555   */\n      dup3\n        /* \"#utility.yul\":11548:11560   */\n      add\n        /* \"#utility.yul\":11541:11560   */\n      swap1\n      pop\n        /* \"#utility.yul\":11200:11566   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11572:11991   */\n    tag_192:\n        /* \"#utility.yul\":11738:11742   */\n      0x00\n        /* \"#utility.yul\":11776:11778   */\n      0x20\n        /* \"#utility.yul\":11765:11774   */\n      dup3\n        /* \"#utility.yul\":11761:11779   */\n      add\n        /* \"#utility.yul\":11753:11779   */\n      swap1\n      pop\n        /* \"#utility.yul\":11825:11834   */\n      dup2\n        /* \"#utility.yul\":11819:11823   */\n      dup2\n        /* \"#utility.yul\":11815:11835   */\n      sub\n        /* \"#utility.yul\":11811:11812   */\n      0x00\n        /* \"#utility.yul\":11800:11809   */\n      dup4\n        /* \"#utility.yul\":11796:11813   */\n      add\n        /* \"#utility.yul\":11789:11836   */\n      mstore\n        /* \"#utility.yul\":11853:11984   */\n      tag_660\n        /* \"#utility.yul\":11979:11983   */\n      dup2\n        /* \"#utility.yul\":11853:11984   */\n      tag_497\n      jump\t// in\n    tag_660:\n        /* \"#utility.yul\":11845:11984   */\n      swap1\n      pop\n        /* \"#utility.yul\":11572:11991   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11997:12191   */\n    tag_194:\n        /* \"#utility.yul\":12037:12041   */\n      0x00\n        /* \"#utility.yul\":12057:12077   */\n      tag_662\n        /* \"#utility.yul\":12075:12076   */\n      dup3\n        /* \"#utility.yul\":12057:12077   */\n      tag_471\n      jump\t// in\n    tag_662:\n        /* \"#utility.yul\":12052:12077   */\n      swap2\n      pop\n        /* \"#utility.yul\":12091:12111   */\n      tag_663\n        /* \"#utility.yul\":12109:12110   */\n      dup4\n        /* \"#utility.yul\":12091:12111   */\n      tag_471\n      jump\t// in\n    tag_663:\n        /* \"#utility.yul\":12086:12111   */\n      swap3\n      pop\n        /* \"#utility.yul\":12135:12136   */\n      dup3\n        /* \"#utility.yul\":12132:12133   */\n      dup3\n        /* \"#utility.yul\":12128:12137   */\n      sub\n        /* \"#utility.yul\":12120:12137   */\n      swap1\n      pop\n        /* \"#utility.yul\":12159:12160   */\n      dup2\n        /* \"#utility.yul\":12153:12157   */\n      dup2\n        /* \"#utility.yul\":12150:12161   */\n      gt\n        /* \"#utility.yul\":12147:12184   */\n      iszero\n      tag_664\n      jumpi\n        /* \"#utility.yul\":12164:12182   */\n      tag_665\n      tag_495\n      jump\t// in\n    tag_665:\n        /* \"#utility.yul\":12147:12184   */\n    tag_664:\n        /* \"#utility.yul\":11997:12191   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12197:12607   */\n    tag_198:\n        /* \"#utility.yul\":12237:12244   */\n      0x00\n        /* \"#utility.yul\":12260:12280   */\n      tag_667\n        /* \"#utility.yul\":12278:12279   */\n      dup3\n        /* \"#utility.yul\":12260:12280   */\n      tag_471\n      jump\t// in\n    tag_667:\n        /* \"#utility.yul\":12255:12280   */\n      swap2\n      pop\n        /* \"#utility.yul\":12294:12314   */\n      tag_668\n        /* \"#utility.yul\":12312:12313   */\n      dup4\n        /* \"#utility.yul\":12294:12314   */\n      tag_471\n      jump\t// in\n    tag_668:\n        /* \"#utility.yul\":12289:12314   */\n      swap3\n      pop\n        /* \"#utility.yul\":12349:12350   */\n      dup3\n        /* \"#utility.yul\":12346:12347   */\n      dup3\n        /* \"#utility.yul\":12342:12351   */\n      mul\n        /* \"#utility.yul\":12371:12401   */\n      tag_669\n        /* \"#utility.yul\":12389:12400   */\n      dup2\n        /* \"#utility.yul\":12371:12401   */\n      tag_471\n      jump\t// in\n    tag_669:\n        /* \"#utility.yul\":12360:12401   */\n      swap2\n      pop\n        /* \"#utility.yul\":12550:12551   */\n      dup3\n        /* \"#utility.yul\":12541:12548   */\n      dup3\n        /* \"#utility.yul\":12537:12552   */\n      div\n        /* \"#utility.yul\":12534:12535   */\n      dup5\n        /* \"#utility.yul\":12531:12553   */\n      eq\n        /* \"#utility.yul\":12511:12512   */\n      dup4\n        /* \"#utility.yul\":12504:12513   */\n      iszero\n        /* \"#utility.yul\":12484:12567   */\n      or\n        /* \"#utility.yul\":12461:12600   */\n      tag_670\n      jumpi\n        /* \"#utility.yul\":12580:12598   */\n      tag_671\n      tag_495\n      jump\t// in\n    tag_671:\n        /* \"#utility.yul\":12461:12600   */\n    tag_670:\n        /* \"#utility.yul\":12245:12607   */\n      pop\n        /* \"#utility.yul\":12197:12607   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12613:12795   */\n    tag_498:\n        /* \"#utility.yul\":12753:12787   */\n      0x416d6f756e74206d7573742062652067726561746572207468616e207a65726f\n        /* \"#utility.yul\":12749:12750   */\n      0x00\n        /* \"#utility.yul\":12741:12747   */\n      dup3\n        /* \"#utility.yul\":12737:12751   */\n      add\n        /* \"#utility.yul\":12730:12788   */\n      mstore\n        /* \"#utility.yul\":12613:12795   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12801:13167   */\n    tag_499:\n        /* \"#utility.yul\":12943:12946   */\n      0x00\n        /* \"#utility.yul\":12964:13031   */\n      tag_674\n        /* \"#utility.yul\":13028:13030   */\n      0x20\n        /* \"#utility.yul\":13023:13026   */\n      dup4\n        /* \"#utility.yul\":12964:13031   */\n      tag_460\n      jump\t// in\n    tag_674:\n        /* \"#utility.yul\":12957:13031   */\n      swap2\n      pop\n        /* \"#utility.yul\":13040:13133   */\n      tag_675\n        /* \"#utility.yul\":13129:13132   */\n      dup3\n        /* \"#utility.yul\":13040:13133   */\n      tag_498\n      jump\t// in\n    tag_675:\n        /* \"#utility.yul\":13158:13160   */\n      0x20\n        /* \"#utility.yul\":13153:13156   */\n      dup3\n        /* \"#utility.yul\":13149:13161   */\n      add\n        /* \"#utility.yul\":13142:13161   */\n      swap1\n      pop\n        /* \"#utility.yul\":12801:13167   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13173:13592   */\n    tag_206:\n        /* \"#utility.yul\":13339:13343   */\n      0x00\n        /* \"#utility.yul\":13377:13379   */\n      0x20\n        /* \"#utility.yul\":13366:13375   */\n      dup3\n        /* \"#utility.yul\":13362:13380   */\n      add\n        /* \"#utility.yul\":13354:13380   */\n      swap1\n      pop\n        /* \"#utility.yul\":13426:13435   */\n      dup2\n        /* \"#utility.yul\":13420:13424   */\n      dup2\n        /* \"#utility.yul\":13416:13436   */\n      sub\n        /* \"#utility.yul\":13412:13413   */\n      0x00\n        /* \"#utility.yul\":13401:13410   */\n      dup4\n        /* \"#utility.yul\":13397:13414   */\n      add\n        /* \"#utility.yul\":13390:13437   */\n      mstore\n        /* \"#utility.yul\":13454:13585   */\n      tag_677\n        /* \"#utility.yul\":13580:13584   */\n      dup2\n        /* \"#utility.yul\":13454:13585   */\n      tag_499\n      jump\t// in\n    tag_677:\n        /* \"#utility.yul\":13446:13585   */\n      swap1\n      pop\n        /* \"#utility.yul\":13173:13592   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13598:13789   */\n    tag_213:\n        /* \"#utility.yul\":13638:13641   */\n      0x00\n        /* \"#utility.yul\":13657:13677   */\n      tag_679\n        /* \"#utility.yul\":13675:13676   */\n      dup3\n        /* \"#utility.yul\":13657:13677   */\n      tag_471\n      jump\t// in\n    tag_679:\n        /* \"#utility.yul\":13652:13677   */\n      swap2\n      pop\n        /* \"#utility.yul\":13691:13711   */\n      tag_680\n        /* \"#utility.yul\":13709:13710   */\n      dup4\n        /* \"#utility.yul\":13691:13711   */\n      tag_471\n      jump\t// in\n    tag_680:\n        /* \"#utility.yul\":13686:13711   */\n      swap3\n      pop\n        /* \"#utility.yul\":13734:13735   */\n      dup3\n        /* \"#utility.yul\":13731:13732   */\n      dup3\n        /* \"#utility.yul\":13727:13736   */\n      add\n        /* \"#utility.yul\":13720:13736   */\n      swap1\n      pop\n        /* \"#utility.yul\":13755:13758   */\n      dup1\n        /* \"#utility.yul\":13752:13753   */\n      dup3\n        /* \"#utility.yul\":13749:13759   */\n      gt\n        /* \"#utility.yul\":13746:13782   */\n      iszero\n      tag_681\n      jumpi\n        /* \"#utility.yul\":13762:13780   */\n      tag_682\n      tag_495\n      jump\t// in\n    tag_682:\n        /* \"#utility.yul\":13746:13782   */\n    tag_681:\n        /* \"#utility.yul\":13598:13789   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13795:14180   */\n    tag_248:\n        /* \"#utility.yul\":13834:13835   */\n      0x00\n        /* \"#utility.yul\":13851:13870   */\n      tag_684\n        /* \"#utility.yul\":13868:13869   */\n      dup3\n        /* \"#utility.yul\":13851:13870   */\n      tag_491\n      jump\t// in\n    tag_684:\n        /* \"#utility.yul\":13846:13870   */\n      swap2\n      pop\n        /* \"#utility.yul\":13884:13903   */\n      tag_685\n        /* \"#utility.yul\":13901:13902   */\n      dup4\n        /* \"#utility.yul\":13884:13903   */\n      tag_491\n      jump\t// in\n    tag_685:\n        /* \"#utility.yul\":13879:13903   */\n      swap3\n      pop\n        /* \"#utility.yul\":13922:13923   */\n      dup3\n        /* \"#utility.yul\":13912:13947   */\n      tag_686\n      jumpi\n        /* \"#utility.yul\":13927:13945   */\n      tag_687\n      tag_494\n      jump\t// in\n    tag_687:\n        /* \"#utility.yul\":13912:13947   */\n    tag_686:\n        /* \"#utility.yul\":14113:14114   */\n      0x01\n        /* \"#utility.yul\":14110:14111   */\n      0x00\n        /* \"#utility.yul\":14106:14115   */\n      sub\n        /* \"#utility.yul\":14103:14104   */\n      dup4\n        /* \"#utility.yul\":14100:14116   */\n      eq\n        /* \"#utility.yul\":14019:14085   */\n      0x8000000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14016:14017   */\n      dup4\n        /* \"#utility.yul\":14013:14086   */\n      eq\n        /* \"#utility.yul\":13996:14126   */\n      and\n        /* \"#utility.yul\":13993:14149   */\n      iszero\n      tag_688\n      jumpi\n        /* \"#utility.yul\":14129:14147   */\n      tag_689\n      tag_495\n      jump\t// in\n    tag_689:\n        /* \"#utility.yul\":13993:14149   */\n    tag_688:\n        /* \"#utility.yul\":14172:14173   */\n      dup3\n        /* \"#utility.yul\":14169:14170   */\n      dup3\n        /* \"#utility.yul\":14164:14174   */\n      sdiv\n        /* \"#utility.yul\":14159:14174   */\n      swap1\n      pop\n        /* \"#utility.yul\":13795:14180   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14186:14291   */\n    tag_500:\n        /* \"#utility.yul\":14222:14229   */\n      0x00\n        /* \"#utility.yul\":14262:14284   */\n      0xffffffffffffffffffff\n        /* \"#utility.yul\":14255:14260   */\n      dup3\n        /* \"#utility.yul\":14251:14285   */\n      and\n        /* \"#utility.yul\":14240:14285   */\n      swap1\n      pop\n        /* \"#utility.yul\":14186:14291   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14297:14417   */\n    tag_501:\n        /* \"#utility.yul\":14369:14392   */\n      tag_692\n        /* \"#utility.yul\":14386:14391   */\n      dup2\n        /* \"#utility.yul\":14369:14392   */\n      tag_500\n      jump\t// in\n    tag_692:\n        /* \"#utility.yul\":14362:14367   */\n      dup2\n        /* \"#utility.yul\":14359:14393   */\n      eq\n        /* \"#utility.yul\":14349:14411   */\n      tag_693\n      jumpi\n        /* \"#utility.yul\":14407:14408   */\n      0x00\n        /* \"#utility.yul\":14404:14405   */\n      dup1\n        /* \"#utility.yul\":14397:14409   */\n      revert\n        /* \"#utility.yul\":14349:14411   */\n    tag_693:\n        /* \"#utility.yul\":14297:14417   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14423:14564   */\n    tag_502:\n        /* \"#utility.yul\":14479:14484   */\n      0x00\n        /* \"#utility.yul\":14510:14516   */\n      dup2\n        /* \"#utility.yul\":14504:14517   */\n      mload\n        /* \"#utility.yul\":14495:14517   */\n      swap1\n      pop\n        /* \"#utility.yul\":14526:14558   */\n      tag_695\n        /* \"#utility.yul\":14552:14557   */\n      dup2\n        /* \"#utility.yul\":14526:14558   */\n      tag_501\n      jump\t// in\n    tag_695:\n        /* \"#utility.yul\":14423:14564   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14570:14690   */\n    tag_503:\n        /* \"#utility.yul\":14642:14665   */\n      tag_697\n        /* \"#utility.yul\":14659:14664   */\n      dup2\n        /* \"#utility.yul\":14642:14665   */\n      tag_491\n      jump\t// in\n    tag_697:\n        /* \"#utility.yul\":14635:14640   */\n      dup2\n        /* \"#utility.yul\":14632:14666   */\n      eq\n        /* \"#utility.yul\":14622:14684   */\n      tag_698\n      jumpi\n        /* \"#utility.yul\":14680:14681   */\n      0x00\n        /* \"#utility.yul\":14677:14678   */\n      dup1\n        /* \"#utility.yul\":14670:14682   */\n      revert\n        /* \"#utility.yul\":14622:14684   */\n    tag_698:\n        /* \"#utility.yul\":14570:14690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14696:14837   */\n    tag_504:\n        /* \"#utility.yul\":14752:14757   */\n      0x00\n        /* \"#utility.yul\":14783:14789   */\n      dup2\n        /* \"#utility.yul\":14777:14790   */\n      mload\n        /* \"#utility.yul\":14768:14790   */\n      swap1\n      pop\n        /* \"#utility.yul\":14799:14831   */\n      tag_700\n        /* \"#utility.yul\":14825:14830   */\n      dup2\n        /* \"#utility.yul\":14799:14831   */\n      tag_503\n      jump\t// in\n    tag_700:\n        /* \"#utility.yul\":14696:14837   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14843:14986   */\n    tag_505:\n        /* \"#utility.yul\":14900:14905   */\n      0x00\n        /* \"#utility.yul\":14931:14937   */\n      dup2\n        /* \"#utility.yul\":14925:14938   */\n      mload\n        /* \"#utility.yul\":14916:14938   */\n      swap1\n      pop\n        /* \"#utility.yul\":14947:14980   */\n      tag_702\n        /* \"#utility.yul\":14974:14979   */\n      dup2\n        /* \"#utility.yul\":14947:14980   */\n      tag_472\n      jump\t// in\n    tag_702:\n        /* \"#utility.yul\":14843:14986   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14992:15963   */\n    tag_270:\n        /* \"#utility.yul\":15095:15101   */\n      0x00\n        /* \"#utility.yul\":15103:15109   */\n      dup1\n        /* \"#utility.yul\":15111:15117   */\n      0x00\n        /* \"#utility.yul\":15119:15125   */\n      dup1\n        /* \"#utility.yul\":15127:15133   */\n      0x00\n        /* \"#utility.yul\":15176:15179   */\n      0xa0\n        /* \"#utility.yul\":15164:15173   */\n      dup7\n        /* \"#utility.yul\":15155:15162   */\n      dup9\n        /* \"#utility.yul\":15151:15174   */\n      sub\n        /* \"#utility.yul\":15147:15180   */\n      slt\n        /* \"#utility.yul\":15144:15264   */\n      iszero\n      tag_704\n      jumpi\n        /* \"#utility.yul\":15183:15262   */\n      tag_705\n      tag_465\n      jump\t// in\n    tag_705:\n        /* \"#utility.yul\":15144:15264   */\n    tag_704:\n        /* \"#utility.yul\":15303:15304   */\n      0x00\n        /* \"#utility.yul\":15328:15391   */\n      tag_706\n        /* \"#utility.yul\":15383:15390   */\n      dup9\n        /* \"#utility.yul\":15374:15380   */\n      dup3\n        /* \"#utility.yul\":15363:15372   */\n      dup10\n        /* \"#utility.yul\":15359:15381   */\n      add\n        /* \"#utility.yul\":15328:15391   */\n      tag_502\n      jump\t// in\n    tag_706:\n        /* \"#utility.yul\":15318:15391   */\n      swap6\n      pop\n        /* \"#utility.yul\":15274:15401   */\n      pop\n        /* \"#utility.yul\":15440:15442   */\n      0x20\n        /* \"#utility.yul\":15466:15529   */\n      tag_707\n        /* \"#utility.yul\":15521:15528   */\n      dup9\n        /* \"#utility.yul\":15512:15518   */\n      dup3\n        /* \"#utility.yul\":15501:15510   */\n      dup10\n        /* \"#utility.yul\":15497:15519   */\n      add\n        /* \"#utility.yul\":15466:15529   */\n      tag_504\n      jump\t// in\n    tag_707:\n        /* \"#utility.yul\":15456:15529   */\n      swap5\n      pop\n        /* \"#utility.yul\":15411:15539   */\n      pop\n        /* \"#utility.yul\":15578:15580   */\n      0x40\n        /* \"#utility.yul\":15604:15668   */\n      tag_708\n        /* \"#utility.yul\":15660:15667   */\n      dup9\n        /* \"#utility.yul\":15651:15657   */\n      dup3\n        /* \"#utility.yul\":15640:15649   */\n      dup10\n        /* \"#utility.yul\":15636:15658   */\n      add\n        /* \"#utility.yul\":15604:15668   */\n      tag_505\n      jump\t// in\n    tag_708:\n        /* \"#utility.yul\":15594:15668   */\n      swap4\n      pop\n        /* \"#utility.yul\":15549:15678   */\n      pop\n        /* \"#utility.yul\":15717:15719   */\n      0x60\n        /* \"#utility.yul\":15743:15807   */\n      tag_709\n        /* \"#utility.yul\":15799:15806   */\n      dup9\n        /* \"#utility.yul\":15790:15796   */\n      dup3\n        /* \"#utility.yul\":15779:15788   */\n      dup10\n        /* \"#utility.yul\":15775:15797   */\n      add\n        /* \"#utility.yul\":15743:15807   */\n      tag_505\n      jump\t// in\n    tag_709:\n        /* \"#utility.yul\":15733:15807   */\n      swap3\n      pop\n        /* \"#utility.yul\":15688:15817   */\n      pop\n        /* \"#utility.yul\":15856:15859   */\n      0x80\n        /* \"#utility.yul\":15883:15946   */\n      tag_710\n        /* \"#utility.yul\":15938:15945   */\n      dup9\n        /* \"#utility.yul\":15929:15935   */\n      dup3\n        /* \"#utility.yul\":15918:15927   */\n      dup10\n        /* \"#utility.yul\":15914:15936   */\n      add\n        /* \"#utility.yul\":15883:15946   */\n      tag_502\n      jump\t// in\n    tag_710:\n        /* \"#utility.yul\":15873:15946   */\n      swap2\n      pop\n        /* \"#utility.yul\":15827:15956   */\n      pop\n        /* \"#utility.yul\":14992:15963   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15969:16054   */\n    tag_506:\n        /* \"#utility.yul\":16014:16021   */\n      0x00\n        /* \"#utility.yul\":16043:16048   */\n      dup2\n        /* \"#utility.yul\":16032:16048   */\n      swap1\n      pop\n        /* \"#utility.yul\":15969:16054   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16060:16161   */\n    tag_507:\n        /* \"#utility.yul\":16096:16103   */\n      0x00\n        /* \"#utility.yul\":16136:16154   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":16129:16134   */\n      dup3\n        /* \"#utility.yul\":16125:16155   */\n      and\n        /* \"#utility.yul\":16114:16155   */\n      swap1\n      pop\n        /* \"#utility.yul\":16060:16161   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16167:16227   */\n    tag_508:\n        /* \"#utility.yul\":16195:16198   */\n      0x00\n        /* \"#utility.yul\":16216:16221   */\n      dup2\n        /* \"#utility.yul\":16209:16221   */\n      swap1\n      pop\n        /* \"#utility.yul\":16167:16227   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16233:16389   */\n    tag_509:\n        /* \"#utility.yul\":16290:16299   */\n      0x00\n        /* \"#utility.yul\":16323:16383   */\n      tag_715\n        /* \"#utility.yul\":16340:16382   */\n      tag_716\n        /* \"#utility.yul\":16349:16381   */\n      tag_717\n        /* \"#utility.yul\":16375:16380   */\n      dup5\n        /* \"#utility.yul\":16349:16381   */\n      tag_506\n      jump\t// in\n    tag_717:\n        /* \"#utility.yul\":16340:16382   */\n      tag_508\n      jump\t// in\n    tag_716:\n        /* \"#utility.yul\":16323:16383   */\n      tag_507\n      jump\t// in\n    tag_715:\n        /* \"#utility.yul\":16310:16383   */\n      swap1\n      pop\n        /* \"#utility.yul\":16233:16389   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16395:16540   */\n    tag_510:\n        /* \"#utility.yul\":16489:16533   */\n      tag_719\n        /* \"#utility.yul\":16527:16532   */\n      dup2\n        /* \"#utility.yul\":16489:16533   */\n      tag_509\n      jump\t// in\n    tag_719:\n        /* \"#utility.yul\":16484:16487   */\n      dup3\n        /* \"#utility.yul\":16477:16534   */\n      mstore\n        /* \"#utility.yul\":16395:16540   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16546:16782   */\n    tag_290:\n        /* \"#utility.yul\":16646:16650   */\n      0x00\n        /* \"#utility.yul\":16684:16686   */\n      0x20\n        /* \"#utility.yul\":16673:16682   */\n      dup3\n        /* \"#utility.yul\":16669:16687   */\n      add\n        /* \"#utility.yul\":16661:16687   */\n      swap1\n      pop\n        /* \"#utility.yul\":16697:16775   */\n      tag_721\n        /* \"#utility.yul\":16772:16773   */\n      0x00\n        /* \"#utility.yul\":16761:16770   */\n      dup4\n        /* \"#utility.yul\":16757:16774   */\n      add\n        /* \"#utility.yul\":16748:16754   */\n      dup5\n        /* \"#utility.yul\":16697:16775   */\n      tag_510\n      jump\t// in\n    tag_721:\n        /* \"#utility.yul\":16546:16782   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16788:17230   */\n    tag_316:\n        /* \"#utility.yul\":16937:16941   */\n      0x00\n        /* \"#utility.yul\":16975:16977   */\n      0x60\n        /* \"#utility.yul\":16964:16973   */\n      dup3\n        /* \"#utility.yul\":16960:16978   */\n      add\n        /* \"#utility.yul\":16952:16978   */\n      swap1\n      pop\n        /* \"#utility.yul\":16988:17059   */\n      tag_723\n        /* \"#utility.yul\":17056:17057   */\n      0x00\n        /* \"#utility.yul\":17045:17054   */\n      dup4\n        /* \"#utility.yul\":17041:17058   */\n      add\n        /* \"#utility.yul\":17032:17038   */\n      dup7\n        /* \"#utility.yul\":16988:17059   */\n      tag_490\n      jump\t// in\n    tag_723:\n        /* \"#utility.yul\":17069:17141   */\n      tag_724\n        /* \"#utility.yul\":17137:17139   */\n      0x20\n        /* \"#utility.yul\":17126:17135   */\n      dup4\n        /* \"#utility.yul\":17122:17140   */\n      add\n        /* \"#utility.yul\":17113:17119   */\n      dup6\n        /* \"#utility.yul\":17069:17141   */\n      tag_476\n      jump\t// in\n    tag_724:\n        /* \"#utility.yul\":17151:17223   */\n      tag_725\n        /* \"#utility.yul\":17219:17221   */\n      0x40\n        /* \"#utility.yul\":17208:17217   */\n      dup4\n        /* \"#utility.yul\":17204:17222   */\n      add\n        /* \"#utility.yul\":17195:17201   */\n      dup5\n        /* \"#utility.yul\":17151:17223   */\n      tag_476\n      jump\t// in\n    tag_725:\n        /* \"#utility.yul\":16788:17230   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17236:17358   */\n    tag_511:\n        /* \"#utility.yul\":17309:17333   */\n      tag_727\n        /* \"#utility.yul\":17327:17332   */\n      dup2\n        /* \"#utility.yul\":17309:17333   */\n      tag_488\n      jump\t// in\n    tag_727:\n        /* \"#utility.yul\":17302:17307   */\n      dup2\n        /* \"#utility.yul\":17299:17334   */\n      eq\n        /* \"#utility.yul\":17289:17352   */\n      tag_728\n      jumpi\n        /* \"#utility.yul\":17348:17349   */\n      0x00\n        /* \"#utility.yul\":17345:17346   */\n      dup1\n        /* \"#utility.yul\":17338:17350   */\n      revert\n        /* \"#utility.yul\":17289:17352   */\n    tag_728:\n        /* \"#utility.yul\":17236:17358   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17364:17507   */\n    tag_512:\n        /* \"#utility.yul\":17421:17426   */\n      0x00\n        /* \"#utility.yul\":17452:17458   */\n      dup2\n        /* \"#utility.yul\":17446:17459   */\n      mload\n        /* \"#utility.yul\":17437:17459   */\n      swap1\n      pop\n        /* \"#utility.yul\":17468:17501   */\n      tag_730\n        /* \"#utility.yul\":17495:17500   */\n      dup2\n        /* \"#utility.yul\":17468:17501   */\n      tag_511\n      jump\t// in\n    tag_730:\n        /* \"#utility.yul\":17364:17507   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17513:17864   */\n    tag_344:\n        /* \"#utility.yul\":17583:17589   */\n      0x00\n        /* \"#utility.yul\":17632:17634   */\n      0x20\n        /* \"#utility.yul\":17620:17629   */\n      dup3\n        /* \"#utility.yul\":17611:17618   */\n      dup5\n        /* \"#utility.yul\":17607:17630   */\n      sub\n        /* \"#utility.yul\":17603:17635   */\n      slt\n        /* \"#utility.yul\":17600:17719   */\n      iszero\n      tag_732\n      jumpi\n        /* \"#utility.yul\":17638:17717   */\n      tag_733\n      tag_465\n      jump\t// in\n    tag_733:\n        /* \"#utility.yul\":17600:17719   */\n    tag_732:\n        /* \"#utility.yul\":17758:17759   */\n      0x00\n        /* \"#utility.yul\":17783:17847   */\n      tag_734\n        /* \"#utility.yul\":17839:17846   */\n      dup5\n        /* \"#utility.yul\":17830:17836   */\n      dup3\n        /* \"#utility.yul\":17819:17828   */\n      dup6\n        /* \"#utility.yul\":17815:17837   */\n      add\n        /* \"#utility.yul\":17783:17847   */\n      tag_512\n      jump\t// in\n    tag_734:\n        /* \"#utility.yul\":17773:17847   */\n      swap2\n      pop\n        /* \"#utility.yul\":17729:17857   */\n      pop\n        /* \"#utility.yul\":17513:17864   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17870:18011   */\n    tag_513:\n        /* \"#utility.yul\":17919:17923   */\n      0x00\n        /* \"#utility.yul\":17942:17945   */\n      dup2\n        /* \"#utility.yul\":17934:17945   */\n      swap1\n      pop\n        /* \"#utility.yul\":17965:17968   */\n      dup2\n        /* \"#utility.yul\":17962:17963   */\n      0x00\n        /* \"#utility.yul\":17955:17969   */\n      mstore\n        /* \"#utility.yul\":17999:18003   */\n      0x20\n        /* \"#utility.yul\":17996:17997   */\n      0x00\n        /* \"#utility.yul\":17986:18004   */\n      keccak256\n        /* \"#utility.yul\":17978:18004   */\n      swap1\n      pop\n        /* \"#utility.yul\":17870:18011   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18017:18110   */\n    tag_514:\n        /* \"#utility.yul\":18054:18060   */\n      0x00\n        /* \"#utility.yul\":18101:18103   */\n      0x20\n        /* \"#utility.yul\":18096:18098   */\n      0x1f\n        /* \"#utility.yul\":18089:18094   */\n      dup4\n        /* \"#utility.yul\":18085:18099   */\n      add\n        /* \"#utility.yul\":18081:18104   */\n      div\n        /* \"#utility.yul\":18071:18104   */\n      swap1\n      pop\n        /* \"#utility.yul\":18017:18110   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18116:18223   */\n    tag_515:\n        /* \"#utility.yul\":18160:18168   */\n      0x00\n        /* \"#utility.yul\":18210:18215   */\n      dup3\n        /* \"#utility.yul\":18204:18208   */\n      dup3\n        /* \"#utility.yul\":18200:18216   */\n      shl\n        /* \"#utility.yul\":18179:18216   */\n      swap1\n      pop\n        /* \"#utility.yul\":18116:18223   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18229:18622   */\n    tag_516:\n        /* \"#utility.yul\":18298:18304   */\n      0x00\n        /* \"#utility.yul\":18348:18349   */\n      0x08\n        /* \"#utility.yul\":18336:18346   */\n      dup4\n        /* \"#utility.yul\":18332:18350   */\n      mul\n        /* \"#utility.yul\":18371:18468   */\n      tag_739\n        /* \"#utility.yul\":18401:18467   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":18390:18399   */\n      dup3\n        /* \"#utility.yul\":18371:18468   */\n      tag_515\n      jump\t// in\n    tag_739:\n        /* \"#utility.yul\":18489:18528   */\n      tag_740\n        /* \"#utility.yul\":18519:18527   */\n      dup7\n        /* \"#utility.yul\":18508:18517   */\n      dup4\n        /* \"#utility.yul\":18489:18528   */\n      tag_515\n      jump\t// in\n    tag_740:\n        /* \"#utility.yul\":18477:18528   */\n      swap6\n      pop\n        /* \"#utility.yul\":18561:18565   */\n      dup1\n        /* \"#utility.yul\":18557:18566   */\n      not\n        /* \"#utility.yul\":18550:18555   */\n      dup5\n        /* \"#utility.yul\":18546:18567   */\n      and\n        /* \"#utility.yul\":18537:18567   */\n      swap4\n      pop\n        /* \"#utility.yul\":18610:18614   */\n      dup1\n        /* \"#utility.yul\":18600:18608   */\n      dup7\n        /* \"#utility.yul\":18596:18615   */\n      and\n        /* \"#utility.yul\":18589:18594   */\n      dup5\n        /* \"#utility.yul\":18586:18616   */\n      or\n        /* \"#utility.yul\":18576:18616   */\n      swap3\n      pop\n        /* \"#utility.yul\":18305:18622   */\n      pop\n      pop\n        /* \"#utility.yul\":18229:18622   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18628:18770   */\n    tag_517:\n        /* \"#utility.yul\":18678:18687   */\n      0x00\n        /* \"#utility.yul\":18711:18764   */\n      tag_742\n        /* \"#utility.yul\":18729:18763   */\n      tag_743\n        /* \"#utility.yul\":18738:18762   */\n      tag_744\n        /* \"#utility.yul\":18756:18761   */\n      dup5\n        /* \"#utility.yul\":18738:18762   */\n      tag_471\n      jump\t// in\n    tag_744:\n        /* \"#utility.yul\":18729:18763   */\n      tag_508\n      jump\t// in\n    tag_743:\n        /* \"#utility.yul\":18711:18764   */\n      tag_471\n      jump\t// in\n    tag_742:\n        /* \"#utility.yul\":18698:18764   */\n      swap1\n      pop\n        /* \"#utility.yul\":18628:18770   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18776:18851   */\n    tag_518:\n        /* \"#utility.yul\":18819:18822   */\n      0x00\n        /* \"#utility.yul\":18840:18845   */\n      dup2\n        /* \"#utility.yul\":18833:18845   */\n      swap1\n      pop\n        /* \"#utility.yul\":18776:18851   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18857:19126   */\n    tag_519:\n        /* \"#utility.yul\":18967:19006   */\n      tag_747\n        /* \"#utility.yul\":18998:19005   */\n      dup4\n        /* \"#utility.yul\":18967:19006   */\n      tag_517\n      jump\t// in\n    tag_747:\n        /* \"#utility.yul\":19028:19119   */\n      tag_748\n        /* \"#utility.yul\":19077:19118   */\n      tag_749\n        /* \"#utility.yul\":19101:19117   */\n      dup3\n        /* \"#utility.yul\":19077:19118   */\n      tag_518\n      jump\t// in\n    tag_749:\n        /* \"#utility.yul\":19069:19075   */\n      dup5\n        /* \"#utility.yul\":19062:19066   */\n      dup5\n        /* \"#utility.yul\":19056:19067   */\n      sload\n        /* \"#utility.yul\":19028:19119   */\n      tag_516\n      jump\t// in\n    tag_748:\n        /* \"#utility.yul\":19022:19026   */\n      dup3\n        /* \"#utility.yul\":19015:19120   */\n      sstore\n        /* \"#utility.yul\":18933:19126   */\n      pop\n        /* \"#utility.yul\":18857:19126   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19132:19205   */\n    tag_520:\n        /* \"#utility.yul\":19177:19180   */\n      0x00\n        /* \"#utility.yul\":19132:19205   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":19211:19400   */\n    tag_521:\n        /* \"#utility.yul\":19288:19320   */\n      tag_752\n      tag_520\n      jump\t// in\n    tag_752:\n        /* \"#utility.yul\":19329:19394   */\n      tag_753\n        /* \"#utility.yul\":19387:19393   */\n      dup2\n        /* \"#utility.yul\":19379:19385   */\n      dup5\n        /* \"#utility.yul\":19373:19377   */\n      dup5\n        /* \"#utility.yul\":19329:19394   */\n      tag_519\n      jump\t// in\n    tag_753:\n        /* \"#utility.yul\":19264:19400   */\n      pop\n        /* \"#utility.yul\":19211:19400   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19406:19592   */\n    tag_522:\n        /* \"#utility.yul\":19466:19586   */\n    tag_755:\n        /* \"#utility.yul\":19483:19486   */\n      dup2\n        /* \"#utility.yul\":19476:19481   */\n      dup2\n        /* \"#utility.yul\":19473:19487   */\n      lt\n        /* \"#utility.yul\":19466:19586   */\n      iszero\n      tag_757\n      jumpi\n        /* \"#utility.yul\":19537:19576   */\n      tag_758\n        /* \"#utility.yul\":19574:19575   */\n      0x00\n        /* \"#utility.yul\":19567:19572   */\n      dup3\n        /* \"#utility.yul\":19537:19576   */\n      tag_521\n      jump\t// in\n    tag_758:\n        /* \"#utility.yul\":19510:19511   */\n      0x01\n        /* \"#utility.yul\":19503:19508   */\n      dup2\n        /* \"#utility.yul\":19499:19512   */\n      add\n        /* \"#utility.yul\":19490:19512   */\n      swap1\n      pop\n        /* \"#utility.yul\":19466:19586   */\n      jump(tag_755)\n    tag_757:\n        /* \"#utility.yul\":19406:19592   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19598:20141   */\n    tag_523:\n        /* \"#utility.yul\":19699:19701   */\n      0x1f\n        /* \"#utility.yul\":19694:19697   */\n      dup3\n        /* \"#utility.yul\":19691:19702   */\n      gt\n        /* \"#utility.yul\":19688:20134   */\n      iszero\n      tag_760\n      jumpi\n        /* \"#utility.yul\":19733:19771   */\n      tag_761\n        /* \"#utility.yul\":19765:19770   */\n      dup2\n        /* \"#utility.yul\":19733:19771   */\n      tag_513\n      jump\t// in\n    tag_761:\n        /* \"#utility.yul\":19817:19846   */\n      tag_762\n        /* \"#utility.yul\":19835:19845   */\n      dup5\n        /* \"#utility.yul\":19817:19846   */\n      tag_514\n      jump\t// in\n    tag_762:\n        /* \"#utility.yul\":19807:19815   */\n      dup2\n        /* \"#utility.yul\":19803:19847   */\n      add\n        /* \"#utility.yul\":20000:20002   */\n      0x20\n        /* \"#utility.yul\":19988:19998   */\n      dup6\n        /* \"#utility.yul\":19985:20003   */\n      lt\n        /* \"#utility.yul\":19982:20031   */\n      iszero\n      tag_763\n      jumpi\n        /* \"#utility.yul\":20021:20029   */\n      dup2\n        /* \"#utility.yul\":20006:20029   */\n      swap1\n      pop\n        /* \"#utility.yul\":19982:20031   */\n    tag_763:\n        /* \"#utility.yul\":20044:20124   */\n      tag_764\n        /* \"#utility.yul\":20100:20122   */\n      tag_765\n        /* \"#utility.yul\":20118:20121   */\n      dup6\n        /* \"#utility.yul\":20100:20122   */\n      tag_514\n      jump\t// in\n    tag_765:\n        /* \"#utility.yul\":20090:20098   */\n      dup4\n        /* \"#utility.yul\":20086:20123   */\n      add\n        /* \"#utility.yul\":20073:20084   */\n      dup3\n        /* \"#utility.yul\":20044:20124   */\n      tag_522\n      jump\t// in\n    tag_764:\n        /* \"#utility.yul\":19703:20134   */\n      pop\n      pop\n        /* \"#utility.yul\":19688:20134   */\n    tag_760:\n        /* \"#utility.yul\":19598:20141   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20147:20264   */\n    tag_524:\n        /* \"#utility.yul\":20201:20209   */\n      0x00\n        /* \"#utility.yul\":20251:20256   */\n      dup3\n        /* \"#utility.yul\":20245:20249   */\n      dup3\n        /* \"#utility.yul\":20241:20257   */\n      shr\n        /* \"#utility.yul\":20220:20257   */\n      swap1\n      pop\n        /* \"#utility.yul\":20147:20264   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20270:20439   */\n    tag_525:\n        /* \"#utility.yul\":20314:20320   */\n      0x00\n        /* \"#utility.yul\":20347:20398   */\n      tag_768\n        /* \"#utility.yul\":20395:20396   */\n      0x00\n        /* \"#utility.yul\":20391:20397   */\n      not\n        /* \"#utility.yul\":20383:20388   */\n      dup5\n        /* \"#utility.yul\":20380:20381   */\n      0x08\n        /* \"#utility.yul\":20376:20389   */\n      mul\n        /* \"#utility.yul\":20347:20398   */\n      tag_524\n      jump\t// in\n    tag_768:\n        /* \"#utility.yul\":20343:20399   */\n      not\n        /* \"#utility.yul\":20428:20432   */\n      dup1\n        /* \"#utility.yul\":20422:20426   */\n      dup4\n        /* \"#utility.yul\":20418:20433   */\n      and\n        /* \"#utility.yul\":20408:20433   */\n      swap2\n      pop\n        /* \"#utility.yul\":20321:20439   */\n      pop\n        /* \"#utility.yul\":20270:20439   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20444:20739   */\n    tag_526:\n        /* \"#utility.yul\":20520:20524   */\n      0x00\n        /* \"#utility.yul\":20666:20695   */\n      tag_770\n        /* \"#utility.yul\":20691:20694   */\n      dup4\n        /* \"#utility.yul\":20685:20689   */\n      dup4\n        /* \"#utility.yul\":20666:20695   */\n      tag_525\n      jump\t// in\n    tag_770:\n        /* \"#utility.yul\":20658:20695   */\n      swap2\n      pop\n        /* \"#utility.yul\":20728:20731   */\n      dup3\n        /* \"#utility.yul\":20725:20726   */\n      0x02\n        /* \"#utility.yul\":20721:20732   */\n      mul\n        /* \"#utility.yul\":20715:20719   */\n      dup3\n        /* \"#utility.yul\":20712:20733   */\n      or\n        /* \"#utility.yul\":20704:20733   */\n      swap1\n      pop\n        /* \"#utility.yul\":20444:20739   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20744:22139   */\n    tag_423:\n        /* \"#utility.yul\":20861:20898   */\n      tag_772\n        /* \"#utility.yul\":20894:20897   */\n      dup3\n        /* \"#utility.yul\":20861:20898   */\n      tag_459\n      jump\t// in\n    tag_772:\n        /* \"#utility.yul\":20963:20981   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":20955:20961   */\n      dup2\n        /* \"#utility.yul\":20952:20982   */\n      gt\n        /* \"#utility.yul\":20949:21005   */\n      iszero\n      tag_773\n      jumpi\n        /* \"#utility.yul\":20985:21003   */\n      tag_774\n      tag_481\n      jump\t// in\n    tag_774:\n        /* \"#utility.yul\":20949:21005   */\n    tag_773:\n        /* \"#utility.yul\":21029:21067   */\n      tag_775\n        /* \"#utility.yul\":21061:21065   */\n      dup3\n        /* \"#utility.yul\":21055:21066   */\n      sload\n        /* \"#utility.yul\":21029:21067   */\n      tag_166\n      jump\t// in\n    tag_775:\n        /* \"#utility.yul\":21114:21181   */\n      tag_776\n        /* \"#utility.yul\":21174:21180   */\n      dup3\n        /* \"#utility.yul\":21166:21172   */\n      dup3\n        /* \"#utility.yul\":21160:21164   */\n      dup6\n        /* \"#utility.yul\":21114:21181   */\n      tag_523\n      jump\t// in\n    tag_776:\n        /* \"#utility.yul\":21208:21209   */\n      0x00\n        /* \"#utility.yul\":21232:21236   */\n      0x20\n        /* \"#utility.yul\":21219:21236   */\n      swap1\n      pop\n        /* \"#utility.yul\":21264:21266   */\n      0x1f\n        /* \"#utility.yul\":21256:21262   */\n      dup4\n        /* \"#utility.yul\":21253:21267   */\n      gt\n        /* \"#utility.yul\":21281:21282   */\n      0x01\n        /* \"#utility.yul\":21276:21894   */\n      dup2\n      eq\n      tag_778\n      jumpi\n        /* \"#utility.yul\":21938:21939   */\n      0x00\n        /* \"#utility.yul\":21955:21961   */\n      dup5\n        /* \"#utility.yul\":21952:22029   */\n      iszero\n      tag_779\n      jumpi\n        /* \"#utility.yul\":22004:22013   */\n      dup3\n        /* \"#utility.yul\":21999:22002   */\n      dup8\n        /* \"#utility.yul\":21995:22014   */\n      add\n        /* \"#utility.yul\":21989:22015   */\n      mload\n        /* \"#utility.yul\":21980:22015   */\n      swap1\n      pop\n        /* \"#utility.yul\":21952:22029   */\n    tag_779:\n        /* \"#utility.yul\":22055:22122   */\n      tag_780\n        /* \"#utility.yul\":22115:22121   */\n      dup6\n        /* \"#utility.yul\":22108:22113   */\n      dup3\n        /* \"#utility.yul\":22055:22122   */\n      tag_526\n      jump\t// in\n    tag_780:\n        /* \"#utility.yul\":22049:22053   */\n      dup7\n        /* \"#utility.yul\":22042:22123   */\n      sstore\n        /* \"#utility.yul\":21911:22133   */\n      pop\n        /* \"#utility.yul\":21246:22133   */\n      jump(tag_777)\n        /* \"#utility.yul\":21276:21894   */\n    tag_778:\n        /* \"#utility.yul\":21328:21332   */\n      0x1f\n        /* \"#utility.yul\":21324:21333   */\n      not\n        /* \"#utility.yul\":21316:21322   */\n      dup5\n        /* \"#utility.yul\":21312:21334   */\n      and\n        /* \"#utility.yul\":21362:21399   */\n      tag_781\n        /* \"#utility.yul\":21394:21398   */\n      dup7\n        /* \"#utility.yul\":21362:21399   */\n      tag_513\n      jump\t// in\n    tag_781:\n        /* \"#utility.yul\":21421:21422   */\n      0x00\n        /* \"#utility.yul\":21435:21643   */\n    tag_782:\n        /* \"#utility.yul\":21449:21456   */\n      dup3\n        /* \"#utility.yul\":21446:21447   */\n      dup2\n        /* \"#utility.yul\":21443:21457   */\n      lt\n        /* \"#utility.yul\":21435:21643   */\n      iszero\n      tag_784\n      jumpi\n        /* \"#utility.yul\":21528:21537   */\n      dup5\n        /* \"#utility.yul\":21523:21526   */\n      dup10\n        /* \"#utility.yul\":21519:21538   */\n      add\n        /* \"#utility.yul\":21513:21539   */\n      mload\n        /* \"#utility.yul\":21505:21511   */\n      dup3\n        /* \"#utility.yul\":21498:21540   */\n      sstore\n        /* \"#utility.yul\":21579:21580   */\n      0x01\n        /* \"#utility.yul\":21571:21577   */\n      dup3\n        /* \"#utility.yul\":21567:21581   */\n      add\n        /* \"#utility.yul\":21557:21581   */\n      swap2\n      pop\n        /* \"#utility.yul\":21626:21628   */\n      0x20\n        /* \"#utility.yul\":21615:21624   */\n      dup6\n        /* \"#utility.yul\":21611:21629   */\n      add\n        /* \"#utility.yul\":21598:21629   */\n      swap5\n      pop\n        /* \"#utility.yul\":21472:21476   */\n      0x20\n        /* \"#utility.yul\":21469:21470   */\n      dup2\n        /* \"#utility.yul\":21465:21477   */\n      add\n        /* \"#utility.yul\":21460:21477   */\n      swap1\n      pop\n        /* \"#utility.yul\":21435:21643   */\n      jump(tag_782)\n    tag_784:\n        /* \"#utility.yul\":21671:21677   */\n      dup7\n        /* \"#utility.yul\":21662:21669   */\n      dup4\n        /* \"#utility.yul\":21659:21678   */\n      lt\n        /* \"#utility.yul\":21656:21835   */\n      iszero\n      tag_785\n      jumpi\n        /* \"#utility.yul\":21729:21738   */\n      dup5\n        /* \"#utility.yul\":21724:21727   */\n      dup10\n        /* \"#utility.yul\":21720:21739   */\n      add\n        /* \"#utility.yul\":21714:21740   */\n      mload\n        /* \"#utility.yul\":21772:21820   */\n      tag_786\n        /* \"#utility.yul\":21814:21818   */\n      0x1f\n        /* \"#utility.yul\":21806:21812   */\n      dup10\n        /* \"#utility.yul\":21802:21819   */\n      and\n        /* \"#utility.yul\":21791:21800   */\n      dup3\n        /* \"#utility.yul\":21772:21820   */\n      tag_525\n      jump\t// in\n    tag_786:\n        /* \"#utility.yul\":21764:21770   */\n      dup4\n        /* \"#utility.yul\":21757:21821   */\n      sstore\n        /* \"#utility.yul\":21679:21835   */\n      pop\n        /* \"#utility.yul\":21656:21835   */\n    tag_785:\n        /* \"#utility.yul\":21881:21882   */\n      0x01\n        /* \"#utility.yul\":21877:21878   */\n      0x02\n        /* \"#utility.yul\":21869:21875   */\n      dup9\n        /* \"#utility.yul\":21865:21879   */\n      mul\n        /* \"#utility.yul\":21861:21883   */\n      add\n        /* \"#utility.yul\":21855:21859   */\n      dup9\n        /* \"#utility.yul\":21848:21884   */\n      sstore\n        /* \"#utility.yul\":21283:21894   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":21246:22133   */\n    tag_777:\n      pop\n        /* \"#utility.yul\":20836:22139   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":20744:22139   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22145:22243   */\n    tag_527:\n        /* \"#utility.yul\":22196:22202   */\n      0x00\n        /* \"#utility.yul\":22230:22235   */\n      dup2\n        /* \"#utility.yul\":22224:22236   */\n      mload\n        /* \"#utility.yul\":22214:22236   */\n      swap1\n      pop\n        /* \"#utility.yul\":22145:22243   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22249:22396   */\n    tag_528:\n        /* \"#utility.yul\":22350:22361   */\n      0x00\n        /* \"#utility.yul\":22387:22390   */\n      dup2\n        /* \"#utility.yul\":22372:22390   */\n      swap1\n      pop\n        /* \"#utility.yul\":22249:22396   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22402:22788   */\n    tag_529:\n        /* \"#utility.yul\":22506:22509   */\n      0x00\n        /* \"#utility.yul\":22534:22572   */\n      tag_790\n        /* \"#utility.yul\":22566:22571   */\n      dup3\n        /* \"#utility.yul\":22534:22572   */\n      tag_527\n      jump\t// in\n    tag_790:\n        /* \"#utility.yul\":22588:22676   */\n      tag_791\n        /* \"#utility.yul\":22669:22675   */\n      dup2\n        /* \"#utility.yul\":22664:22667   */\n      dup6\n        /* \"#utility.yul\":22588:22676   */\n      tag_528\n      jump\t// in\n    tag_791:\n        /* \"#utility.yul\":22581:22676   */\n      swap4\n      pop\n        /* \"#utility.yul\":22685:22750   */\n      tag_792\n        /* \"#utility.yul\":22743:22749   */\n      dup2\n        /* \"#utility.yul\":22738:22741   */\n      dup6\n        /* \"#utility.yul\":22731:22735   */\n      0x20\n        /* \"#utility.yul\":22724:22729   */\n      dup7\n        /* \"#utility.yul\":22720:22736   */\n      add\n        /* \"#utility.yul\":22685:22750   */\n      tag_461\n      jump\t// in\n    tag_792:\n        /* \"#utility.yul\":22775:22781   */\n      dup1\n        /* \"#utility.yul\":22770:22773   */\n      dup5\n        /* \"#utility.yul\":22766:22782   */\n      add\n        /* \"#utility.yul\":22759:22782   */\n      swap2\n      pop\n        /* \"#utility.yul\":22510:22788   */\n      pop\n        /* \"#utility.yul\":22402:22788   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22794:23065   */\n    tag_438:\n        /* \"#utility.yul\":22924:22927   */\n      0x00\n        /* \"#utility.yul\":22946:23039   */\n      tag_794\n        /* \"#utility.yul\":23035:23038   */\n      dup3\n        /* \"#utility.yul\":23026:23032   */\n      dup5\n        /* \"#utility.yul\":22946:23039   */\n      tag_529\n      jump\t// in\n    tag_794:\n        /* \"#utility.yul\":22939:23039   */\n      swap2\n      pop\n        /* \"#utility.yul\":23056:23059   */\n      dup2\n        /* \"#utility.yul\":23049:23059   */\n      swap1\n      pop\n        /* \"#utility.yul\":22794:23065   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n    stop\n    data_665ce53e9d59c8d2ac0ba934bb50732c0bcd4aa94c46168cb289aff831bc6a83 43616d70546f6b656e203c2d3e204554482e2043616d70546f6b656e20697320537461626c65436f696e20746861742072656c6174696e6720455448203c2d3e204a5059\n\n    auxdata: 0xa2646970667358221220057672c2c96fe073382fafec2dafc649d15f56b881dca15de3a93f976d0485f364736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_2376": {
									"entryPoint": null,
									"id": 2376,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_disableInitializers_462": {
									"entryPoint": 253,
									"id": 462,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_getInitializableStorage_493": {
									"entryPoint": 507,
									"id": 493,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_encode_t_uint64_to_t_uint64_fromStack": {
									"entryPoint": 565,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed": {
									"entryPoint": 580,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_uint64": {
									"entryPoint": 546,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:456:16",
										"nodeType": "YulBlock",
										"src": "0:456:16",
										"statements": [
											{
												"body": {
													"nativeSrc": "51:57:16",
													"nodeType": "YulBlock",
													"src": "51:57:16",
													"statements": [
														{
															"nativeSrc": "61:41:16",
															"nodeType": "YulAssignment",
															"src": "61:41:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "76:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "76:5:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "83:18:16",
																		"nodeType": "YulLiteral",
																		"src": "83:18:16",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "72:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "72:3:16"
																},
																"nativeSrc": "72:30:16",
																"nodeType": "YulFunctionCall",
																"src": "72:30:16"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "61:7:16",
																	"nodeType": "YulIdentifier",
																	"src": "61:7:16"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint64",
												"nativeSrc": "7:101:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "33:5:16",
														"nodeType": "YulTypedName",
														"src": "33:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "43:7:16",
														"nodeType": "YulTypedName",
														"src": "43:7:16",
														"type": ""
													}
												],
												"src": "7:101:16"
											},
											{
												"body": {
													"nativeSrc": "177:52:16",
													"nodeType": "YulBlock",
													"src": "177:52:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "194:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "194:3:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "216:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "216:5:16"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint64",
																			"nativeSrc": "199:16:16",
																			"nodeType": "YulIdentifier",
																			"src": "199:16:16"
																		},
																		"nativeSrc": "199:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "199:23:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "187:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:16"
																},
																"nativeSrc": "187:36:16",
																"nodeType": "YulFunctionCall",
																"src": "187:36:16"
															},
															"nativeSrc": "187:36:16",
															"nodeType": "YulExpressionStatement",
															"src": "187:36:16"
														}
													]
												},
												"name": "abi_encode_t_uint64_to_t_uint64_fromStack",
												"nativeSrc": "114:115:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "165:5:16",
														"nodeType": "YulTypedName",
														"src": "165:5:16",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "172:3:16",
														"nodeType": "YulTypedName",
														"src": "172:3:16",
														"type": ""
													}
												],
												"src": "114:115:16"
											},
											{
												"body": {
													"nativeSrc": "331:122:16",
													"nodeType": "YulBlock",
													"src": "331:122:16",
													"statements": [
														{
															"nativeSrc": "341:26:16",
															"nodeType": "YulAssignment",
															"src": "341:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "353:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "353:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "364:2:16",
																		"nodeType": "YulLiteral",
																		"src": "364:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "349:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "349:3:16"
																},
																"nativeSrc": "349:18:16",
																"nodeType": "YulFunctionCall",
																"src": "349:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "341:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "341:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "419:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "419:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "432:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "432:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "443:1:16",
																				"nodeType": "YulLiteral",
																				"src": "443:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "428:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "428:3:16"
																		},
																		"nativeSrc": "428:17:16",
																		"nodeType": "YulFunctionCall",
																		"src": "428:17:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint64_to_t_uint64_fromStack",
																	"nativeSrc": "377:41:16",
																	"nodeType": "YulIdentifier",
																	"src": "377:41:16"
																},
																"nativeSrc": "377:69:16",
																"nodeType": "YulFunctionCall",
																"src": "377:69:16"
															},
															"nativeSrc": "377:69:16",
															"nodeType": "YulExpressionStatement",
															"src": "377:69:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed",
												"nativeSrc": "235:218:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "303:9:16",
														"nodeType": "YulTypedName",
														"src": "303:9:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "315:6:16",
														"nodeType": "YulTypedName",
														"src": "315:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "326:4:16",
														"nodeType": "YulTypedName",
														"src": "326:4:16",
														"type": ""
													}
												],
												"src": "235:218:16"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function abi_encode_t_uint64_to_t_uint64_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint64(value))\n    }\n\n    function abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint64_to_t_uint64_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 16,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60a06040523073ffffffffffffffffffffffffffffffffffffffff1660809073ffffffffffffffffffffffffffffffffffffffff16815250348015610042575f80fd5b506100516100fd60201b60201c565b73694aa1769357215de4fac081bf1f309adc3253065f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550738a6af2b75f23831adc973ce6288e5329f63d86c660015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061025d565b5f61010c6101fb60201b60201c565b9050805f0160089054906101000a900460ff1615610156576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b67ffffffffffffffff8016815f015f9054906101000a900467ffffffffffffffff1667ffffffffffffffff16146101f85767ffffffffffffffff815f015f6101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d267ffffffffffffffff6040516101ef9190610244565b60405180910390a15b50565b5f7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00905090565b5f67ffffffffffffffff82169050919050565b61023e81610222565b82525050565b5f6020820190506102575f830184610235565b92915050565b608051612d8e6102835f395f81816113ca0152818161141f01526115d90152612d8e5ff3fe6080604052600436106101b6575f3560e01c80637284e416116100eb578063ad3cb1cc11610089578063dd62ed3e11610063578063dd62ed3e146105a6578063e6c9566c146105e2578063f2fde38b1461060c578063fee5035914610634576101b6565b8063ad3cb1cc1461052a578063b7c422f514610554578063c4d66de81461057e576101b6565b80638da5cb5b116100c55780638da5cb5b1461047257806395d89b411461049c578063a9059cbb146104c6578063abab467314610502576101b6565b80637284e416146103f657806379cc6790146104205780637ce3518814610448576101b6565b8063331ee7391161015857806352d1902d1161013257806352d1902d1461035057806354fd4d501461037a57806370a08231146103a4578063715018a6146103e0576101b6565b8063331ee7391461030257806342966c681461030c5780634f1ef28614610334576101b6565b806318b804a51161019457806318b804a51461024a57806323b872dd146102745780632e1a7d4d146102b0578063313ce567146102d8576101b6565b806306fdde03146101ba578063095ea7b3146101e457806318160ddd14610220575b5f80fd5b3480156101c5575f80fd5b506101ce61064a565b6040516101db9190612100565b60405180910390f35b3480156101ef575f80fd5b5061020a600480360381019061020591906121be565b6106e8565b6040516102179190612216565b60405180910390f35b34801561022b575f80fd5b5061023461070a565b604051610241919061223e565b60405180910390f35b348015610255575f80fd5b5061025e610721565b60405161026b919061223e565b60405180910390f35b34801561027f575f80fd5b5061029a60048036038101906102959190612257565b61075f565b6040516102a79190612216565b60405180910390f35b3480156102bb575f80fd5b506102d660048036038101906102d191906122a7565b61078d565b005b3480156102e3575f80fd5b506102ec6108db565b6040516102f991906122ed565b60405180910390f35b61030a6108e3565b005b348015610317575f80fd5b50610332600480360381019061032d91906122a7565b6109ae565b005b61034e60048036038101906103499190612432565b6109c2565b005b34801561035b575f80fd5b506103646109e1565b60405161037191906124a4565b60405180910390f35b348015610385575f80fd5b5061038e610a12565b60405161039b919061223e565b60405180910390f35b3480156103af575f80fd5b506103ca60048036038101906103c591906124bd565b610a1a565b6040516103d7919061223e565b60405180910390f35b3480156103eb575f80fd5b506103f4610a6d565b005b348015610401575f80fd5b5061040a610a80565b6040516104179190612100565b60405180910390f35b34801561042b575f80fd5b50610446600480360381019061044191906121be565b610aa0565b005b348015610453575f80fd5b5061045c610ac0565b604051610469919061223e565b60405180910390f35b34801561047d575f80fd5b50610486610b0e565b60405161049391906124f7565b60405180910390f35b3480156104a7575f80fd5b506104b0610b43565b6040516104bd9190612100565b60405180910390f35b3480156104d1575f80fd5b506104ec60048036038101906104e791906121be565b610be1565b6040516104f99190612216565b60405180910390f35b34801561050d575f80fd5b50610528600480360381019061052391906121be565b610c03565b005b348015610535575f80fd5b5061053e610c11565b60405161054b9190612100565b60405180910390f35b34801561055f575f80fd5b50610568610c4a565b6040516105759190612528565b60405180910390f35b348015610589575f80fd5b506105a4600480360381019061059f91906124bd565b610ce5565b005b3480156105b1575f80fd5b506105cc60048036038101906105c79190612541565b610eea565b6040516105d9919061223e565b60405180910390f35b3480156105ed575f80fd5b506105f6610f7a565b6040516106039190612528565b60405180910390f35b348015610617575f80fd5b50610632600480360381019061062d91906124bd565b611017565b005b34801561063f575f80fd5b5061064861109b565b005b60605f610655611108565b9050806003018054610666906125ac565b80601f0160208091040260200160405190810160405280929190818152602001828054610692906125ac565b80156106dd5780601f106106b4576101008083540402835291602001916106dd565b820191905f5260205f20905b8154815290600101906020018083116106c057829003601f168201915b505050505091505090565b5f806106f261112f565b90506106ff818585611136565b600191505092915050565b5f80610714611108565b9050806002015491505090565b5f80670de0b6b3a7640000610734610ac0565b61073e9190612636565b90505f81670de0b6b3a76400006107559190612636565b9050809250505090565b5f8061076961112f565b9050610776858285611148565b6107818585856111da565b60019150509392505050565b8060025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054101561080d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610804906126d6565b60405180910390fd5b8060025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461085991906126f4565b9250508190555061086a3382610c03565b5f670de0b6b3a76400008261087d610721565b6108879190612727565b6108919190612636565b90503373ffffffffffffffffffffffffffffffffffffffff166108fc8290811502906040515f60405180830381858888f193505050501580156108d6573d5f803e3d5ffd5b505050565b5f6012905090565b5f3411610925576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161091c906127b2565b60405180910390fd5b5f670de0b6b3a764000034610938610ac0565b6109429190612727565b61094c9190612636565b905061095833826112ca565b8060025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546109a491906127d0565b9250508190555050565b6109bf6109b961112f565b82611349565b50565b6109ca6113c8565b6109d3826114ae565b6109dd82826114b9565b5050565b5f6109ea6115d7565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5f1b905090565b5f6001905090565b5f80610a24611108565b9050805f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054915050919050565b610a7561165e565b610a7e5f6116e5565b565b6060604051806080016040528060448152602001612d1560449139905090565b610ab282610aac61112f565b83611148565b610abc8282611349565b5050565b5f80610aca610c4a565b90505f610ad5610f7a565b6305f5e100610ae49190612803565b90505f6402540be4008284610af99190612727565b610b039190612727565b905080935050505090565b5f80610b186117b6565b9050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691505090565b60605f610b4e611108565b9050806004018054610b5f906125ac565b80601f0160208091040260200160405190810160405280929190818152602001828054610b8b906125ac565b8015610bd65780601f10610bad57610100808354040283529160200191610bd6565b820191905f5260205f20905b815481529060010190602001808311610bb957829003601f168201915b505050505091505090565b5f80610beb61112f565b9050610bf88185856111da565b600191505092915050565b610c0d8282611349565b5050565b6040518060400160405280600581526020017f352e302e3000000000000000000000000000000000000000000000000000000081525081565b5f805f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610cb4573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610cd891906128e8565b5050509150508091505090565b5f610cee6117dd565b90505f815f0160089054906101000a900460ff161590505f825f015f9054906101000a900467ffffffffffffffff1690505f808267ffffffffffffffff16148015610d365750825b90505f60018367ffffffffffffffff16148015610d6957505f3073ffffffffffffffffffffffffffffffffffffffff163b145b905081158015610d77575080155b15610dae576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001855f015f6101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055508315610dfb576001855f0160086101000a81548160ff0219169083151502179055505b610e6f6040518060400160405280600981526020017f43616d70546f6b656e00000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f43544b0000000000000000000000000000000000000000000000000000000000815250611804565b610e7761181a565b610e8086611824565b610e88611838565b8315610ee2575f855f0160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d26001604051610ed991906129b4565b60405180910390a15b505050505050565b5f80610ef4611108565b9050806001015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205491505092915050565b5f8060015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610fe6573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061100a91906128e8565b5050509150508091505090565b61101f61165e565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361108f575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161108691906124f7565b60405180910390fd5b611098816116e5565b50565b5f681b1ae4d6e2ef50000090506110b233826112ca565b8060025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546110fe91906127d0565b9250508190555050565b5f7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00905090565b5f33905090565b6111438383836001611842565b505050565b5f6111538484610eea565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146111d457818110156111c5578281836040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526004016111bc939291906129cd565b60405180910390fd5b6111d384848484035f611842565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361124a575f6040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260040161124191906124f7565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036112ba575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016112b191906124f7565b60405180910390fd5b6112c5838383611a1f565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361133a575f6040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161133191906124f7565b60405180910390fd5b6113455f8383611a1f565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036113b9575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016113b091906124f7565b60405180910390fd5b6113c4825f83611a1f565b5050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff16148061147557507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1661145c611c4e565b73ffffffffffffffffffffffffffffffffffffffff1614155b156114ac576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6114b661165e565b50565b8173ffffffffffffffffffffffffffffffffffffffff166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa92505050801561152157506040513d601f19601f8201168201806040525081019061151e9190612a2c565b60015b61156257816040517f4c9c8ce300000000000000000000000000000000000000000000000000000000815260040161155991906124f7565b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5f1b81146115c857806040517faa1d49a40000000000000000000000000000000000000000000000000000000081526004016115bf91906124a4565b60405180910390fd5b6115d28383611ca1565b505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff161461165c576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b61166661112f565b73ffffffffffffffffffffffffffffffffffffffff16611684610b0e565b73ffffffffffffffffffffffffffffffffffffffff16146116e3576116a761112f565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016116da91906124f7565b60405180910390fd5b565b5f6116ee6117b6565b90505f815f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905082825f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3505050565b5f7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300905090565b5f7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00905090565b61180c611d13565b6118168282611d53565b5050565b611822611d13565b565b61182c611d13565b61183581611d8f565b50565b611840611d13565b565b5f61184b611108565b90505f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16036118bd575f6040517fe602df050000000000000000000000000000000000000000000000000000000081526004016118b491906124f7565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361192d575f6040517f94280d6200000000000000000000000000000000000000000000000000000000815260040161192491906124f7565b60405180910390fd5b82816001015f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508115611a18578373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92585604051611a0f919061223e565b60405180910390a35b5050505050565b5f611a28611108565b90505f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611a7c5781816002015f828254611a7091906127d0565b92505081905550611b4e565b5f815f015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905082811015611b07578481846040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401611afe939291906129cd565b60405180910390fd5b828103825f015f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611b975781816002015f8282540392505081905550611be3565b81815f015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051611c40919061223e565b60405180910390a350505050565b5f611c7a7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5f1b611e13565b5f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b611caa82611e1c565b8173ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a25f81511115611d0657611d008282611ee5565b50611d0f565b611d0e611f65565b5b5050565b611d1b611fa1565b611d51576040517fd7e6bcf800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b611d5b611d13565b5f611d64611108565b905082816003019081611d779190612beb565b5081816004019081611d899190612beb565b50505050565b611d97611d13565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611e07575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401611dfe91906124f7565b60405180910390fd5b611e10816116e5565b50565b5f819050919050565b5f8173ffffffffffffffffffffffffffffffffffffffff163b03611e7757806040517f4c9c8ce3000000000000000000000000000000000000000000000000000000008152600401611e6e91906124f7565b60405180910390fd5b80611ea37f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5f1b611e13565b5f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60605f808473ffffffffffffffffffffffffffffffffffffffff1684604051611f0e9190612cfe565b5f60405180830381855af49150503d805f8114611f46576040519150601f19603f3d011682016040523d82523d5f602084013e611f4b565b606091505b5091509150611f5b858383611fbf565b9250505092915050565b5f341115611f9f576040517fb398979f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b5f611faa6117dd565b5f0160089054906101000a900460ff16905090565b606082611fd457611fcf8261204c565b612044565b5f8251148015611ffa57505f8473ffffffffffffffffffffffffffffffffffffffff163b145b1561203c57836040517f9996b31500000000000000000000000000000000000000000000000000000000815260040161203391906124f7565b60405180910390fd5b819050612045565b5b9392505050565b5f8151111561205e5780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f6120d282612090565b6120dc818561209a565b93506120ec8185602086016120aa565b6120f5816120b8565b840191505092915050565b5f6020820190508181035f83015261211881846120c8565b905092915050565b5f604051905090565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61215a82612131565b9050919050565b61216a81612150565b8114612174575f80fd5b50565b5f8135905061218581612161565b92915050565b5f819050919050565b61219d8161218b565b81146121a7575f80fd5b50565b5f813590506121b881612194565b92915050565b5f80604083850312156121d4576121d3612129565b5b5f6121e185828601612177565b92505060206121f2858286016121aa565b9150509250929050565b5f8115159050919050565b612210816121fc565b82525050565b5f6020820190506122295f830184612207565b92915050565b6122388161218b565b82525050565b5f6020820190506122515f83018461222f565b92915050565b5f805f6060848603121561226e5761226d612129565b5b5f61227b86828701612177565b935050602061228c86828701612177565b925050604061229d868287016121aa565b9150509250925092565b5f602082840312156122bc576122bb612129565b5b5f6122c9848285016121aa565b91505092915050565b5f60ff82169050919050565b6122e7816122d2565b82525050565b5f6020820190506123005f8301846122de565b92915050565b5f80fd5b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b612344826120b8565b810181811067ffffffffffffffff821117156123635761236261230e565b5b80604052505050565b5f612375612120565b9050612381828261233b565b919050565b5f67ffffffffffffffff8211156123a05761239f61230e565b5b6123a9826120b8565b9050602081019050919050565b828183375f83830152505050565b5f6123d66123d184612386565b61236c565b9050828152602081018484840111156123f2576123f161230a565b5b6123fd8482856123b6565b509392505050565b5f82601f83011261241957612418612306565b5b81356124298482602086016123c4565b91505092915050565b5f806040838503121561244857612447612129565b5b5f61245585828601612177565b925050602083013567ffffffffffffffff8111156124765761247561212d565b5b61248285828601612405565b9150509250929050565b5f819050919050565b61249e8161248c565b82525050565b5f6020820190506124b75f830184612495565b92915050565b5f602082840312156124d2576124d1612129565b5b5f6124df84828501612177565b91505092915050565b6124f181612150565b82525050565b5f60208201905061250a5f8301846124e8565b92915050565b5f819050919050565b61252281612510565b82525050565b5f60208201905061253b5f830184612519565b92915050565b5f806040838503121561255757612556612129565b5b5f61256485828601612177565b925050602061257585828601612177565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806125c357607f821691505b6020821081036125d6576125d561257f565b5b50919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6126408261218b565b915061264b8361218b565b92508261265b5761265a6125dc565b5b828204905092915050565b7f416d6f756e74206d75737420616c77617973206265206c657373207468616e205f8201527f746865206e756d626572206f6620706f7373657373696f6e7300000000000000602082015250565b5f6126c060398361209a565b91506126cb82612666565b604082019050919050565b5f6020820190508181035f8301526126ed816126b4565b9050919050565b5f6126fe8261218b565b91506127098361218b565b925082820390508181111561272157612720612609565b5b92915050565b5f6127318261218b565b915061273c8361218b565b925082820261274a8161218b565b9150828204841483151761276157612760612609565b5b5092915050565b7f416d6f756e74206d7573742062652067726561746572207468616e207a65726f5f82015250565b5f61279c60208361209a565b91506127a782612768565b602082019050919050565b5f6020820190508181035f8301526127c981612790565b9050919050565b5f6127da8261218b565b91506127e58361218b565b92508282019050808211156127fd576127fc612609565b5b92915050565b5f61280d82612510565b915061281883612510565b925082612828576128276125dc565b5b60015f0383147f8000000000000000000000000000000000000000000000000000000000000000831416156128605761285f612609565b5b828205905092915050565b5f69ffffffffffffffffffff82169050919050565b6128898161286b565b8114612893575f80fd5b50565b5f815190506128a481612880565b92915050565b6128b381612510565b81146128bd575f80fd5b50565b5f815190506128ce816128aa565b92915050565b5f815190506128e281612194565b92915050565b5f805f805f60a0868803121561290157612900612129565b5b5f61290e88828901612896565b955050602061291f888289016128c0565b9450506040612930888289016128d4565b9350506060612941888289016128d4565b925050608061295288828901612896565b9150509295509295909350565b5f819050919050565b5f67ffffffffffffffff82169050919050565b5f819050919050565b5f61299e6129996129948461295f565b61297b565b612968565b9050919050565b6129ae81612984565b82525050565b5f6020820190506129c75f8301846129a5565b92915050565b5f6060820190506129e05f8301866124e8565b6129ed602083018561222f565b6129fa604083018461222f565b949350505050565b612a0b8161248c565b8114612a15575f80fd5b50565b5f81519050612a2681612a02565b92915050565b5f60208284031215612a4157612a40612129565b5b5f612a4e84828501612a18565b91505092915050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302612ab37fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82612a78565b612abd8683612a78565b95508019841693508086168417925050509392505050565b5f612aef612aea612ae58461218b565b61297b565b61218b565b9050919050565b5f819050919050565b612b0883612ad5565b612b1c612b1482612af6565b848454612a84565b825550505050565b5f90565b612b30612b24565b612b3b818484612aff565b505050565b5b81811015612b5e57612b535f82612b28565b600181019050612b41565b5050565b601f821115612ba357612b7481612a57565b612b7d84612a69565b81016020851015612b8c578190505b612ba0612b9885612a69565b830182612b40565b50505b505050565b5f82821c905092915050565b5f612bc35f1984600802612ba8565b1980831691505092915050565b5f612bdb8383612bb4565b9150826002028217905092915050565b612bf482612090565b67ffffffffffffffff811115612c0d57612c0c61230e565b5b612c1782546125ac565b612c22828285612b62565b5f60209050601f831160018114612c53575f8415612c41578287015190505b612c4b8582612bd0565b865550612cb2565b601f198416612c6186612a57565b5f5b82811015612c8857848901518255600182019150602085019450602081019050612c63565b86831015612ca55784890151612ca1601f891682612bb4565b8355505b6001600288020188555050505b505050505050565b5f81519050919050565b5f81905092915050565b5f612cd882612cba565b612ce28185612cc4565b9350612cf28185602086016120aa565b80840191505092915050565b5f612d098284612cce565b91508190509291505056fe43616d70546f6b656e203c2d3e204554482e2043616d70546f6b656e20697320537461626c65436f696e20746861742072656c6174696e6720455448203c2d3e204a5059a2646970667358221220057672c2c96fe073382fafec2dafc649d15f56b881dca15de3a93f976d0485f364736f6c63430008190033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP CALLVALUE DUP1 ISZERO PUSH2 0x42 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x51 PUSH2 0xFD PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH20 0x694AA1769357215DE4FAC081BF1F309ADC325306 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH20 0x8A6AF2B75F23831ADC973CE6288E5329F63D86C6 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x25D JUMP JUMPDEST PUSH0 PUSH2 0x10C PUSH2 0x1FB PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x156 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP1 AND DUP2 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1F8 JUMPI PUSH8 0xFFFFFFFFFFFFFFFF DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x40 MLOAD PUSH2 0x1EF SWAP2 SWAP1 PUSH2 0x244 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x23E DUP2 PUSH2 0x222 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x257 PUSH0 DUP4 ADD DUP5 PUSH2 0x235 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x2D8E PUSH2 0x283 PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x13CA ADD MSTORE DUP2 DUP2 PUSH2 0x141F ADD MSTORE PUSH2 0x15D9 ADD MSTORE PUSH2 0x2D8E PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1B6 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7284E416 GT PUSH2 0xEB JUMPI DUP1 PUSH4 0xAD3CB1CC GT PUSH2 0x89 JUMPI DUP1 PUSH4 0xDD62ED3E GT PUSH2 0x63 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x5A6 JUMPI DUP1 PUSH4 0xE6C9566C EQ PUSH2 0x5E2 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x60C JUMPI DUP1 PUSH4 0xFEE50359 EQ PUSH2 0x634 JUMPI PUSH2 0x1B6 JUMP JUMPDEST DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0x52A JUMPI DUP1 PUSH4 0xB7C422F5 EQ PUSH2 0x554 JUMPI DUP1 PUSH4 0xC4D66DE8 EQ PUSH2 0x57E JUMPI PUSH2 0x1B6 JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xC5 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x472 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x49C JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x4C6 JUMPI DUP1 PUSH4 0xABAB4673 EQ PUSH2 0x502 JUMPI PUSH2 0x1B6 JUMP JUMPDEST DUP1 PUSH4 0x7284E416 EQ PUSH2 0x3F6 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x420 JUMPI DUP1 PUSH4 0x7CE35188 EQ PUSH2 0x448 JUMPI PUSH2 0x1B6 JUMP JUMPDEST DUP1 PUSH4 0x331EE739 GT PUSH2 0x158 JUMPI DUP1 PUSH4 0x52D1902D GT PUSH2 0x132 JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x350 JUMPI DUP1 PUSH4 0x54FD4D50 EQ PUSH2 0x37A JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x3A4 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x3E0 JUMPI PUSH2 0x1B6 JUMP JUMPDEST DUP1 PUSH4 0x331EE739 EQ PUSH2 0x302 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x30C JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x334 JUMPI PUSH2 0x1B6 JUMP JUMPDEST DUP1 PUSH4 0x18B804A5 GT PUSH2 0x194 JUMPI DUP1 PUSH4 0x18B804A5 EQ PUSH2 0x24A JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x274 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x2B0 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2D8 JUMPI PUSH2 0x1B6 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1BA JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1E4 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x220 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CE PUSH2 0x64A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DB SWAP2 SWAP1 PUSH2 0x2100 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1EF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x20A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x205 SWAP2 SWAP1 PUSH2 0x21BE JUMP JUMPDEST PUSH2 0x6E8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x217 SWAP2 SWAP1 PUSH2 0x2216 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x22B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x234 PUSH2 0x70A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x241 SWAP2 SWAP1 PUSH2 0x223E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x255 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x25E PUSH2 0x721 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26B SWAP2 SWAP1 PUSH2 0x223E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x29A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x295 SWAP2 SWAP1 PUSH2 0x2257 JUMP JUMPDEST PUSH2 0x75F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A7 SWAP2 SWAP1 PUSH2 0x2216 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D1 SWAP2 SWAP1 PUSH2 0x22A7 JUMP JUMPDEST PUSH2 0x78D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EC PUSH2 0x8DB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F9 SWAP2 SWAP1 PUSH2 0x22ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x30A PUSH2 0x8E3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x317 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x332 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x32D SWAP2 SWAP1 PUSH2 0x22A7 JUMP JUMPDEST PUSH2 0x9AE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x34E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x349 SWAP2 SWAP1 PUSH2 0x2432 JUMP JUMPDEST PUSH2 0x9C2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x35B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x364 PUSH2 0x9E1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x371 SWAP2 SWAP1 PUSH2 0x24A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x385 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x38E PUSH2 0xA12 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x39B SWAP2 SWAP1 PUSH2 0x223E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3AF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3CA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3C5 SWAP2 SWAP1 PUSH2 0x24BD JUMP JUMPDEST PUSH2 0xA1A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D7 SWAP2 SWAP1 PUSH2 0x223E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3EB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F4 PUSH2 0xA6D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x401 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x40A PUSH2 0xA80 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x417 SWAP2 SWAP1 PUSH2 0x2100 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x42B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x446 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x441 SWAP2 SWAP1 PUSH2 0x21BE JUMP JUMPDEST PUSH2 0xAA0 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x453 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x45C PUSH2 0xAC0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x469 SWAP2 SWAP1 PUSH2 0x223E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x47D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x486 PUSH2 0xB0E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x493 SWAP2 SWAP1 PUSH2 0x24F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4B0 PUSH2 0xB43 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4BD SWAP2 SWAP1 PUSH2 0x2100 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4D1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4EC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4E7 SWAP2 SWAP1 PUSH2 0x21BE JUMP JUMPDEST PUSH2 0xBE1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4F9 SWAP2 SWAP1 PUSH2 0x2216 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x50D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x528 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x523 SWAP2 SWAP1 PUSH2 0x21BE JUMP JUMPDEST PUSH2 0xC03 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x535 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x53E PUSH2 0xC11 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x54B SWAP2 SWAP1 PUSH2 0x2100 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x55F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x568 PUSH2 0xC4A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x575 SWAP2 SWAP1 PUSH2 0x2528 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x589 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x5A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x59F SWAP2 SWAP1 PUSH2 0x24BD JUMP JUMPDEST PUSH2 0xCE5 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x5CC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5C7 SWAP2 SWAP1 PUSH2 0x2541 JUMP JUMPDEST PUSH2 0xEEA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5D9 SWAP2 SWAP1 PUSH2 0x223E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5ED JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x5F6 PUSH2 0xF7A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x603 SWAP2 SWAP1 PUSH2 0x2528 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x617 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x632 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x62D SWAP2 SWAP1 PUSH2 0x24BD JUMP JUMPDEST PUSH2 0x1017 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x63F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x648 PUSH2 0x109B JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0x655 PUSH2 0x1108 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x3 ADD DUP1 SLOAD PUSH2 0x666 SWAP1 PUSH2 0x25AC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x692 SWAP1 PUSH2 0x25AC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x6DD JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6B4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6DD JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6C0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x6F2 PUSH2 0x112F JUMP JUMPDEST SWAP1 POP PUSH2 0x6FF DUP2 DUP6 DUP6 PUSH2 0x1136 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x714 PUSH2 0x1108 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x2 ADD SLOAD SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH8 0xDE0B6B3A7640000 PUSH2 0x734 PUSH2 0xAC0 JUMP JUMPDEST PUSH2 0x73E SWAP2 SWAP1 PUSH2 0x2636 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH8 0xDE0B6B3A7640000 PUSH2 0x755 SWAP2 SWAP1 PUSH2 0x2636 JUMP JUMPDEST SWAP1 POP DUP1 SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x769 PUSH2 0x112F JUMP JUMPDEST SWAP1 POP PUSH2 0x776 DUP6 DUP3 DUP6 PUSH2 0x1148 JUMP JUMPDEST PUSH2 0x781 DUP6 DUP6 DUP6 PUSH2 0x11DA JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD LT ISZERO PUSH2 0x80D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x804 SWAP1 PUSH2 0x26D6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x859 SWAP2 SWAP1 PUSH2 0x26F4 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x86A CALLER DUP3 PUSH2 0xC03 JUMP JUMPDEST PUSH0 PUSH8 0xDE0B6B3A7640000 DUP3 PUSH2 0x87D PUSH2 0x721 JUMP JUMPDEST PUSH2 0x887 SWAP2 SWAP1 PUSH2 0x2727 JUMP JUMPDEST PUSH2 0x891 SWAP2 SWAP1 PUSH2 0x2636 JUMP JUMPDEST SWAP1 POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x8D6 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLVALUE GT PUSH2 0x925 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x91C SWAP1 PUSH2 0x27B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH8 0xDE0B6B3A7640000 CALLVALUE PUSH2 0x938 PUSH2 0xAC0 JUMP JUMPDEST PUSH2 0x942 SWAP2 SWAP1 PUSH2 0x2727 JUMP JUMPDEST PUSH2 0x94C SWAP2 SWAP1 PUSH2 0x2636 JUMP JUMPDEST SWAP1 POP PUSH2 0x958 CALLER DUP3 PUSH2 0x12CA JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x9A4 SWAP2 SWAP1 PUSH2 0x27D0 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x9BF PUSH2 0x9B9 PUSH2 0x112F JUMP JUMPDEST DUP3 PUSH2 0x1349 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x9CA PUSH2 0x13C8 JUMP JUMPDEST PUSH2 0x9D3 DUP3 PUSH2 0x14AE JUMP JUMPDEST PUSH2 0x9DD DUP3 DUP3 PUSH2 0x14B9 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0x9EA PUSH2 0x15D7 JUMP JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH0 SHL SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x1 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xA24 PUSH2 0x1108 JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA75 PUSH2 0x165E JUMP JUMPDEST PUSH2 0xA7E PUSH0 PUSH2 0x16E5 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x44 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2D15 PUSH1 0x44 SWAP2 CODECOPY SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xAB2 DUP3 PUSH2 0xAAC PUSH2 0x112F JUMP JUMPDEST DUP4 PUSH2 0x1148 JUMP JUMPDEST PUSH2 0xABC DUP3 DUP3 PUSH2 0x1349 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xACA PUSH2 0xC4A JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xAD5 PUSH2 0xF7A JUMP JUMPDEST PUSH4 0x5F5E100 PUSH2 0xAE4 SWAP2 SWAP1 PUSH2 0x2803 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH5 0x2540BE400 DUP3 DUP5 PUSH2 0xAF9 SWAP2 SWAP1 PUSH2 0x2727 JUMP JUMPDEST PUSH2 0xB03 SWAP2 SWAP1 PUSH2 0x2727 JUMP JUMPDEST SWAP1 POP DUP1 SWAP4 POP POP POP POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xB18 PUSH2 0x17B6 JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0xB4E PUSH2 0x1108 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x4 ADD DUP1 SLOAD PUSH2 0xB5F SWAP1 PUSH2 0x25AC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xB8B SWAP1 PUSH2 0x25AC JUMP JUMPDEST DUP1 ISZERO PUSH2 0xBD6 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xBAD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xBD6 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xBB9 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xBEB PUSH2 0x112F JUMP JUMPDEST SWAP1 POP PUSH2 0xBF8 DUP2 DUP6 DUP6 PUSH2 0x11DA JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC0D DUP3 DUP3 PUSH2 0x1349 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x352E302E30000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xCB4 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCD8 SWAP2 SWAP1 PUSH2 0x28E8 JUMP JUMPDEST POP POP POP SWAP2 POP POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0xCEE PUSH2 0x17DD JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP PUSH0 DUP3 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xD36 JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH0 PUSH1 0x1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xD69 JUMPI POP PUSH0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0xD77 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0xDAE JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0xDFB JUMPI PUSH1 0x1 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0xE6F PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x43616D70546F6B656E0000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x43544B0000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x1804 JUMP JUMPDEST PUSH2 0xE77 PUSH2 0x181A JUMP JUMPDEST PUSH2 0xE80 DUP7 PUSH2 0x1824 JUMP JUMPDEST PUSH2 0xE88 PUSH2 0x1838 JUMP JUMPDEST DUP4 ISZERO PUSH2 0xEE2 JUMPI PUSH0 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0xED9 SWAP2 SWAP1 PUSH2 0x29B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xEF4 PUSH2 0x1108 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 ADD PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xFE6 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x100A SWAP2 SWAP1 PUSH2 0x28E8 JUMP JUMPDEST POP POP POP SWAP2 POP POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0x101F PUSH2 0x165E JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x108F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1086 SWAP2 SWAP1 PUSH2 0x24F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1098 DUP2 PUSH2 0x16E5 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH9 0x1B1AE4D6E2EF500000 SWAP1 POP PUSH2 0x10B2 CALLER DUP3 PUSH2 0x12CA JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x10FE SWAP2 SWAP1 PUSH2 0x27D0 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1143 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1842 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1153 DUP5 DUP5 PUSH2 0xEEA JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x11D4 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x11C5 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11BC SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x29CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x11D3 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x1842 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x124A JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1241 SWAP2 SWAP1 PUSH2 0x24F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x12BA JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12B1 SWAP2 SWAP1 PUSH2 0x24F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x12C5 DUP4 DUP4 DUP4 PUSH2 0x1A1F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x133A JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1331 SWAP2 SWAP1 PUSH2 0x24F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1345 PUSH0 DUP4 DUP4 PUSH2 0x1A1F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x13B9 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13B0 SWAP2 SWAP1 PUSH2 0x24F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x13C4 DUP3 PUSH0 DUP4 PUSH2 0x1A1F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1475 JUMPI POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x145C PUSH2 0x1C4E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x14AC JUMPI PUSH1 0x40 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x14B6 PUSH2 0x165E JUMP JUMPDEST POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1521 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x151E SWAP2 SWAP1 PUSH2 0x2A2C JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1562 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1559 SWAP2 SWAP1 PUSH2 0x24F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH0 SHL DUP2 EQ PUSH2 0x15C8 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xAA1D49A400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15BF SWAP2 SWAP1 PUSH2 0x24A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x15D2 DUP4 DUP4 PUSH2 0x1CA1 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x165C JUMPI PUSH1 0x40 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x1666 PUSH2 0x112F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1684 PUSH2 0xB0E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x16E3 JUMPI PUSH2 0x16A7 PUSH2 0x112F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16DA SWAP2 SWAP1 PUSH2 0x24F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0x16EE PUSH2 0x17B6 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP3 DUP3 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x180C PUSH2 0x1D13 JUMP JUMPDEST PUSH2 0x1816 DUP3 DUP3 PUSH2 0x1D53 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1822 PUSH2 0x1D13 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x182C PUSH2 0x1D13 JUMP JUMPDEST PUSH2 0x1835 DUP2 PUSH2 0x1D8F JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1840 PUSH2 0x1D13 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0x184B PUSH2 0x1108 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x18BD JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18B4 SWAP2 SWAP1 PUSH2 0x24F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x192D JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1924 SWAP2 SWAP1 PUSH2 0x24F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP2 PUSH1 0x1 ADD PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 ISZERO PUSH2 0x1A18 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP6 PUSH1 0x40 MLOAD PUSH2 0x1A0F SWAP2 SWAP1 PUSH2 0x223E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1A28 PUSH2 0x1108 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1A7C JUMPI DUP2 DUP2 PUSH1 0x2 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1A70 SWAP2 SWAP1 PUSH2 0x27D0 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1B4E JUMP JUMPDEST PUSH0 DUP2 PUSH0 ADD PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x1B07 JUMPI DUP5 DUP2 DUP5 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AFE SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x29CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP2 SUB DUP3 PUSH0 ADD PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1B97 JUMPI DUP2 DUP2 PUSH1 0x2 ADD PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1BE3 JUMP JUMPDEST DUP2 DUP2 PUSH0 ADD PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x1C40 SWAP2 SWAP1 PUSH2 0x223E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1C7A PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH0 SHL PUSH2 0x1E13 JUMP JUMPDEST PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1CAA DUP3 PUSH2 0x1E1C JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH0 DUP2 MLOAD GT ISZERO PUSH2 0x1D06 JUMPI PUSH2 0x1D00 DUP3 DUP3 PUSH2 0x1EE5 JUMP JUMPDEST POP PUSH2 0x1D0F JUMP JUMPDEST PUSH2 0x1D0E PUSH2 0x1F65 JUMP JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1D1B PUSH2 0x1FA1 JUMP JUMPDEST PUSH2 0x1D51 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD7E6BCF800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x1D5B PUSH2 0x1D13 JUMP JUMPDEST PUSH0 PUSH2 0x1D64 PUSH2 0x1108 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 PUSH1 0x3 ADD SWAP1 DUP2 PUSH2 0x1D77 SWAP2 SWAP1 PUSH2 0x2BEB JUMP JUMPDEST POP DUP2 DUP2 PUSH1 0x4 ADD SWAP1 DUP2 PUSH2 0x1D89 SWAP2 SWAP1 PUSH2 0x2BEB JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x1D97 PUSH2 0x1D13 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1E07 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1DFE SWAP2 SWAP1 PUSH2 0x24F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1E10 DUP2 PUSH2 0x16E5 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE SUB PUSH2 0x1E77 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E6E SWAP2 SWAP1 PUSH2 0x24F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x1EA3 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH0 SHL PUSH2 0x1E13 JUMP JUMPDEST PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x1F0E SWAP2 SWAP1 PUSH2 0x2CFE JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1F46 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1F4B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1F5B DUP6 DUP4 DUP4 PUSH2 0x1FBF JUMP JUMPDEST SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLVALUE GT ISZERO PUSH2 0x1F9F JUMPI PUSH1 0x40 MLOAD PUSH32 0xB398979F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0x1FAA PUSH2 0x17DD JUMP JUMPDEST PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x1FD4 JUMPI PUSH2 0x1FCF DUP3 PUSH2 0x204C JUMP JUMPDEST PUSH2 0x2044 JUMP JUMPDEST PUSH0 DUP3 MLOAD EQ DUP1 ISZERO PUSH2 0x1FFA JUMPI POP PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x203C JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2033 SWAP2 SWAP1 PUSH2 0x24F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP PUSH2 0x2045 JUMP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD GT ISZERO PUSH2 0x205E JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x20D2 DUP3 PUSH2 0x2090 JUMP JUMPDEST PUSH2 0x20DC DUP2 DUP6 PUSH2 0x209A JUMP JUMPDEST SWAP4 POP PUSH2 0x20EC DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x20AA JUMP JUMPDEST PUSH2 0x20F5 DUP2 PUSH2 0x20B8 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2118 DUP2 DUP5 PUSH2 0x20C8 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x215A DUP3 PUSH2 0x2131 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x216A DUP2 PUSH2 0x2150 JUMP JUMPDEST DUP2 EQ PUSH2 0x2174 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2185 DUP2 PUSH2 0x2161 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x219D DUP2 PUSH2 0x218B JUMP JUMPDEST DUP2 EQ PUSH2 0x21A7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x21B8 DUP2 PUSH2 0x2194 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x21D4 JUMPI PUSH2 0x21D3 PUSH2 0x2129 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x21E1 DUP6 DUP3 DUP7 ADD PUSH2 0x2177 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x21F2 DUP6 DUP3 DUP7 ADD PUSH2 0x21AA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2210 DUP2 PUSH2 0x21FC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2229 PUSH0 DUP4 ADD DUP5 PUSH2 0x2207 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2238 DUP2 PUSH2 0x218B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2251 PUSH0 DUP4 ADD DUP5 PUSH2 0x222F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x226E JUMPI PUSH2 0x226D PUSH2 0x2129 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x227B DUP7 DUP3 DUP8 ADD PUSH2 0x2177 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x228C DUP7 DUP3 DUP8 ADD PUSH2 0x2177 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x229D DUP7 DUP3 DUP8 ADD PUSH2 0x21AA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x22BC JUMPI PUSH2 0x22BB PUSH2 0x2129 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x22C9 DUP5 DUP3 DUP6 ADD PUSH2 0x21AA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x22E7 DUP2 PUSH2 0x22D2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2300 PUSH0 DUP4 ADD DUP5 PUSH2 0x22DE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x2344 DUP3 PUSH2 0x20B8 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2363 JUMPI PUSH2 0x2362 PUSH2 0x230E JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2375 PUSH2 0x2120 JUMP JUMPDEST SWAP1 POP PUSH2 0x2381 DUP3 DUP3 PUSH2 0x233B JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x23A0 JUMPI PUSH2 0x239F PUSH2 0x230E JUMP JUMPDEST JUMPDEST PUSH2 0x23A9 DUP3 PUSH2 0x20B8 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x23D6 PUSH2 0x23D1 DUP5 PUSH2 0x2386 JUMP JUMPDEST PUSH2 0x236C JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x23F2 JUMPI PUSH2 0x23F1 PUSH2 0x230A JUMP JUMPDEST JUMPDEST PUSH2 0x23FD DUP5 DUP3 DUP6 PUSH2 0x23B6 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2419 JUMPI PUSH2 0x2418 PUSH2 0x2306 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2429 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x23C4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2448 JUMPI PUSH2 0x2447 PUSH2 0x2129 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2455 DUP6 DUP3 DUP7 ADD PUSH2 0x2177 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2476 JUMPI PUSH2 0x2475 PUSH2 0x212D JUMP JUMPDEST JUMPDEST PUSH2 0x2482 DUP6 DUP3 DUP7 ADD PUSH2 0x2405 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x249E DUP2 PUSH2 0x248C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x24B7 PUSH0 DUP4 ADD DUP5 PUSH2 0x2495 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x24D2 JUMPI PUSH2 0x24D1 PUSH2 0x2129 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x24DF DUP5 DUP3 DUP6 ADD PUSH2 0x2177 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x24F1 DUP2 PUSH2 0x2150 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x250A PUSH0 DUP4 ADD DUP5 PUSH2 0x24E8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2522 DUP2 PUSH2 0x2510 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x253B PUSH0 DUP4 ADD DUP5 PUSH2 0x2519 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2557 JUMPI PUSH2 0x2556 PUSH2 0x2129 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2564 DUP6 DUP3 DUP7 ADD PUSH2 0x2177 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2575 DUP6 DUP3 DUP7 ADD PUSH2 0x2177 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x25C3 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x25D6 JUMPI PUSH2 0x25D5 PUSH2 0x257F JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2640 DUP3 PUSH2 0x218B JUMP JUMPDEST SWAP2 POP PUSH2 0x264B DUP4 PUSH2 0x218B JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x265B JUMPI PUSH2 0x265A PUSH2 0x25DC JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416D6F756E74206D75737420616C77617973206265206C657373207468616E20 PUSH0 DUP3 ADD MSTORE PUSH32 0x746865206E756D626572206F6620706F7373657373696F6E7300000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x26C0 PUSH1 0x39 DUP4 PUSH2 0x209A JUMP JUMPDEST SWAP2 POP PUSH2 0x26CB DUP3 PUSH2 0x2666 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x26ED DUP2 PUSH2 0x26B4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x26FE DUP3 PUSH2 0x218B JUMP JUMPDEST SWAP2 POP PUSH2 0x2709 DUP4 PUSH2 0x218B JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x2721 JUMPI PUSH2 0x2720 PUSH2 0x2609 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2731 DUP3 PUSH2 0x218B JUMP JUMPDEST SWAP2 POP PUSH2 0x273C DUP4 PUSH2 0x218B JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x274A DUP2 PUSH2 0x218B JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x2761 JUMPI PUSH2 0x2760 PUSH2 0x2609 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E207A65726F PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x279C PUSH1 0x20 DUP4 PUSH2 0x209A JUMP JUMPDEST SWAP2 POP PUSH2 0x27A7 DUP3 PUSH2 0x2768 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x27C9 DUP2 PUSH2 0x2790 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x27DA DUP3 PUSH2 0x218B JUMP JUMPDEST SWAP2 POP PUSH2 0x27E5 DUP4 PUSH2 0x218B JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x27FD JUMPI PUSH2 0x27FC PUSH2 0x2609 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x280D DUP3 PUSH2 0x2510 JUMP JUMPDEST SWAP2 POP PUSH2 0x2818 DUP4 PUSH2 0x2510 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2828 JUMPI PUSH2 0x2827 PUSH2 0x25DC JUMP JUMPDEST JUMPDEST PUSH1 0x1 PUSH0 SUB DUP4 EQ PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 DUP4 EQ AND ISZERO PUSH2 0x2860 JUMPI PUSH2 0x285F PUSH2 0x2609 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SDIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2889 DUP2 PUSH2 0x286B JUMP JUMPDEST DUP2 EQ PUSH2 0x2893 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x28A4 DUP2 PUSH2 0x2880 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x28B3 DUP2 PUSH2 0x2510 JUMP JUMPDEST DUP2 EQ PUSH2 0x28BD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x28CE DUP2 PUSH2 0x28AA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x28E2 DUP2 PUSH2 0x2194 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2901 JUMPI PUSH2 0x2900 PUSH2 0x2129 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x290E DUP9 DUP3 DUP10 ADD PUSH2 0x2896 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x291F DUP9 DUP3 DUP10 ADD PUSH2 0x28C0 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x2930 DUP9 DUP3 DUP10 ADD PUSH2 0x28D4 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x2941 DUP9 DUP3 DUP10 ADD PUSH2 0x28D4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x2952 DUP9 DUP3 DUP10 ADD PUSH2 0x2896 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x299E PUSH2 0x2999 PUSH2 0x2994 DUP5 PUSH2 0x295F JUMP JUMPDEST PUSH2 0x297B JUMP JUMPDEST PUSH2 0x2968 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x29AE DUP2 PUSH2 0x2984 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x29C7 PUSH0 DUP4 ADD DUP5 PUSH2 0x29A5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x29E0 PUSH0 DUP4 ADD DUP7 PUSH2 0x24E8 JUMP JUMPDEST PUSH2 0x29ED PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x222F JUMP JUMPDEST PUSH2 0x29FA PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x222F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x2A0B DUP2 PUSH2 0x248C JUMP JUMPDEST DUP2 EQ PUSH2 0x2A15 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2A26 DUP2 PUSH2 0x2A02 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2A41 JUMPI PUSH2 0x2A40 PUSH2 0x2129 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2A4E DUP5 DUP3 DUP6 ADD PUSH2 0x2A18 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x2AB3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x2A78 JUMP JUMPDEST PUSH2 0x2ABD DUP7 DUP4 PUSH2 0x2A78 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2AEF PUSH2 0x2AEA PUSH2 0x2AE5 DUP5 PUSH2 0x218B JUMP JUMPDEST PUSH2 0x297B JUMP JUMPDEST PUSH2 0x218B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2B08 DUP4 PUSH2 0x2AD5 JUMP JUMPDEST PUSH2 0x2B1C PUSH2 0x2B14 DUP3 PUSH2 0x2AF6 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x2A84 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x2B30 PUSH2 0x2B24 JUMP JUMPDEST PUSH2 0x2B3B DUP2 DUP5 DUP5 PUSH2 0x2AFF JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2B5E JUMPI PUSH2 0x2B53 PUSH0 DUP3 PUSH2 0x2B28 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2B41 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x2BA3 JUMPI PUSH2 0x2B74 DUP2 PUSH2 0x2A57 JUMP JUMPDEST PUSH2 0x2B7D DUP5 PUSH2 0x2A69 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x2B8C JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x2BA0 PUSH2 0x2B98 DUP6 PUSH2 0x2A69 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x2B40 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2BC3 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x2BA8 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2BDB DUP4 DUP4 PUSH2 0x2BB4 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2BF4 DUP3 PUSH2 0x2090 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2C0D JUMPI PUSH2 0x2C0C PUSH2 0x230E JUMP JUMPDEST JUMPDEST PUSH2 0x2C17 DUP3 SLOAD PUSH2 0x25AC JUMP JUMPDEST PUSH2 0x2C22 DUP3 DUP3 DUP6 PUSH2 0x2B62 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x2C53 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x2C41 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x2C4B DUP6 DUP3 PUSH2 0x2BD0 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x2CB2 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x2C61 DUP7 PUSH2 0x2A57 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2C88 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2C63 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x2CA5 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x2CA1 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x2BB4 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2CD8 DUP3 PUSH2 0x2CBA JUMP JUMPDEST PUSH2 0x2CE2 DUP2 DUP6 PUSH2 0x2CC4 JUMP JUMPDEST SWAP4 POP PUSH2 0x2CF2 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x20AA JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2D09 DUP3 DUP5 PUSH2 0x2CCE JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID NUMBER PUSH2 0x6D70 SLOAD PUSH16 0x6B656E203C2D3E204554482E2043616D PUSH17 0x546F6B656E20697320537461626C65436F PUSH10 0x6E20746861742072656C PUSH2 0x7469 PUSH15 0x6720455448203C2D3E204A5059A264 PUSH10 0x70667358221220057672 0xC2 0xC9 PUSH16 0xE073382FAFEC2DAFC649D15F56B881DC LOG1 TSTORE 0xE3 0xA9 EXTCODEHASH SWAP8 PUSH14 0x485F364736F6C63430008190033 ",
							"sourceMap": "582:3979:15:-:0;;;1171:4:3;1128:48;;;;;;;;;867:496:15;;;;;;;;;;887:22;:20;;;:22;;:::i;:::-;1234:42;1202:7;;:75;;;;;;;;;;;;;;;;;;1315:42;1283:7;;:75;;;;;;;;;;;;;;;;;;582:3979;;7711:422:2;7826:30;7859:26;:24;;;:26;;:::i;:::-;7826:59;;7900:1;:15;;;;;;;;;;;;7896:76;;;7938:23;;;;;;;;;;;;;;7896:76;8003:16;7985:34;;:1;:14;;;;;;;;;;;;:34;;;7981:146;;8052:16;8035:1;:14;;;:33;;;;;;;;;;;;;;;;;;8087:29;8099:16;8087:29;;;;;;:::i;:::-;;;;;;;;7981:146;7760:373;7711:422::o;8737:170::-;8795:30;8870:21;8860:31;;8737:170;:::o;7:101:16:-;43:7;83:18;76:5;72:30;61:41;;7:101;;;:::o;114:115::-;199:23;216:5;199:23;:::i;:::-;194:3;187:36;114:115;;:::o;235:218::-;326:4;364:2;353:9;349:18;341:26;;377:69;443:1;432:9;428:17;419:6;377:69;:::i;:::-;235:218;;;;:::o;582:3979:15:-;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@Burn_CTK_2554": {
									"entryPoint": 3075,
									"id": 2554,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@ETH_JPY_2620": {
									"entryPoint": 2752,
									"id": 2620,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@Exchange_ETH_to_CTK_2461": {
									"entryPoint": 2275,
									"id": 2461,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@JPY_ETH_2648": {
									"entryPoint": 1825,
									"id": 2648,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@UPGRADE_INTERFACE_VERSION_518": {
									"entryPoint": 3089,
									"id": 518,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__ERC20Burnable_init_1314": {
									"entryPoint": 6170,
									"id": 1314,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__ERC20_init_744": {
									"entryPoint": 6148,
									"id": 744,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@__ERC20_init_unchained_772": {
									"entryPoint": 7507,
									"id": 772,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@__Ownable_init_100": {
									"entryPoint": 6180,
									"id": 100,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@__Ownable_init_unchained_127": {
									"entryPoint": 7567,
									"id": 127,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@__UUPSUpgradeable_init_548": {
									"entryPoint": 6200,
									"id": 548,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_approve_1176": {
									"entryPoint": 4406,
									"id": 1176,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_1244": {
									"entryPoint": 6210,
									"id": 1244,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_authorizeUpgrade_2408": {
									"entryPoint": 5294,
									"id": 2408,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_burn_1158": {
									"entryPoint": 4937,
									"id": 1158,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkInitializing_416": {
									"entryPoint": 7443,
									"id": 416,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkNonPayable_1850": {
									"entryPoint": 8037,
									"id": 1850,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkNotDelegated_624": {
									"entryPoint": 5591,
									"id": 624,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkOwner_168": {
									"entryPoint": 5726,
									"id": 168,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkProxy_608": {
									"entryPoint": 5064,
									"id": 608,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_getERC20Storage_728": {
									"entryPoint": 4360,
									"id": 728,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_getInitializableStorage_493": {
									"entryPoint": 6109,
									"id": 493,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_getOwnableStorage_71": {
									"entryPoint": 6070,
									"id": 71,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_isInitializing_484": {
									"entryPoint": 8097,
									"id": 484,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_mint_1125": {
									"entryPoint": 4810,
									"id": 1125,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1383": {
									"entryPoint": 4399,
									"id": 1383,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_revert_2217": {
									"entryPoint": 8268,
									"id": 2217,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_setImplementation_1636": {
									"entryPoint": 7708,
									"id": 1636,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_spendAllowance_1292": {
									"entryPoint": 4424,
									"id": 1292,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_239": {
									"entryPoint": 5861,
									"id": 239,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_1000": {
									"entryPoint": 4570,
									"id": 1000,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_1092": {
									"entryPoint": 6687,
									"id": 1092,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_upgradeToAndCallUUPS_675": {
									"entryPoint": 5305,
									"id": 675,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@allowance_897": {
									"entryPoint": 3818,
									"id": 897,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_921": {
									"entryPoint": 1768,
									"id": 921,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_849": {
									"entryPoint": 2586,
									"id": 849,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burnFrom_1354": {
									"entryPoint": 2720,
									"id": 1354,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@burn_1333": {
									"entryPoint": 2478,
									"id": 1333,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@decimals_813": {
									"entryPoint": 2267,
									"id": 813,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@description_2416": {
									"entryPoint": 2688,
									"id": 2416,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@functionDelegateCall_2137": {
									"entryPoint": 7909,
									"id": 2137,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getAddressSlot_2250": {
									"entryPoint": 7699,
									"id": 2250,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getAward_2486": {
									"entryPoint": 4251,
									"id": 2486,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getImplementation_1609": {
									"entryPoint": 7246,
									"id": 1609,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@get_Latest_EU_Price_2568": {
									"entryPoint": 3146,
									"id": 2568,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@get_Latest_JU_Price_2582": {
									"entryPoint": 3962,
									"id": 2582,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@initialize_2399": {
									"entryPoint": 3301,
									"id": 2399,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@name_788": {
									"entryPoint": 1610,
									"id": 788,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_151": {
									"entryPoint": 2830,
									"id": 151,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@proxiableUUID_566": {
									"entryPoint": 2529,
									"id": 566,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_182": {
									"entryPoint": 2669,
									"id": 182,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_804": {
									"entryPoint": 2883,
									"id": 804,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_829": {
									"entryPoint": 1802,
									"id": 829,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_953": {
									"entryPoint": 1887,
									"id": 953,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_210": {
									"entryPoint": 4119,
									"id": 210,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_873": {
									"entryPoint": 3041,
									"id": 873,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@upgradeToAndCall_1670": {
									"entryPoint": 7329,
									"id": 1670,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@upgradeToAndCall_586": {
									"entryPoint": 2498,
									"id": 586,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@verifyCallResultFromTarget_2177": {
									"entryPoint": 8127,
									"id": 2177,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@version_2424": {
									"entryPoint": 2578,
									"id": 2424,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@withdraw_2535": {
									"entryPoint": 1933,
									"id": 2535,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 9156,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 8567,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32_fromMemory": {
									"entryPoint": 10776,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 9221,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_int256_fromMemory": {
									"entryPoint": 10432,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 8618,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 10452,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint80_fromMemory": {
									"entryPoint": 10390,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 9405,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 9537,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 8791,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_bytes_memory_ptr": {
									"entryPoint": 9266,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 8638,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes32_fromMemory": {
									"entryPoint": 10796,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 8871,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory": {
									"entryPoint": 10472,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 9448,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 8711,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 9365,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 11470,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_int256_to_t_int256_fromStack": {
									"entryPoint": 9497,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_rational_1_by_1_to_t_uint64_fromStack": {
									"entryPoint": 10661,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8392,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_016c8545763eb7f610fbb2f8b4daaad18a1230ddad0f63d2a64bb442c88834da_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9908,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10128,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 8751,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 8926,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 11518,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 9463,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 10701,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 8726,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": 9380,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed": {
									"entryPoint": 9512,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed": {
									"entryPoint": 10676,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8448,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_016c8545763eb7f610fbb2f8b4daaad18a1230ddad0f63d2a64bb442c88834da__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9942,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10162,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 8766,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 8941,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 9068,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 8480,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 9094,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 10839,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 11450,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 8336,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 11460,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 8346,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 10192,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_int256": {
									"entryPoint": 10243,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 9782,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 10023,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 9972,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 11106,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 8528,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 8700,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 9356,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_int256": {
									"entryPoint": 9488,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_rational_1_by_1": {
									"entryPoint": 10591,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 8497,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 8587,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint64": {
									"entryPoint": 10600,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 8914,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint80": {
									"entryPoint": 10347,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 11072,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_rational_1_by_1_to_t_uint64": {
									"entryPoint": 10628,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 10965,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 11243,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 9142,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 8362,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 10857,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 9644,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 11216,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 9019,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 10619,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 11188,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 9737,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 9692,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 9599,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 8974,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 10998,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 8966,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 8970,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 8493,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 8489,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 8376,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 10872,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 11176,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 11048,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"store_literal_in_memory_016c8545763eb7f610fbb2f8b4daaad18a1230ddad0f63d2a64bb442c88834da": {
									"entryPoint": 9830,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887": {
									"entryPoint": 10088,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 10884,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 11007,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 8545,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes32": {
									"entryPoint": 10754,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_int256": {
									"entryPoint": 10410,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 8596,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint80": {
									"entryPoint": 10368,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 11044,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:23068:16",
										"nodeType": "YulBlock",
										"src": "0:23068:16",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:16",
													"nodeType": "YulBlock",
													"src": "66:40:16",
													"statements": [
														{
															"nativeSrc": "77:22:16",
															"nodeType": "YulAssignment",
															"src": "77:22:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:16"
																},
																"nativeSrc": "87:12:16",
																"nodeType": "YulFunctionCall",
																"src": "87:12:16"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:16"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:16",
														"nodeType": "YulTypedName",
														"src": "49:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:16",
														"nodeType": "YulTypedName",
														"src": "59:6:16",
														"type": ""
													}
												],
												"src": "7:99:16"
											},
											{
												"body": {
													"nativeSrc": "208:73:16",
													"nodeType": "YulBlock",
													"src": "208:73:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "225:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "230:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "218:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:16"
																},
																"nativeSrc": "218:19:16",
																"nodeType": "YulFunctionCall",
																"src": "218:19:16"
															},
															"nativeSrc": "218:19:16",
															"nodeType": "YulExpressionStatement",
															"src": "218:19:16"
														},
														{
															"nativeSrc": "246:29:16",
															"nodeType": "YulAssignment",
															"src": "246:29:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "265:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "270:4:16",
																		"nodeType": "YulLiteral",
																		"src": "270:4:16",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "261:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:16"
																},
																"nativeSrc": "261:14:16",
																"nodeType": "YulFunctionCall",
																"src": "261:14:16"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "246:11:16",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:16"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "112:169:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "180:3:16",
														"nodeType": "YulTypedName",
														"src": "180:3:16",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "185:6:16",
														"nodeType": "YulTypedName",
														"src": "185:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "196:11:16",
														"nodeType": "YulTypedName",
														"src": "196:11:16",
														"type": ""
													}
												],
												"src": "112:169:16"
											},
											{
												"body": {
													"nativeSrc": "349:77:16",
													"nodeType": "YulBlock",
													"src": "349:77:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "366:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "366:3:16"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "371:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "371:3:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "376:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "376:6:16"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "360:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "360:5:16"
																},
																"nativeSrc": "360:23:16",
																"nodeType": "YulFunctionCall",
																"src": "360:23:16"
															},
															"nativeSrc": "360:23:16",
															"nodeType": "YulExpressionStatement",
															"src": "360:23:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "403:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "403:3:16"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "408:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "408:6:16"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "399:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "399:3:16"
																		},
																		"nativeSrc": "399:16:16",
																		"nodeType": "YulFunctionCall",
																		"src": "399:16:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "417:1:16",
																		"nodeType": "YulLiteral",
																		"src": "417:1:16",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "392:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "392:6:16"
																},
																"nativeSrc": "392:27:16",
																"nodeType": "YulFunctionCall",
																"src": "392:27:16"
															},
															"nativeSrc": "392:27:16",
															"nodeType": "YulExpressionStatement",
															"src": "392:27:16"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "287:139:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "331:3:16",
														"nodeType": "YulTypedName",
														"src": "331:3:16",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "336:3:16",
														"nodeType": "YulTypedName",
														"src": "336:3:16",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "341:6:16",
														"nodeType": "YulTypedName",
														"src": "341:6:16",
														"type": ""
													}
												],
												"src": "287:139:16"
											},
											{
												"body": {
													"nativeSrc": "480:54:16",
													"nodeType": "YulBlock",
													"src": "480:54:16",
													"statements": [
														{
															"nativeSrc": "490:38:16",
															"nodeType": "YulAssignment",
															"src": "490:38:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "508:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "508:5:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "515:2:16",
																				"nodeType": "YulLiteral",
																				"src": "515:2:16",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "504:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "504:3:16"
																		},
																		"nativeSrc": "504:14:16",
																		"nodeType": "YulFunctionCall",
																		"src": "504:14:16"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "524:2:16",
																				"nodeType": "YulLiteral",
																				"src": "524:2:16",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "520:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "520:3:16"
																		},
																		"nativeSrc": "520:7:16",
																		"nodeType": "YulFunctionCall",
																		"src": "520:7:16"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "500:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "500:3:16"
																},
																"nativeSrc": "500:28:16",
																"nodeType": "YulFunctionCall",
																"src": "500:28:16"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "490:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "490:6:16"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "432:102:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "463:5:16",
														"nodeType": "YulTypedName",
														"src": "463:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "473:6:16",
														"nodeType": "YulTypedName",
														"src": "473:6:16",
														"type": ""
													}
												],
												"src": "432:102:16"
											},
											{
												"body": {
													"nativeSrc": "632:285:16",
													"nodeType": "YulBlock",
													"src": "632:285:16",
													"statements": [
														{
															"nativeSrc": "642:53:16",
															"nodeType": "YulVariableDeclaration",
															"src": "642:53:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "689:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "689:5:16"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "656:32:16",
																	"nodeType": "YulIdentifier",
																	"src": "656:32:16"
																},
																"nativeSrc": "656:39:16",
																"nodeType": "YulFunctionCall",
																"src": "656:39:16"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "646:6:16",
																	"nodeType": "YulTypedName",
																	"src": "646:6:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "704:78:16",
															"nodeType": "YulAssignment",
															"src": "704:78:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "770:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "770:3:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "775:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "775:6:16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "711:58:16",
																	"nodeType": "YulIdentifier",
																	"src": "711:58:16"
																},
																"nativeSrc": "711:71:16",
																"nodeType": "YulFunctionCall",
																"src": "711:71:16"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "704:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "704:3:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "830:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "830:5:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "837:4:16",
																				"nodeType": "YulLiteral",
																				"src": "837:4:16",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "826:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "826:3:16"
																		},
																		"nativeSrc": "826:16:16",
																		"nodeType": "YulFunctionCall",
																		"src": "826:16:16"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "844:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "844:3:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "849:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "849:6:16"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "791:34:16",
																	"nodeType": "YulIdentifier",
																	"src": "791:34:16"
																},
																"nativeSrc": "791:65:16",
																"nodeType": "YulFunctionCall",
																"src": "791:65:16"
															},
															"nativeSrc": "791:65:16",
															"nodeType": "YulExpressionStatement",
															"src": "791:65:16"
														},
														{
															"nativeSrc": "865:46:16",
															"nodeType": "YulAssignment",
															"src": "865:46:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "876:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "876:3:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "903:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "903:6:16"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "881:21:16",
																			"nodeType": "YulIdentifier",
																			"src": "881:21:16"
																		},
																		"nativeSrc": "881:29:16",
																		"nodeType": "YulFunctionCall",
																		"src": "881:29:16"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "872:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "872:3:16"
																},
																"nativeSrc": "872:39:16",
																"nodeType": "YulFunctionCall",
																"src": "872:39:16"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "865:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "865:3:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "540:377:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "613:5:16",
														"nodeType": "YulTypedName",
														"src": "613:5:16",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "620:3:16",
														"nodeType": "YulTypedName",
														"src": "620:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "628:3:16",
														"nodeType": "YulTypedName",
														"src": "628:3:16",
														"type": ""
													}
												],
												"src": "540:377:16"
											},
											{
												"body": {
													"nativeSrc": "1041:195:16",
													"nodeType": "YulBlock",
													"src": "1041:195:16",
													"statements": [
														{
															"nativeSrc": "1051:26:16",
															"nodeType": "YulAssignment",
															"src": "1051:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1063:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "1063:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1074:2:16",
																		"nodeType": "YulLiteral",
																		"src": "1074:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1059:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "1059:3:16"
																},
																"nativeSrc": "1059:18:16",
																"nodeType": "YulFunctionCall",
																"src": "1059:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1051:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "1051:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1098:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "1098:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1109:1:16",
																				"nodeType": "YulLiteral",
																				"src": "1109:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1094:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "1094:3:16"
																		},
																		"nativeSrc": "1094:17:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1094:17:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1117:4:16",
																				"nodeType": "YulIdentifier",
																				"src": "1117:4:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1123:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "1123:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1113:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "1113:3:16"
																		},
																		"nativeSrc": "1113:20:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1113:20:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1087:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "1087:6:16"
																},
																"nativeSrc": "1087:47:16",
																"nodeType": "YulFunctionCall",
																"src": "1087:47:16"
															},
															"nativeSrc": "1087:47:16",
															"nodeType": "YulExpressionStatement",
															"src": "1087:47:16"
														},
														{
															"nativeSrc": "1143:86:16",
															"nodeType": "YulAssignment",
															"src": "1143:86:16",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1215:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "1215:6:16"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1224:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "1224:4:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1151:63:16",
																	"nodeType": "YulIdentifier",
																	"src": "1151:63:16"
																},
																"nativeSrc": "1151:78:16",
																"nodeType": "YulFunctionCall",
																"src": "1151:78:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1143:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "1143:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "923:313:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1013:9:16",
														"nodeType": "YulTypedName",
														"src": "1013:9:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1025:6:16",
														"nodeType": "YulTypedName",
														"src": "1025:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1036:4:16",
														"nodeType": "YulTypedName",
														"src": "1036:4:16",
														"type": ""
													}
												],
												"src": "923:313:16"
											},
											{
												"body": {
													"nativeSrc": "1282:35:16",
													"nodeType": "YulBlock",
													"src": "1282:35:16",
													"statements": [
														{
															"nativeSrc": "1292:19:16",
															"nodeType": "YulAssignment",
															"src": "1292:19:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1308:2:16",
																		"nodeType": "YulLiteral",
																		"src": "1308:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1302:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "1302:5:16"
																},
																"nativeSrc": "1302:9:16",
																"nodeType": "YulFunctionCall",
																"src": "1302:9:16"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1292:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "1292:6:16"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1242:75:16",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1275:6:16",
														"nodeType": "YulTypedName",
														"src": "1275:6:16",
														"type": ""
													}
												],
												"src": "1242:75:16"
											},
											{
												"body": {
													"nativeSrc": "1412:28:16",
													"nodeType": "YulBlock",
													"src": "1412:28:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1429:1:16",
																		"nodeType": "YulLiteral",
																		"src": "1429:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1432:1:16",
																		"nodeType": "YulLiteral",
																		"src": "1432:1:16",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1422:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "1422:6:16"
																},
																"nativeSrc": "1422:12:16",
																"nodeType": "YulFunctionCall",
																"src": "1422:12:16"
															},
															"nativeSrc": "1422:12:16",
															"nodeType": "YulExpressionStatement",
															"src": "1422:12:16"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1323:117:16",
												"nodeType": "YulFunctionDefinition",
												"src": "1323:117:16"
											},
											{
												"body": {
													"nativeSrc": "1535:28:16",
													"nodeType": "YulBlock",
													"src": "1535:28:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1552:1:16",
																		"nodeType": "YulLiteral",
																		"src": "1552:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1555:1:16",
																		"nodeType": "YulLiteral",
																		"src": "1555:1:16",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1545:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "1545:6:16"
																},
																"nativeSrc": "1545:12:16",
																"nodeType": "YulFunctionCall",
																"src": "1545:12:16"
															},
															"nativeSrc": "1545:12:16",
															"nodeType": "YulExpressionStatement",
															"src": "1545:12:16"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1446:117:16",
												"nodeType": "YulFunctionDefinition",
												"src": "1446:117:16"
											},
											{
												"body": {
													"nativeSrc": "1614:81:16",
													"nodeType": "YulBlock",
													"src": "1614:81:16",
													"statements": [
														{
															"nativeSrc": "1624:65:16",
															"nodeType": "YulAssignment",
															"src": "1624:65:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1639:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "1639:5:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1646:42:16",
																		"nodeType": "YulLiteral",
																		"src": "1646:42:16",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1635:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "1635:3:16"
																},
																"nativeSrc": "1635:54:16",
																"nodeType": "YulFunctionCall",
																"src": "1635:54:16"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1624:7:16",
																	"nodeType": "YulIdentifier",
																	"src": "1624:7:16"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1569:126:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1596:5:16",
														"nodeType": "YulTypedName",
														"src": "1596:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1606:7:16",
														"nodeType": "YulTypedName",
														"src": "1606:7:16",
														"type": ""
													}
												],
												"src": "1569:126:16"
											},
											{
												"body": {
													"nativeSrc": "1746:51:16",
													"nodeType": "YulBlock",
													"src": "1746:51:16",
													"statements": [
														{
															"nativeSrc": "1756:35:16",
															"nodeType": "YulAssignment",
															"src": "1756:35:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1785:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "1785:5:16"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1767:17:16",
																	"nodeType": "YulIdentifier",
																	"src": "1767:17:16"
																},
																"nativeSrc": "1767:24:16",
																"nodeType": "YulFunctionCall",
																"src": "1767:24:16"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1756:7:16",
																	"nodeType": "YulIdentifier",
																	"src": "1756:7:16"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1701:96:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1728:5:16",
														"nodeType": "YulTypedName",
														"src": "1728:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1738:7:16",
														"nodeType": "YulTypedName",
														"src": "1738:7:16",
														"type": ""
													}
												],
												"src": "1701:96:16"
											},
											{
												"body": {
													"nativeSrc": "1846:79:16",
													"nodeType": "YulBlock",
													"src": "1846:79:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "1903:16:16",
																"nodeType": "YulBlock",
																"src": "1903:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1912:1:16",
																					"nodeType": "YulLiteral",
																					"src": "1912:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1915:1:16",
																					"nodeType": "YulLiteral",
																					"src": "1915:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1905:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "1905:6:16"
																			},
																			"nativeSrc": "1905:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "1905:12:16"
																		},
																		"nativeSrc": "1905:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "1905:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1869:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "1869:5:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1894:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "1894:5:16"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1876:17:16",
																					"nodeType": "YulIdentifier",
																					"src": "1876:17:16"
																				},
																				"nativeSrc": "1876:24:16",
																				"nodeType": "YulFunctionCall",
																				"src": "1876:24:16"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1866:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "1866:2:16"
																		},
																		"nativeSrc": "1866:35:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1866:35:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1859:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "1859:6:16"
																},
																"nativeSrc": "1859:43:16",
																"nodeType": "YulFunctionCall",
																"src": "1859:43:16"
															},
															"nativeSrc": "1856:63:16",
															"nodeType": "YulIf",
															"src": "1856:63:16"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1803:122:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1839:5:16",
														"nodeType": "YulTypedName",
														"src": "1839:5:16",
														"type": ""
													}
												],
												"src": "1803:122:16"
											},
											{
												"body": {
													"nativeSrc": "1983:87:16",
													"nodeType": "YulBlock",
													"src": "1983:87:16",
													"statements": [
														{
															"nativeSrc": "1993:29:16",
															"nodeType": "YulAssignment",
															"src": "1993:29:16",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2015:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "2015:6:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2002:12:16",
																	"nodeType": "YulIdentifier",
																	"src": "2002:12:16"
																},
																"nativeSrc": "2002:20:16",
																"nodeType": "YulFunctionCall",
																"src": "2002:20:16"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1993:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "1993:5:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2058:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "2058:5:16"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2031:26:16",
																	"nodeType": "YulIdentifier",
																	"src": "2031:26:16"
																},
																"nativeSrc": "2031:33:16",
																"nodeType": "YulFunctionCall",
																"src": "2031:33:16"
															},
															"nativeSrc": "2031:33:16",
															"nodeType": "YulExpressionStatement",
															"src": "2031:33:16"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1931:139:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1961:6:16",
														"nodeType": "YulTypedName",
														"src": "1961:6:16",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1969:3:16",
														"nodeType": "YulTypedName",
														"src": "1969:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1977:5:16",
														"nodeType": "YulTypedName",
														"src": "1977:5:16",
														"type": ""
													}
												],
												"src": "1931:139:16"
											},
											{
												"body": {
													"nativeSrc": "2121:32:16",
													"nodeType": "YulBlock",
													"src": "2121:32:16",
													"statements": [
														{
															"nativeSrc": "2131:16:16",
															"nodeType": "YulAssignment",
															"src": "2131:16:16",
															"value": {
																"name": "value",
																"nativeSrc": "2142:5:16",
																"nodeType": "YulIdentifier",
																"src": "2142:5:16"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2131:7:16",
																	"nodeType": "YulIdentifier",
																	"src": "2131:7:16"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2076:77:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2103:5:16",
														"nodeType": "YulTypedName",
														"src": "2103:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2113:7:16",
														"nodeType": "YulTypedName",
														"src": "2113:7:16",
														"type": ""
													}
												],
												"src": "2076:77:16"
											},
											{
												"body": {
													"nativeSrc": "2202:79:16",
													"nodeType": "YulBlock",
													"src": "2202:79:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "2259:16:16",
																"nodeType": "YulBlock",
																"src": "2259:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2268:1:16",
																					"nodeType": "YulLiteral",
																					"src": "2268:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2271:1:16",
																					"nodeType": "YulLiteral",
																					"src": "2271:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2261:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "2261:6:16"
																			},
																			"nativeSrc": "2261:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "2261:12:16"
																		},
																		"nativeSrc": "2261:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "2261:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2225:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "2225:5:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2250:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "2250:5:16"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2232:17:16",
																					"nodeType": "YulIdentifier",
																					"src": "2232:17:16"
																				},
																				"nativeSrc": "2232:24:16",
																				"nodeType": "YulFunctionCall",
																				"src": "2232:24:16"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2222:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "2222:2:16"
																		},
																		"nativeSrc": "2222:35:16",
																		"nodeType": "YulFunctionCall",
																		"src": "2222:35:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2215:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "2215:6:16"
																},
																"nativeSrc": "2215:43:16",
																"nodeType": "YulFunctionCall",
																"src": "2215:43:16"
															},
															"nativeSrc": "2212:63:16",
															"nodeType": "YulIf",
															"src": "2212:63:16"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2159:122:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2195:5:16",
														"nodeType": "YulTypedName",
														"src": "2195:5:16",
														"type": ""
													}
												],
												"src": "2159:122:16"
											},
											{
												"body": {
													"nativeSrc": "2339:87:16",
													"nodeType": "YulBlock",
													"src": "2339:87:16",
													"statements": [
														{
															"nativeSrc": "2349:29:16",
															"nodeType": "YulAssignment",
															"src": "2349:29:16",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2371:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "2371:6:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2358:12:16",
																	"nodeType": "YulIdentifier",
																	"src": "2358:12:16"
																},
																"nativeSrc": "2358:20:16",
																"nodeType": "YulFunctionCall",
																"src": "2358:20:16"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2349:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "2349:5:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2414:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "2414:5:16"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2387:26:16",
																	"nodeType": "YulIdentifier",
																	"src": "2387:26:16"
																},
																"nativeSrc": "2387:33:16",
																"nodeType": "YulFunctionCall",
																"src": "2387:33:16"
															},
															"nativeSrc": "2387:33:16",
															"nodeType": "YulExpressionStatement",
															"src": "2387:33:16"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2287:139:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2317:6:16",
														"nodeType": "YulTypedName",
														"src": "2317:6:16",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2325:3:16",
														"nodeType": "YulTypedName",
														"src": "2325:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2333:5:16",
														"nodeType": "YulTypedName",
														"src": "2333:5:16",
														"type": ""
													}
												],
												"src": "2287:139:16"
											},
											{
												"body": {
													"nativeSrc": "2515:391:16",
													"nodeType": "YulBlock",
													"src": "2515:391:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "2561:83:16",
																"nodeType": "YulBlock",
																"src": "2561:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2563:77:16",
																				"nodeType": "YulIdentifier",
																				"src": "2563:77:16"
																			},
																			"nativeSrc": "2563:79:16",
																			"nodeType": "YulFunctionCall",
																			"src": "2563:79:16"
																		},
																		"nativeSrc": "2563:79:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "2563:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2536:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "2536:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2545:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "2545:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2532:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "2532:3:16"
																		},
																		"nativeSrc": "2532:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "2532:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2557:2:16",
																		"nodeType": "YulLiteral",
																		"src": "2557:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2528:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "2528:3:16"
																},
																"nativeSrc": "2528:32:16",
																"nodeType": "YulFunctionCall",
																"src": "2528:32:16"
															},
															"nativeSrc": "2525:119:16",
															"nodeType": "YulIf",
															"src": "2525:119:16"
														},
														{
															"nativeSrc": "2654:117:16",
															"nodeType": "YulBlock",
															"src": "2654:117:16",
															"statements": [
																{
																	"nativeSrc": "2669:15:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2669:15:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2683:1:16",
																		"nodeType": "YulLiteral",
																		"src": "2683:1:16",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2673:6:16",
																			"nodeType": "YulTypedName",
																			"src": "2673:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2698:63:16",
																	"nodeType": "YulAssignment",
																	"src": "2698:63:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2733:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "2733:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2744:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "2744:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2729:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "2729:3:16"
																				},
																				"nativeSrc": "2729:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "2729:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2753:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "2753:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2708:20:16",
																			"nodeType": "YulIdentifier",
																			"src": "2708:20:16"
																		},
																		"nativeSrc": "2708:53:16",
																		"nodeType": "YulFunctionCall",
																		"src": "2708:53:16"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2698:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "2698:6:16"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2781:118:16",
															"nodeType": "YulBlock",
															"src": "2781:118:16",
															"statements": [
																{
																	"nativeSrc": "2796:16:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2796:16:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2810:2:16",
																		"nodeType": "YulLiteral",
																		"src": "2810:2:16",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2800:6:16",
																			"nodeType": "YulTypedName",
																			"src": "2800:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2826:63:16",
																	"nodeType": "YulAssignment",
																	"src": "2826:63:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2861:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "2861:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2872:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "2872:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2857:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "2857:3:16"
																				},
																				"nativeSrc": "2857:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "2857:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2881:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "2881:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2836:20:16",
																			"nodeType": "YulIdentifier",
																			"src": "2836:20:16"
																		},
																		"nativeSrc": "2836:53:16",
																		"nodeType": "YulFunctionCall",
																		"src": "2836:53:16"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2826:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "2826:6:16"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2432:474:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2477:9:16",
														"nodeType": "YulTypedName",
														"src": "2477:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2488:7:16",
														"nodeType": "YulTypedName",
														"src": "2488:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2500:6:16",
														"nodeType": "YulTypedName",
														"src": "2500:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2508:6:16",
														"nodeType": "YulTypedName",
														"src": "2508:6:16",
														"type": ""
													}
												],
												"src": "2432:474:16"
											},
											{
												"body": {
													"nativeSrc": "2954:48:16",
													"nodeType": "YulBlock",
													"src": "2954:48:16",
													"statements": [
														{
															"nativeSrc": "2964:32:16",
															"nodeType": "YulAssignment",
															"src": "2964:32:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2989:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "2989:5:16"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2982:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "2982:6:16"
																		},
																		"nativeSrc": "2982:13:16",
																		"nodeType": "YulFunctionCall",
																		"src": "2982:13:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2975:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "2975:6:16"
																},
																"nativeSrc": "2975:21:16",
																"nodeType": "YulFunctionCall",
																"src": "2975:21:16"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2964:7:16",
																	"nodeType": "YulIdentifier",
																	"src": "2964:7:16"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "2912:90:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2936:5:16",
														"nodeType": "YulTypedName",
														"src": "2936:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2946:7:16",
														"nodeType": "YulTypedName",
														"src": "2946:7:16",
														"type": ""
													}
												],
												"src": "2912:90:16"
											},
											{
												"body": {
													"nativeSrc": "3067:50:16",
													"nodeType": "YulBlock",
													"src": "3067:50:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3084:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "3084:3:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3104:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "3104:5:16"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3089:14:16",
																			"nodeType": "YulIdentifier",
																			"src": "3089:14:16"
																		},
																		"nativeSrc": "3089:21:16",
																		"nodeType": "YulFunctionCall",
																		"src": "3089:21:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3077:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "3077:6:16"
																},
																"nativeSrc": "3077:34:16",
																"nodeType": "YulFunctionCall",
																"src": "3077:34:16"
															},
															"nativeSrc": "3077:34:16",
															"nodeType": "YulExpressionStatement",
															"src": "3077:34:16"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3008:109:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3055:5:16",
														"nodeType": "YulTypedName",
														"src": "3055:5:16",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3062:3:16",
														"nodeType": "YulTypedName",
														"src": "3062:3:16",
														"type": ""
													}
												],
												"src": "3008:109:16"
											},
											{
												"body": {
													"nativeSrc": "3215:118:16",
													"nodeType": "YulBlock",
													"src": "3215:118:16",
													"statements": [
														{
															"nativeSrc": "3225:26:16",
															"nodeType": "YulAssignment",
															"src": "3225:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3237:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "3237:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3248:2:16",
																		"nodeType": "YulLiteral",
																		"src": "3248:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3233:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "3233:3:16"
																},
																"nativeSrc": "3233:18:16",
																"nodeType": "YulFunctionCall",
																"src": "3233:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3225:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "3225:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3299:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "3299:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3312:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "3312:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3323:1:16",
																				"nodeType": "YulLiteral",
																				"src": "3323:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3308:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "3308:3:16"
																		},
																		"nativeSrc": "3308:17:16",
																		"nodeType": "YulFunctionCall",
																		"src": "3308:17:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3261:37:16",
																	"nodeType": "YulIdentifier",
																	"src": "3261:37:16"
																},
																"nativeSrc": "3261:65:16",
																"nodeType": "YulFunctionCall",
																"src": "3261:65:16"
															},
															"nativeSrc": "3261:65:16",
															"nodeType": "YulExpressionStatement",
															"src": "3261:65:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3123:210:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3187:9:16",
														"nodeType": "YulTypedName",
														"src": "3187:9:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3199:6:16",
														"nodeType": "YulTypedName",
														"src": "3199:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3210:4:16",
														"nodeType": "YulTypedName",
														"src": "3210:4:16",
														"type": ""
													}
												],
												"src": "3123:210:16"
											},
											{
												"body": {
													"nativeSrc": "3404:53:16",
													"nodeType": "YulBlock",
													"src": "3404:53:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3421:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "3421:3:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3444:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "3444:5:16"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3426:17:16",
																			"nodeType": "YulIdentifier",
																			"src": "3426:17:16"
																		},
																		"nativeSrc": "3426:24:16",
																		"nodeType": "YulFunctionCall",
																		"src": "3426:24:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3414:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "3414:6:16"
																},
																"nativeSrc": "3414:37:16",
																"nodeType": "YulFunctionCall",
																"src": "3414:37:16"
															},
															"nativeSrc": "3414:37:16",
															"nodeType": "YulExpressionStatement",
															"src": "3414:37:16"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3339:118:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3392:5:16",
														"nodeType": "YulTypedName",
														"src": "3392:5:16",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3399:3:16",
														"nodeType": "YulTypedName",
														"src": "3399:3:16",
														"type": ""
													}
												],
												"src": "3339:118:16"
											},
											{
												"body": {
													"nativeSrc": "3561:124:16",
													"nodeType": "YulBlock",
													"src": "3561:124:16",
													"statements": [
														{
															"nativeSrc": "3571:26:16",
															"nodeType": "YulAssignment",
															"src": "3571:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3583:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "3583:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3594:2:16",
																		"nodeType": "YulLiteral",
																		"src": "3594:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3579:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "3579:3:16"
																},
																"nativeSrc": "3579:18:16",
																"nodeType": "YulFunctionCall",
																"src": "3579:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3571:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "3571:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3651:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "3651:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3664:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "3664:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3675:1:16",
																				"nodeType": "YulLiteral",
																				"src": "3675:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3660:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "3660:3:16"
																		},
																		"nativeSrc": "3660:17:16",
																		"nodeType": "YulFunctionCall",
																		"src": "3660:17:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3607:43:16",
																	"nodeType": "YulIdentifier",
																	"src": "3607:43:16"
																},
																"nativeSrc": "3607:71:16",
																"nodeType": "YulFunctionCall",
																"src": "3607:71:16"
															},
															"nativeSrc": "3607:71:16",
															"nodeType": "YulExpressionStatement",
															"src": "3607:71:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3463:222:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3533:9:16",
														"nodeType": "YulTypedName",
														"src": "3533:9:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3545:6:16",
														"nodeType": "YulTypedName",
														"src": "3545:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3556:4:16",
														"nodeType": "YulTypedName",
														"src": "3556:4:16",
														"type": ""
													}
												],
												"src": "3463:222:16"
											},
											{
												"body": {
													"nativeSrc": "3791:519:16",
													"nodeType": "YulBlock",
													"src": "3791:519:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "3837:83:16",
																"nodeType": "YulBlock",
																"src": "3837:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3839:77:16",
																				"nodeType": "YulIdentifier",
																				"src": "3839:77:16"
																			},
																			"nativeSrc": "3839:79:16",
																			"nodeType": "YulFunctionCall",
																			"src": "3839:79:16"
																		},
																		"nativeSrc": "3839:79:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "3839:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3812:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "3812:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3821:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "3821:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3808:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "3808:3:16"
																		},
																		"nativeSrc": "3808:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "3808:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3833:2:16",
																		"nodeType": "YulLiteral",
																		"src": "3833:2:16",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3804:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "3804:3:16"
																},
																"nativeSrc": "3804:32:16",
																"nodeType": "YulFunctionCall",
																"src": "3804:32:16"
															},
															"nativeSrc": "3801:119:16",
															"nodeType": "YulIf",
															"src": "3801:119:16"
														},
														{
															"nativeSrc": "3930:117:16",
															"nodeType": "YulBlock",
															"src": "3930:117:16",
															"statements": [
																{
																	"nativeSrc": "3945:15:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3945:15:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3959:1:16",
																		"nodeType": "YulLiteral",
																		"src": "3959:1:16",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3949:6:16",
																			"nodeType": "YulTypedName",
																			"src": "3949:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3974:63:16",
																	"nodeType": "YulAssignment",
																	"src": "3974:63:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4009:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "4009:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4020:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "4020:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4005:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "4005:3:16"
																				},
																				"nativeSrc": "4005:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "4005:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4029:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "4029:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3984:20:16",
																			"nodeType": "YulIdentifier",
																			"src": "3984:20:16"
																		},
																		"nativeSrc": "3984:53:16",
																		"nodeType": "YulFunctionCall",
																		"src": "3984:53:16"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3974:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "3974:6:16"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4057:118:16",
															"nodeType": "YulBlock",
															"src": "4057:118:16",
															"statements": [
																{
																	"nativeSrc": "4072:16:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4072:16:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4086:2:16",
																		"nodeType": "YulLiteral",
																		"src": "4086:2:16",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4076:6:16",
																			"nodeType": "YulTypedName",
																			"src": "4076:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4102:63:16",
																	"nodeType": "YulAssignment",
																	"src": "4102:63:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4137:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "4137:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4148:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "4148:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4133:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "4133:3:16"
																				},
																				"nativeSrc": "4133:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "4133:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4157:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "4157:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4112:20:16",
																			"nodeType": "YulIdentifier",
																			"src": "4112:20:16"
																		},
																		"nativeSrc": "4112:53:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4112:53:16"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4102:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "4102:6:16"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4185:118:16",
															"nodeType": "YulBlock",
															"src": "4185:118:16",
															"statements": [
																{
																	"nativeSrc": "4200:16:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4200:16:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4214:2:16",
																		"nodeType": "YulLiteral",
																		"src": "4214:2:16",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4204:6:16",
																			"nodeType": "YulTypedName",
																			"src": "4204:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4230:63:16",
																	"nodeType": "YulAssignment",
																	"src": "4230:63:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4265:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "4265:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4276:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "4276:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4261:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "4261:3:16"
																				},
																				"nativeSrc": "4261:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "4261:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4285:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "4285:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4240:20:16",
																			"nodeType": "YulIdentifier",
																			"src": "4240:20:16"
																		},
																		"nativeSrc": "4240:53:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4240:53:16"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4230:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "4230:6:16"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "3691:619:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3745:9:16",
														"nodeType": "YulTypedName",
														"src": "3745:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3756:7:16",
														"nodeType": "YulTypedName",
														"src": "3756:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3768:6:16",
														"nodeType": "YulTypedName",
														"src": "3768:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3776:6:16",
														"nodeType": "YulTypedName",
														"src": "3776:6:16",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3784:6:16",
														"nodeType": "YulTypedName",
														"src": "3784:6:16",
														"type": ""
													}
												],
												"src": "3691:619:16"
											},
											{
												"body": {
													"nativeSrc": "4382:263:16",
													"nodeType": "YulBlock",
													"src": "4382:263:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "4428:83:16",
																"nodeType": "YulBlock",
																"src": "4428:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4430:77:16",
																				"nodeType": "YulIdentifier",
																				"src": "4430:77:16"
																			},
																			"nativeSrc": "4430:79:16",
																			"nodeType": "YulFunctionCall",
																			"src": "4430:79:16"
																		},
																		"nativeSrc": "4430:79:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "4430:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4403:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "4403:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4412:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "4412:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4399:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "4399:3:16"
																		},
																		"nativeSrc": "4399:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4399:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4424:2:16",
																		"nodeType": "YulLiteral",
																		"src": "4424:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4395:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "4395:3:16"
																},
																"nativeSrc": "4395:32:16",
																"nodeType": "YulFunctionCall",
																"src": "4395:32:16"
															},
															"nativeSrc": "4392:119:16",
															"nodeType": "YulIf",
															"src": "4392:119:16"
														},
														{
															"nativeSrc": "4521:117:16",
															"nodeType": "YulBlock",
															"src": "4521:117:16",
															"statements": [
																{
																	"nativeSrc": "4536:15:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4536:15:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4550:1:16",
																		"nodeType": "YulLiteral",
																		"src": "4550:1:16",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4540:6:16",
																			"nodeType": "YulTypedName",
																			"src": "4540:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4565:63:16",
																	"nodeType": "YulAssignment",
																	"src": "4565:63:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4600:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "4600:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4611:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "4611:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4596:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "4596:3:16"
																				},
																				"nativeSrc": "4596:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "4596:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4620:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "4620:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4575:20:16",
																			"nodeType": "YulIdentifier",
																			"src": "4575:20:16"
																		},
																		"nativeSrc": "4575:53:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4575:53:16"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4565:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "4565:6:16"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "4316:329:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4352:9:16",
														"nodeType": "YulTypedName",
														"src": "4352:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4363:7:16",
														"nodeType": "YulTypedName",
														"src": "4363:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4375:6:16",
														"nodeType": "YulTypedName",
														"src": "4375:6:16",
														"type": ""
													}
												],
												"src": "4316:329:16"
											},
											{
												"body": {
													"nativeSrc": "4694:43:16",
													"nodeType": "YulBlock",
													"src": "4694:43:16",
													"statements": [
														{
															"nativeSrc": "4704:27:16",
															"nodeType": "YulAssignment",
															"src": "4704:27:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4719:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "4719:5:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4726:4:16",
																		"nodeType": "YulLiteral",
																		"src": "4726:4:16",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4715:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "4715:3:16"
																},
																"nativeSrc": "4715:16:16",
																"nodeType": "YulFunctionCall",
																"src": "4715:16:16"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4704:7:16",
																	"nodeType": "YulIdentifier",
																	"src": "4704:7:16"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "4651:86:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4676:5:16",
														"nodeType": "YulTypedName",
														"src": "4676:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4686:7:16",
														"nodeType": "YulTypedName",
														"src": "4686:7:16",
														"type": ""
													}
												],
												"src": "4651:86:16"
											},
											{
												"body": {
													"nativeSrc": "4804:51:16",
													"nodeType": "YulBlock",
													"src": "4804:51:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4821:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "4821:3:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4842:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "4842:5:16"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "4826:15:16",
																			"nodeType": "YulIdentifier",
																			"src": "4826:15:16"
																		},
																		"nativeSrc": "4826:22:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4826:22:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4814:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "4814:6:16"
																},
																"nativeSrc": "4814:35:16",
																"nodeType": "YulFunctionCall",
																"src": "4814:35:16"
															},
															"nativeSrc": "4814:35:16",
															"nodeType": "YulExpressionStatement",
															"src": "4814:35:16"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "4743:112:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4792:5:16",
														"nodeType": "YulTypedName",
														"src": "4792:5:16",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4799:3:16",
														"nodeType": "YulTypedName",
														"src": "4799:3:16",
														"type": ""
													}
												],
												"src": "4743:112:16"
											},
											{
												"body": {
													"nativeSrc": "4955:120:16",
													"nodeType": "YulBlock",
													"src": "4955:120:16",
													"statements": [
														{
															"nativeSrc": "4965:26:16",
															"nodeType": "YulAssignment",
															"src": "4965:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4977:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "4977:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4988:2:16",
																		"nodeType": "YulLiteral",
																		"src": "4988:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4973:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "4973:3:16"
																},
																"nativeSrc": "4973:18:16",
																"nodeType": "YulFunctionCall",
																"src": "4973:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4965:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "4965:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5041:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "5041:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5054:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "5054:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5065:1:16",
																				"nodeType": "YulLiteral",
																				"src": "5065:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5050:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "5050:3:16"
																		},
																		"nativeSrc": "5050:17:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5050:17:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "5001:39:16",
																	"nodeType": "YulIdentifier",
																	"src": "5001:39:16"
																},
																"nativeSrc": "5001:67:16",
																"nodeType": "YulFunctionCall",
																"src": "5001:67:16"
															},
															"nativeSrc": "5001:67:16",
															"nodeType": "YulExpressionStatement",
															"src": "5001:67:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "4861:214:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4927:9:16",
														"nodeType": "YulTypedName",
														"src": "4927:9:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4939:6:16",
														"nodeType": "YulTypedName",
														"src": "4939:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4950:4:16",
														"nodeType": "YulTypedName",
														"src": "4950:4:16",
														"type": ""
													}
												],
												"src": "4861:214:16"
											},
											{
												"body": {
													"nativeSrc": "5170:28:16",
													"nodeType": "YulBlock",
													"src": "5170:28:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5187:1:16",
																		"nodeType": "YulLiteral",
																		"src": "5187:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5190:1:16",
																		"nodeType": "YulLiteral",
																		"src": "5190:1:16",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5180:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "5180:6:16"
																},
																"nativeSrc": "5180:12:16",
																"nodeType": "YulFunctionCall",
																"src": "5180:12:16"
															},
															"nativeSrc": "5180:12:16",
															"nodeType": "YulExpressionStatement",
															"src": "5180:12:16"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "5081:117:16",
												"nodeType": "YulFunctionDefinition",
												"src": "5081:117:16"
											},
											{
												"body": {
													"nativeSrc": "5293:28:16",
													"nodeType": "YulBlock",
													"src": "5293:28:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5310:1:16",
																		"nodeType": "YulLiteral",
																		"src": "5310:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5313:1:16",
																		"nodeType": "YulLiteral",
																		"src": "5313:1:16",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5303:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "5303:6:16"
																},
																"nativeSrc": "5303:12:16",
																"nodeType": "YulFunctionCall",
																"src": "5303:12:16"
															},
															"nativeSrc": "5303:12:16",
															"nodeType": "YulExpressionStatement",
															"src": "5303:12:16"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "5204:117:16",
												"nodeType": "YulFunctionDefinition",
												"src": "5204:117:16"
											},
											{
												"body": {
													"nativeSrc": "5355:152:16",
													"nodeType": "YulBlock",
													"src": "5355:152:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5372:1:16",
																		"nodeType": "YulLiteral",
																		"src": "5372:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5375:77:16",
																		"nodeType": "YulLiteral",
																		"src": "5375:77:16",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5365:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "5365:6:16"
																},
																"nativeSrc": "5365:88:16",
																"nodeType": "YulFunctionCall",
																"src": "5365:88:16"
															},
															"nativeSrc": "5365:88:16",
															"nodeType": "YulExpressionStatement",
															"src": "5365:88:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5469:1:16",
																		"nodeType": "YulLiteral",
																		"src": "5469:1:16",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5472:4:16",
																		"nodeType": "YulLiteral",
																		"src": "5472:4:16",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5462:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "5462:6:16"
																},
																"nativeSrc": "5462:15:16",
																"nodeType": "YulFunctionCall",
																"src": "5462:15:16"
															},
															"nativeSrc": "5462:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "5462:15:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5493:1:16",
																		"nodeType": "YulLiteral",
																		"src": "5493:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5496:4:16",
																		"nodeType": "YulLiteral",
																		"src": "5496:4:16",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5486:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "5486:6:16"
																},
																"nativeSrc": "5486:15:16",
																"nodeType": "YulFunctionCall",
																"src": "5486:15:16"
															},
															"nativeSrc": "5486:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "5486:15:16"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "5327:180:16",
												"nodeType": "YulFunctionDefinition",
												"src": "5327:180:16"
											},
											{
												"body": {
													"nativeSrc": "5556:238:16",
													"nodeType": "YulBlock",
													"src": "5556:238:16",
													"statements": [
														{
															"nativeSrc": "5566:58:16",
															"nodeType": "YulVariableDeclaration",
															"src": "5566:58:16",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "5588:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "5588:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "5618:4:16",
																				"nodeType": "YulIdentifier",
																				"src": "5618:4:16"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "5596:21:16",
																			"nodeType": "YulIdentifier",
																			"src": "5596:21:16"
																		},
																		"nativeSrc": "5596:27:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5596:27:16"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5584:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "5584:3:16"
																},
																"nativeSrc": "5584:40:16",
																"nodeType": "YulFunctionCall",
																"src": "5584:40:16"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "5570:10:16",
																	"nodeType": "YulTypedName",
																	"src": "5570:10:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5735:22:16",
																"nodeType": "YulBlock",
																"src": "5735:22:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "5737:16:16",
																				"nodeType": "YulIdentifier",
																				"src": "5737:16:16"
																			},
																			"nativeSrc": "5737:18:16",
																			"nodeType": "YulFunctionCall",
																			"src": "5737:18:16"
																		},
																		"nativeSrc": "5737:18:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "5737:18:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "5678:10:16",
																				"nodeType": "YulIdentifier",
																				"src": "5678:10:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5690:18:16",
																				"nodeType": "YulLiteral",
																				"src": "5690:18:16",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "5675:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "5675:2:16"
																		},
																		"nativeSrc": "5675:34:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5675:34:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "5714:10:16",
																				"nodeType": "YulIdentifier",
																				"src": "5714:10:16"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "5726:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "5726:6:16"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "5711:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "5711:2:16"
																		},
																		"nativeSrc": "5711:22:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5711:22:16"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5672:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "5672:2:16"
																},
																"nativeSrc": "5672:62:16",
																"nodeType": "YulFunctionCall",
																"src": "5672:62:16"
															},
															"nativeSrc": "5669:88:16",
															"nodeType": "YulIf",
															"src": "5669:88:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5773:2:16",
																		"nodeType": "YulLiteral",
																		"src": "5773:2:16",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "5777:10:16",
																		"nodeType": "YulIdentifier",
																		"src": "5777:10:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5766:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "5766:6:16"
																},
																"nativeSrc": "5766:22:16",
																"nodeType": "YulFunctionCall",
																"src": "5766:22:16"
															},
															"nativeSrc": "5766:22:16",
															"nodeType": "YulExpressionStatement",
															"src": "5766:22:16"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "5513:281:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "5542:6:16",
														"nodeType": "YulTypedName",
														"src": "5542:6:16",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "5550:4:16",
														"nodeType": "YulTypedName",
														"src": "5550:4:16",
														"type": ""
													}
												],
												"src": "5513:281:16"
											},
											{
												"body": {
													"nativeSrc": "5841:88:16",
													"nodeType": "YulBlock",
													"src": "5841:88:16",
													"statements": [
														{
															"nativeSrc": "5851:30:16",
															"nodeType": "YulAssignment",
															"src": "5851:30:16",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "5861:18:16",
																	"nodeType": "YulIdentifier",
																	"src": "5861:18:16"
																},
																"nativeSrc": "5861:20:16",
																"nodeType": "YulFunctionCall",
																"src": "5861:20:16"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "5851:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "5851:6:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "5910:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "5910:6:16"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "5918:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "5918:4:16"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "5890:19:16",
																	"nodeType": "YulIdentifier",
																	"src": "5890:19:16"
																},
																"nativeSrc": "5890:33:16",
																"nodeType": "YulFunctionCall",
																"src": "5890:33:16"
															},
															"nativeSrc": "5890:33:16",
															"nodeType": "YulExpressionStatement",
															"src": "5890:33:16"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "5800:129:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "5825:4:16",
														"nodeType": "YulTypedName",
														"src": "5825:4:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "5834:6:16",
														"nodeType": "YulTypedName",
														"src": "5834:6:16",
														"type": ""
													}
												],
												"src": "5800:129:16"
											},
											{
												"body": {
													"nativeSrc": "6001:241:16",
													"nodeType": "YulBlock",
													"src": "6001:241:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "6106:22:16",
																"nodeType": "YulBlock",
																"src": "6106:22:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "6108:16:16",
																				"nodeType": "YulIdentifier",
																				"src": "6108:16:16"
																			},
																			"nativeSrc": "6108:18:16",
																			"nodeType": "YulFunctionCall",
																			"src": "6108:18:16"
																		},
																		"nativeSrc": "6108:18:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "6108:18:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "6078:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "6078:6:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6086:18:16",
																		"nodeType": "YulLiteral",
																		"src": "6086:18:16",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6075:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "6075:2:16"
																},
																"nativeSrc": "6075:30:16",
																"nodeType": "YulFunctionCall",
																"src": "6075:30:16"
															},
															"nativeSrc": "6072:56:16",
															"nodeType": "YulIf",
															"src": "6072:56:16"
														},
														{
															"nativeSrc": "6138:37:16",
															"nodeType": "YulAssignment",
															"src": "6138:37:16",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "6168:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "6168:6:16"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "6146:21:16",
																	"nodeType": "YulIdentifier",
																	"src": "6146:21:16"
																},
																"nativeSrc": "6146:29:16",
																"nodeType": "YulFunctionCall",
																"src": "6146:29:16"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "6138:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "6138:4:16"
																}
															]
														},
														{
															"nativeSrc": "6212:23:16",
															"nodeType": "YulAssignment",
															"src": "6212:23:16",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "6224:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "6224:4:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6230:4:16",
																		"nodeType": "YulLiteral",
																		"src": "6230:4:16",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6220:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "6220:3:16"
																},
																"nativeSrc": "6220:15:16",
																"nodeType": "YulFunctionCall",
																"src": "6220:15:16"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "6212:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "6212:4:16"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nativeSrc": "5935:307:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "5985:6:16",
														"nodeType": "YulTypedName",
														"src": "5985:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "5996:4:16",
														"nodeType": "YulTypedName",
														"src": "5996:4:16",
														"type": ""
													}
												],
												"src": "5935:307:16"
											},
											{
												"body": {
													"nativeSrc": "6312:84:16",
													"nodeType": "YulBlock",
													"src": "6312:84:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "6336:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "6336:3:16"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "6341:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "6341:3:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6346:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "6346:6:16"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "6323:12:16",
																	"nodeType": "YulIdentifier",
																	"src": "6323:12:16"
																},
																"nativeSrc": "6323:30:16",
																"nodeType": "YulFunctionCall",
																"src": "6323:30:16"
															},
															"nativeSrc": "6323:30:16",
															"nodeType": "YulExpressionStatement",
															"src": "6323:30:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "6373:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "6373:3:16"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "6378:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "6378:6:16"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6369:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "6369:3:16"
																		},
																		"nativeSrc": "6369:16:16",
																		"nodeType": "YulFunctionCall",
																		"src": "6369:16:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6387:1:16",
																		"nodeType": "YulLiteral",
																		"src": "6387:1:16",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6362:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "6362:6:16"
																},
																"nativeSrc": "6362:27:16",
																"nodeType": "YulFunctionCall",
																"src": "6362:27:16"
															},
															"nativeSrc": "6362:27:16",
															"nodeType": "YulExpressionStatement",
															"src": "6362:27:16"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nativeSrc": "6248:148:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "6294:3:16",
														"nodeType": "YulTypedName",
														"src": "6294:3:16",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "6299:3:16",
														"nodeType": "YulTypedName",
														"src": "6299:3:16",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6304:6:16",
														"nodeType": "YulTypedName",
														"src": "6304:6:16",
														"type": ""
													}
												],
												"src": "6248:148:16"
											},
											{
												"body": {
													"nativeSrc": "6485:340:16",
													"nodeType": "YulBlock",
													"src": "6485:340:16",
													"statements": [
														{
															"nativeSrc": "6495:74:16",
															"nodeType": "YulAssignment",
															"src": "6495:74:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "6561:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "6561:6:16"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nativeSrc": "6520:40:16",
																			"nodeType": "YulIdentifier",
																			"src": "6520:40:16"
																		},
																		"nativeSrc": "6520:48:16",
																		"nodeType": "YulFunctionCall",
																		"src": "6520:48:16"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "6504:15:16",
																	"nodeType": "YulIdentifier",
																	"src": "6504:15:16"
																},
																"nativeSrc": "6504:65:16",
																"nodeType": "YulFunctionCall",
																"src": "6504:65:16"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "6495:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "6495:5:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "6585:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "6585:5:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6592:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "6592:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6578:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "6578:6:16"
																},
																"nativeSrc": "6578:21:16",
																"nodeType": "YulFunctionCall",
																"src": "6578:21:16"
															},
															"nativeSrc": "6578:21:16",
															"nodeType": "YulExpressionStatement",
															"src": "6578:21:16"
														},
														{
															"nativeSrc": "6608:27:16",
															"nodeType": "YulVariableDeclaration",
															"src": "6608:27:16",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "6623:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "6623:5:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6630:4:16",
																		"nodeType": "YulLiteral",
																		"src": "6630:4:16",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6619:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "6619:3:16"
																},
																"nativeSrc": "6619:16:16",
																"nodeType": "YulFunctionCall",
																"src": "6619:16:16"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "6612:3:16",
																	"nodeType": "YulTypedName",
																	"src": "6612:3:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6673:83:16",
																"nodeType": "YulBlock",
																"src": "6673:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "6675:77:16",
																				"nodeType": "YulIdentifier",
																				"src": "6675:77:16"
																			},
																			"nativeSrc": "6675:79:16",
																			"nodeType": "YulFunctionCall",
																			"src": "6675:79:16"
																		},
																		"nativeSrc": "6675:79:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "6675:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "6654:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "6654:3:16"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "6659:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "6659:6:16"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6650:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "6650:3:16"
																		},
																		"nativeSrc": "6650:16:16",
																		"nodeType": "YulFunctionCall",
																		"src": "6650:16:16"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "6668:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "6668:3:16"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6647:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "6647:2:16"
																},
																"nativeSrc": "6647:25:16",
																"nodeType": "YulFunctionCall",
																"src": "6647:25:16"
															},
															"nativeSrc": "6644:112:16",
															"nodeType": "YulIf",
															"src": "6644:112:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "6802:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "6802:3:16"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "6807:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "6807:3:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6812:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "6812:6:16"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "6765:36:16",
																	"nodeType": "YulIdentifier",
																	"src": "6765:36:16"
																},
																"nativeSrc": "6765:54:16",
																"nodeType": "YulFunctionCall",
																"src": "6765:54:16"
															},
															"nativeSrc": "6765:54:16",
															"nodeType": "YulExpressionStatement",
															"src": "6765:54:16"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nativeSrc": "6402:423:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "6458:3:16",
														"nodeType": "YulTypedName",
														"src": "6458:3:16",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6463:6:16",
														"nodeType": "YulTypedName",
														"src": "6463:6:16",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6471:3:16",
														"nodeType": "YulTypedName",
														"src": "6471:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "6479:5:16",
														"nodeType": "YulTypedName",
														"src": "6479:5:16",
														"type": ""
													}
												],
												"src": "6402:423:16"
											},
											{
												"body": {
													"nativeSrc": "6905:277:16",
													"nodeType": "YulBlock",
													"src": "6905:277:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "6954:83:16",
																"nodeType": "YulBlock",
																"src": "6954:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "6956:77:16",
																				"nodeType": "YulIdentifier",
																				"src": "6956:77:16"
																			},
																			"nativeSrc": "6956:79:16",
																			"nodeType": "YulFunctionCall",
																			"src": "6956:79:16"
																		},
																		"nativeSrc": "6956:79:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "6956:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "6933:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "6933:6:16"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6941:4:16",
																						"nodeType": "YulLiteral",
																						"src": "6941:4:16",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6929:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "6929:3:16"
																				},
																				"nativeSrc": "6929:17:16",
																				"nodeType": "YulFunctionCall",
																				"src": "6929:17:16"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "6948:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "6948:3:16"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "6925:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "6925:3:16"
																		},
																		"nativeSrc": "6925:27:16",
																		"nodeType": "YulFunctionCall",
																		"src": "6925:27:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6918:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "6918:6:16"
																},
																"nativeSrc": "6918:35:16",
																"nodeType": "YulFunctionCall",
																"src": "6918:35:16"
															},
															"nativeSrc": "6915:122:16",
															"nodeType": "YulIf",
															"src": "6915:122:16"
														},
														{
															"nativeSrc": "7046:34:16",
															"nodeType": "YulVariableDeclaration",
															"src": "7046:34:16",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "7073:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "7073:6:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "7060:12:16",
																	"nodeType": "YulIdentifier",
																	"src": "7060:12:16"
																},
																"nativeSrc": "7060:20:16",
																"nodeType": "YulFunctionCall",
																"src": "7060:20:16"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "7050:6:16",
																	"nodeType": "YulTypedName",
																	"src": "7050:6:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7089:87:16",
															"nodeType": "YulAssignment",
															"src": "7089:87:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "7149:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "7149:6:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7157:4:16",
																				"nodeType": "YulLiteral",
																				"src": "7157:4:16",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7145:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "7145:3:16"
																		},
																		"nativeSrc": "7145:17:16",
																		"nodeType": "YulFunctionCall",
																		"src": "7145:17:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7164:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "7164:6:16"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "7172:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "7172:3:16"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nativeSrc": "7098:46:16",
																	"nodeType": "YulIdentifier",
																	"src": "7098:46:16"
																},
																"nativeSrc": "7098:78:16",
																"nodeType": "YulFunctionCall",
																"src": "7098:78:16"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "7089:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "7089:5:16"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nativeSrc": "6844:338:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "6883:6:16",
														"nodeType": "YulTypedName",
														"src": "6883:6:16",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6891:3:16",
														"nodeType": "YulTypedName",
														"src": "6891:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "6899:5:16",
														"nodeType": "YulTypedName",
														"src": "6899:5:16",
														"type": ""
													}
												],
												"src": "6844:338:16"
											},
											{
												"body": {
													"nativeSrc": "7280:560:16",
													"nodeType": "YulBlock",
													"src": "7280:560:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "7326:83:16",
																"nodeType": "YulBlock",
																"src": "7326:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7328:77:16",
																				"nodeType": "YulIdentifier",
																				"src": "7328:77:16"
																			},
																			"nativeSrc": "7328:79:16",
																			"nodeType": "YulFunctionCall",
																			"src": "7328:79:16"
																		},
																		"nativeSrc": "7328:79:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "7328:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7301:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "7301:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7310:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "7310:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7297:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "7297:3:16"
																		},
																		"nativeSrc": "7297:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "7297:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7322:2:16",
																		"nodeType": "YulLiteral",
																		"src": "7322:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7293:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "7293:3:16"
																},
																"nativeSrc": "7293:32:16",
																"nodeType": "YulFunctionCall",
																"src": "7293:32:16"
															},
															"nativeSrc": "7290:119:16",
															"nodeType": "YulIf",
															"src": "7290:119:16"
														},
														{
															"nativeSrc": "7419:117:16",
															"nodeType": "YulBlock",
															"src": "7419:117:16",
															"statements": [
																{
																	"nativeSrc": "7434:15:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7434:15:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7448:1:16",
																		"nodeType": "YulLiteral",
																		"src": "7448:1:16",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7438:6:16",
																			"nodeType": "YulTypedName",
																			"src": "7438:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7463:63:16",
																	"nodeType": "YulAssignment",
																	"src": "7463:63:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7498:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "7498:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7509:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "7509:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7494:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "7494:3:16"
																				},
																				"nativeSrc": "7494:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "7494:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7518:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "7518:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7473:20:16",
																			"nodeType": "YulIdentifier",
																			"src": "7473:20:16"
																		},
																		"nativeSrc": "7473:53:16",
																		"nodeType": "YulFunctionCall",
																		"src": "7473:53:16"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7463:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "7463:6:16"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7546:287:16",
															"nodeType": "YulBlock",
															"src": "7546:287:16",
															"statements": [
																{
																	"nativeSrc": "7561:46:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7561:46:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7592:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "7592:9:16"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7603:2:16",
																						"nodeType": "YulLiteral",
																						"src": "7603:2:16",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7588:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "7588:3:16"
																				},
																				"nativeSrc": "7588:18:16",
																				"nodeType": "YulFunctionCall",
																				"src": "7588:18:16"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "7575:12:16",
																			"nodeType": "YulIdentifier",
																			"src": "7575:12:16"
																		},
																		"nativeSrc": "7575:32:16",
																		"nodeType": "YulFunctionCall",
																		"src": "7575:32:16"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7565:6:16",
																			"nodeType": "YulTypedName",
																			"src": "7565:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "7654:83:16",
																		"nodeType": "YulBlock",
																		"src": "7654:83:16",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "7656:77:16",
																						"nodeType": "YulIdentifier",
																						"src": "7656:77:16"
																					},
																					"nativeSrc": "7656:79:16",
																					"nodeType": "YulFunctionCall",
																					"src": "7656:79:16"
																				},
																				"nativeSrc": "7656:79:16",
																				"nodeType": "YulExpressionStatement",
																				"src": "7656:79:16"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "7626:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "7626:6:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7634:18:16",
																				"nodeType": "YulLiteral",
																				"src": "7634:18:16",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "7623:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "7623:2:16"
																		},
																		"nativeSrc": "7623:30:16",
																		"nodeType": "YulFunctionCall",
																		"src": "7623:30:16"
																	},
																	"nativeSrc": "7620:117:16",
																	"nodeType": "YulIf",
																	"src": "7620:117:16"
																},
																{
																	"nativeSrc": "7751:72:16",
																	"nodeType": "YulAssignment",
																	"src": "7751:72:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7795:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "7795:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7806:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "7806:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7791:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "7791:3:16"
																				},
																				"nativeSrc": "7791:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "7791:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7815:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "7815:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nativeSrc": "7761:29:16",
																			"nodeType": "YulIdentifier",
																			"src": "7761:29:16"
																		},
																		"nativeSrc": "7761:62:16",
																		"nodeType": "YulFunctionCall",
																		"src": "7761:62:16"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "7751:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "7751:6:16"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bytes_memory_ptr",
												"nativeSrc": "7188:652:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7242:9:16",
														"nodeType": "YulTypedName",
														"src": "7242:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7253:7:16",
														"nodeType": "YulTypedName",
														"src": "7253:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7265:6:16",
														"nodeType": "YulTypedName",
														"src": "7265:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7273:6:16",
														"nodeType": "YulTypedName",
														"src": "7273:6:16",
														"type": ""
													}
												],
												"src": "7188:652:16"
											},
											{
												"body": {
													"nativeSrc": "7891:32:16",
													"nodeType": "YulBlock",
													"src": "7891:32:16",
													"statements": [
														{
															"nativeSrc": "7901:16:16",
															"nodeType": "YulAssignment",
															"src": "7901:16:16",
															"value": {
																"name": "value",
																"nativeSrc": "7912:5:16",
																"nodeType": "YulIdentifier",
																"src": "7912:5:16"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "7901:7:16",
																	"nodeType": "YulIdentifier",
																	"src": "7901:7:16"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nativeSrc": "7846:77:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7873:5:16",
														"nodeType": "YulTypedName",
														"src": "7873:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "7883:7:16",
														"nodeType": "YulTypedName",
														"src": "7883:7:16",
														"type": ""
													}
												],
												"src": "7846:77:16"
											},
											{
												"body": {
													"nativeSrc": "7994:53:16",
													"nodeType": "YulBlock",
													"src": "7994:53:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8011:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "8011:3:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8034:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "8034:5:16"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nativeSrc": "8016:17:16",
																			"nodeType": "YulIdentifier",
																			"src": "8016:17:16"
																		},
																		"nativeSrc": "8016:24:16",
																		"nodeType": "YulFunctionCall",
																		"src": "8016:24:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8004:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "8004:6:16"
																},
																"nativeSrc": "8004:37:16",
																"nodeType": "YulFunctionCall",
																"src": "8004:37:16"
															},
															"nativeSrc": "8004:37:16",
															"nodeType": "YulExpressionStatement",
															"src": "8004:37:16"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nativeSrc": "7929:118:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7982:5:16",
														"nodeType": "YulTypedName",
														"src": "7982:5:16",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7989:3:16",
														"nodeType": "YulTypedName",
														"src": "7989:3:16",
														"type": ""
													}
												],
												"src": "7929:118:16"
											},
											{
												"body": {
													"nativeSrc": "8151:124:16",
													"nodeType": "YulBlock",
													"src": "8151:124:16",
													"statements": [
														{
															"nativeSrc": "8161:26:16",
															"nodeType": "YulAssignment",
															"src": "8161:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8173:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "8173:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8184:2:16",
																		"nodeType": "YulLiteral",
																		"src": "8184:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8169:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "8169:3:16"
																},
																"nativeSrc": "8169:18:16",
																"nodeType": "YulFunctionCall",
																"src": "8169:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8161:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "8161:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8241:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "8241:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8254:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "8254:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8265:1:16",
																				"nodeType": "YulLiteral",
																				"src": "8265:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8250:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "8250:3:16"
																		},
																		"nativeSrc": "8250:17:16",
																		"nodeType": "YulFunctionCall",
																		"src": "8250:17:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "8197:43:16",
																	"nodeType": "YulIdentifier",
																	"src": "8197:43:16"
																},
																"nativeSrc": "8197:71:16",
																"nodeType": "YulFunctionCall",
																"src": "8197:71:16"
															},
															"nativeSrc": "8197:71:16",
															"nodeType": "YulExpressionStatement",
															"src": "8197:71:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nativeSrc": "8053:222:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8123:9:16",
														"nodeType": "YulTypedName",
														"src": "8123:9:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8135:6:16",
														"nodeType": "YulTypedName",
														"src": "8135:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8146:4:16",
														"nodeType": "YulTypedName",
														"src": "8146:4:16",
														"type": ""
													}
												],
												"src": "8053:222:16"
											},
											{
												"body": {
													"nativeSrc": "8347:263:16",
													"nodeType": "YulBlock",
													"src": "8347:263:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "8393:83:16",
																"nodeType": "YulBlock",
																"src": "8393:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8395:77:16",
																				"nodeType": "YulIdentifier",
																				"src": "8395:77:16"
																			},
																			"nativeSrc": "8395:79:16",
																			"nodeType": "YulFunctionCall",
																			"src": "8395:79:16"
																		},
																		"nativeSrc": "8395:79:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "8395:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8368:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "8368:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8377:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "8377:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8364:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "8364:3:16"
																		},
																		"nativeSrc": "8364:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "8364:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8389:2:16",
																		"nodeType": "YulLiteral",
																		"src": "8389:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8360:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "8360:3:16"
																},
																"nativeSrc": "8360:32:16",
																"nodeType": "YulFunctionCall",
																"src": "8360:32:16"
															},
															"nativeSrc": "8357:119:16",
															"nodeType": "YulIf",
															"src": "8357:119:16"
														},
														{
															"nativeSrc": "8486:117:16",
															"nodeType": "YulBlock",
															"src": "8486:117:16",
															"statements": [
																{
																	"nativeSrc": "8501:15:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8501:15:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8515:1:16",
																		"nodeType": "YulLiteral",
																		"src": "8515:1:16",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8505:6:16",
																			"nodeType": "YulTypedName",
																			"src": "8505:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8530:63:16",
																	"nodeType": "YulAssignment",
																	"src": "8530:63:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8565:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "8565:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8576:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "8576:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8561:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "8561:3:16"
																				},
																				"nativeSrc": "8561:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "8561:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8585:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "8585:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "8540:20:16",
																			"nodeType": "YulIdentifier",
																			"src": "8540:20:16"
																		},
																		"nativeSrc": "8540:53:16",
																		"nodeType": "YulFunctionCall",
																		"src": "8540:53:16"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8530:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "8530:6:16"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "8281:329:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8317:9:16",
														"nodeType": "YulTypedName",
														"src": "8317:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8328:7:16",
														"nodeType": "YulTypedName",
														"src": "8328:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8340:6:16",
														"nodeType": "YulTypedName",
														"src": "8340:6:16",
														"type": ""
													}
												],
												"src": "8281:329:16"
											},
											{
												"body": {
													"nativeSrc": "8681:53:16",
													"nodeType": "YulBlock",
													"src": "8681:53:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8698:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "8698:3:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8721:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "8721:5:16"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "8703:17:16",
																			"nodeType": "YulIdentifier",
																			"src": "8703:17:16"
																		},
																		"nativeSrc": "8703:24:16",
																		"nodeType": "YulFunctionCall",
																		"src": "8703:24:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8691:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "8691:6:16"
																},
																"nativeSrc": "8691:37:16",
																"nodeType": "YulFunctionCall",
																"src": "8691:37:16"
															},
															"nativeSrc": "8691:37:16",
															"nodeType": "YulExpressionStatement",
															"src": "8691:37:16"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "8616:118:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8669:5:16",
														"nodeType": "YulTypedName",
														"src": "8669:5:16",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8676:3:16",
														"nodeType": "YulTypedName",
														"src": "8676:3:16",
														"type": ""
													}
												],
												"src": "8616:118:16"
											},
											{
												"body": {
													"nativeSrc": "8838:124:16",
													"nodeType": "YulBlock",
													"src": "8838:124:16",
													"statements": [
														{
															"nativeSrc": "8848:26:16",
															"nodeType": "YulAssignment",
															"src": "8848:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8860:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "8860:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8871:2:16",
																		"nodeType": "YulLiteral",
																		"src": "8871:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8856:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "8856:3:16"
																},
																"nativeSrc": "8856:18:16",
																"nodeType": "YulFunctionCall",
																"src": "8856:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8848:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "8848:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8928:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "8928:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8941:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "8941:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8952:1:16",
																				"nodeType": "YulLiteral",
																				"src": "8952:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8937:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "8937:3:16"
																		},
																		"nativeSrc": "8937:17:16",
																		"nodeType": "YulFunctionCall",
																		"src": "8937:17:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "8884:43:16",
																	"nodeType": "YulIdentifier",
																	"src": "8884:43:16"
																},
																"nativeSrc": "8884:71:16",
																"nodeType": "YulFunctionCall",
																"src": "8884:71:16"
															},
															"nativeSrc": "8884:71:16",
															"nodeType": "YulExpressionStatement",
															"src": "8884:71:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "8740:222:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8810:9:16",
														"nodeType": "YulTypedName",
														"src": "8810:9:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8822:6:16",
														"nodeType": "YulTypedName",
														"src": "8822:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8833:4:16",
														"nodeType": "YulTypedName",
														"src": "8833:4:16",
														"type": ""
													}
												],
												"src": "8740:222:16"
											},
											{
												"body": {
													"nativeSrc": "9012:32:16",
													"nodeType": "YulBlock",
													"src": "9012:32:16",
													"statements": [
														{
															"nativeSrc": "9022:16:16",
															"nodeType": "YulAssignment",
															"src": "9022:16:16",
															"value": {
																"name": "value",
																"nativeSrc": "9033:5:16",
																"nodeType": "YulIdentifier",
																"src": "9033:5:16"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "9022:7:16",
																	"nodeType": "YulIdentifier",
																	"src": "9022:7:16"
																}
															]
														}
													]
												},
												"name": "cleanup_t_int256",
												"nativeSrc": "8968:76:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8994:5:16",
														"nodeType": "YulTypedName",
														"src": "8994:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "9004:7:16",
														"nodeType": "YulTypedName",
														"src": "9004:7:16",
														"type": ""
													}
												],
												"src": "8968:76:16"
											},
											{
												"body": {
													"nativeSrc": "9113:52:16",
													"nodeType": "YulBlock",
													"src": "9113:52:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9130:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "9130:3:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9152:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "9152:5:16"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_int256",
																			"nativeSrc": "9135:16:16",
																			"nodeType": "YulIdentifier",
																			"src": "9135:16:16"
																		},
																		"nativeSrc": "9135:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "9135:23:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9123:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "9123:6:16"
																},
																"nativeSrc": "9123:36:16",
																"nodeType": "YulFunctionCall",
																"src": "9123:36:16"
															},
															"nativeSrc": "9123:36:16",
															"nodeType": "YulExpressionStatement",
															"src": "9123:36:16"
														}
													]
												},
												"name": "abi_encode_t_int256_to_t_int256_fromStack",
												"nativeSrc": "9050:115:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9101:5:16",
														"nodeType": "YulTypedName",
														"src": "9101:5:16",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9108:3:16",
														"nodeType": "YulTypedName",
														"src": "9108:3:16",
														"type": ""
													}
												],
												"src": "9050:115:16"
											},
											{
												"body": {
													"nativeSrc": "9267:122:16",
													"nodeType": "YulBlock",
													"src": "9267:122:16",
													"statements": [
														{
															"nativeSrc": "9277:26:16",
															"nodeType": "YulAssignment",
															"src": "9277:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9289:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "9289:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9300:2:16",
																		"nodeType": "YulLiteral",
																		"src": "9300:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9285:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "9285:3:16"
																},
																"nativeSrc": "9285:18:16",
																"nodeType": "YulFunctionCall",
																"src": "9285:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9277:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "9277:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9355:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "9355:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9368:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "9368:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9379:1:16",
																				"nodeType": "YulLiteral",
																				"src": "9379:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9364:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "9364:3:16"
																		},
																		"nativeSrc": "9364:17:16",
																		"nodeType": "YulFunctionCall",
																		"src": "9364:17:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_int256_to_t_int256_fromStack",
																	"nativeSrc": "9313:41:16",
																	"nodeType": "YulIdentifier",
																	"src": "9313:41:16"
																},
																"nativeSrc": "9313:69:16",
																"nodeType": "YulFunctionCall",
																"src": "9313:69:16"
															},
															"nativeSrc": "9313:69:16",
															"nodeType": "YulExpressionStatement",
															"src": "9313:69:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed",
												"nativeSrc": "9171:218:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9239:9:16",
														"nodeType": "YulTypedName",
														"src": "9239:9:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9251:6:16",
														"nodeType": "YulTypedName",
														"src": "9251:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9262:4:16",
														"nodeType": "YulTypedName",
														"src": "9262:4:16",
														"type": ""
													}
												],
												"src": "9171:218:16"
											},
											{
												"body": {
													"nativeSrc": "9478:391:16",
													"nodeType": "YulBlock",
													"src": "9478:391:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "9524:83:16",
																"nodeType": "YulBlock",
																"src": "9524:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "9526:77:16",
																				"nodeType": "YulIdentifier",
																				"src": "9526:77:16"
																			},
																			"nativeSrc": "9526:79:16",
																			"nodeType": "YulFunctionCall",
																			"src": "9526:79:16"
																		},
																		"nativeSrc": "9526:79:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "9526:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9499:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "9499:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9508:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "9508:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9495:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "9495:3:16"
																		},
																		"nativeSrc": "9495:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "9495:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9520:2:16",
																		"nodeType": "YulLiteral",
																		"src": "9520:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9491:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "9491:3:16"
																},
																"nativeSrc": "9491:32:16",
																"nodeType": "YulFunctionCall",
																"src": "9491:32:16"
															},
															"nativeSrc": "9488:119:16",
															"nodeType": "YulIf",
															"src": "9488:119:16"
														},
														{
															"nativeSrc": "9617:117:16",
															"nodeType": "YulBlock",
															"src": "9617:117:16",
															"statements": [
																{
																	"nativeSrc": "9632:15:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9632:15:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9646:1:16",
																		"nodeType": "YulLiteral",
																		"src": "9646:1:16",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9636:6:16",
																			"nodeType": "YulTypedName",
																			"src": "9636:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9661:63:16",
																	"nodeType": "YulAssignment",
																	"src": "9661:63:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9696:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "9696:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9707:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "9707:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9692:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "9692:3:16"
																				},
																				"nativeSrc": "9692:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "9692:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9716:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "9716:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "9671:20:16",
																			"nodeType": "YulIdentifier",
																			"src": "9671:20:16"
																		},
																		"nativeSrc": "9671:53:16",
																		"nodeType": "YulFunctionCall",
																		"src": "9671:53:16"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "9661:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "9661:6:16"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9744:118:16",
															"nodeType": "YulBlock",
															"src": "9744:118:16",
															"statements": [
																{
																	"nativeSrc": "9759:16:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9759:16:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9773:2:16",
																		"nodeType": "YulLiteral",
																		"src": "9773:2:16",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9763:6:16",
																			"nodeType": "YulTypedName",
																			"src": "9763:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9789:63:16",
																	"nodeType": "YulAssignment",
																	"src": "9789:63:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9824:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "9824:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9835:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "9835:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9820:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "9820:3:16"
																				},
																				"nativeSrc": "9820:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "9820:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9844:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "9844:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "9799:20:16",
																			"nodeType": "YulIdentifier",
																			"src": "9799:20:16"
																		},
																		"nativeSrc": "9799:53:16",
																		"nodeType": "YulFunctionCall",
																		"src": "9799:53:16"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "9789:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "9789:6:16"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "9395:474:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9440:9:16",
														"nodeType": "YulTypedName",
														"src": "9440:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9451:7:16",
														"nodeType": "YulTypedName",
														"src": "9451:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9463:6:16",
														"nodeType": "YulTypedName",
														"src": "9463:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9471:6:16",
														"nodeType": "YulTypedName",
														"src": "9471:6:16",
														"type": ""
													}
												],
												"src": "9395:474:16"
											},
											{
												"body": {
													"nativeSrc": "9903:152:16",
													"nodeType": "YulBlock",
													"src": "9903:152:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9920:1:16",
																		"nodeType": "YulLiteral",
																		"src": "9920:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9923:77:16",
																		"nodeType": "YulLiteral",
																		"src": "9923:77:16",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9913:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "9913:6:16"
																},
																"nativeSrc": "9913:88:16",
																"nodeType": "YulFunctionCall",
																"src": "9913:88:16"
															},
															"nativeSrc": "9913:88:16",
															"nodeType": "YulExpressionStatement",
															"src": "9913:88:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10017:1:16",
																		"nodeType": "YulLiteral",
																		"src": "10017:1:16",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10020:4:16",
																		"nodeType": "YulLiteral",
																		"src": "10020:4:16",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10010:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "10010:6:16"
																},
																"nativeSrc": "10010:15:16",
																"nodeType": "YulFunctionCall",
																"src": "10010:15:16"
															},
															"nativeSrc": "10010:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "10010:15:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10041:1:16",
																		"nodeType": "YulLiteral",
																		"src": "10041:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10044:4:16",
																		"nodeType": "YulLiteral",
																		"src": "10044:4:16",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "10034:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "10034:6:16"
																},
																"nativeSrc": "10034:15:16",
																"nodeType": "YulFunctionCall",
																"src": "10034:15:16"
															},
															"nativeSrc": "10034:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "10034:15:16"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "9875:180:16",
												"nodeType": "YulFunctionDefinition",
												"src": "9875:180:16"
											},
											{
												"body": {
													"nativeSrc": "10112:269:16",
													"nodeType": "YulBlock",
													"src": "10112:269:16",
													"statements": [
														{
															"nativeSrc": "10122:22:16",
															"nodeType": "YulAssignment",
															"src": "10122:22:16",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "10136:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "10136:4:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10142:1:16",
																		"nodeType": "YulLiteral",
																		"src": "10142:1:16",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "10132:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "10132:3:16"
																},
																"nativeSrc": "10132:12:16",
																"nodeType": "YulFunctionCall",
																"src": "10132:12:16"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "10122:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "10122:6:16"
																}
															]
														},
														{
															"nativeSrc": "10153:38:16",
															"nodeType": "YulVariableDeclaration",
															"src": "10153:38:16",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "10183:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "10183:4:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10189:1:16",
																		"nodeType": "YulLiteral",
																		"src": "10189:1:16",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "10179:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "10179:3:16"
																},
																"nativeSrc": "10179:12:16",
																"nodeType": "YulFunctionCall",
																"src": "10179:12:16"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "10157:18:16",
																	"nodeType": "YulTypedName",
																	"src": "10157:18:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10230:51:16",
																"nodeType": "YulBlock",
																"src": "10230:51:16",
																"statements": [
																	{
																		"nativeSrc": "10244:27:16",
																		"nodeType": "YulAssignment",
																		"src": "10244:27:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "10258:6:16",
																					"nodeType": "YulIdentifier",
																					"src": "10258:6:16"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10266:4:16",
																					"nodeType": "YulLiteral",
																					"src": "10266:4:16",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "10254:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "10254:3:16"
																			},
																			"nativeSrc": "10254:17:16",
																			"nodeType": "YulFunctionCall",
																			"src": "10254:17:16"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "10244:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "10244:6:16"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "10210:18:16",
																		"nodeType": "YulIdentifier",
																		"src": "10210:18:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10203:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "10203:6:16"
																},
																"nativeSrc": "10203:26:16",
																"nodeType": "YulFunctionCall",
																"src": "10203:26:16"
															},
															"nativeSrc": "10200:81:16",
															"nodeType": "YulIf",
															"src": "10200:81:16"
														},
														{
															"body": {
																"nativeSrc": "10333:42:16",
																"nodeType": "YulBlock",
																"src": "10333:42:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "10347:16:16",
																				"nodeType": "YulIdentifier",
																				"src": "10347:16:16"
																			},
																			"nativeSrc": "10347:18:16",
																			"nodeType": "YulFunctionCall",
																			"src": "10347:18:16"
																		},
																		"nativeSrc": "10347:18:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "10347:18:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "10297:18:16",
																		"nodeType": "YulIdentifier",
																		"src": "10297:18:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "10320:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "10320:6:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10328:2:16",
																				"nodeType": "YulLiteral",
																				"src": "10328:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "10317:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "10317:2:16"
																		},
																		"nativeSrc": "10317:14:16",
																		"nodeType": "YulFunctionCall",
																		"src": "10317:14:16"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "10294:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "10294:2:16"
																},
																"nativeSrc": "10294:38:16",
																"nodeType": "YulFunctionCall",
																"src": "10294:38:16"
															},
															"nativeSrc": "10291:84:16",
															"nodeType": "YulIf",
															"src": "10291:84:16"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "10061:320:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "10096:4:16",
														"nodeType": "YulTypedName",
														"src": "10096:4:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "10105:6:16",
														"nodeType": "YulTypedName",
														"src": "10105:6:16",
														"type": ""
													}
												],
												"src": "10061:320:16"
											},
											{
												"body": {
													"nativeSrc": "10415:152:16",
													"nodeType": "YulBlock",
													"src": "10415:152:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10432:1:16",
																		"nodeType": "YulLiteral",
																		"src": "10432:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10435:77:16",
																		"nodeType": "YulLiteral",
																		"src": "10435:77:16",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10425:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "10425:6:16"
																},
																"nativeSrc": "10425:88:16",
																"nodeType": "YulFunctionCall",
																"src": "10425:88:16"
															},
															"nativeSrc": "10425:88:16",
															"nodeType": "YulExpressionStatement",
															"src": "10425:88:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10529:1:16",
																		"nodeType": "YulLiteral",
																		"src": "10529:1:16",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10532:4:16",
																		"nodeType": "YulLiteral",
																		"src": "10532:4:16",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10522:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "10522:6:16"
																},
																"nativeSrc": "10522:15:16",
																"nodeType": "YulFunctionCall",
																"src": "10522:15:16"
															},
															"nativeSrc": "10522:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "10522:15:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10553:1:16",
																		"nodeType": "YulLiteral",
																		"src": "10553:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10556:4:16",
																		"nodeType": "YulLiteral",
																		"src": "10556:4:16",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "10546:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "10546:6:16"
																},
																"nativeSrc": "10546:15:16",
																"nodeType": "YulFunctionCall",
																"src": "10546:15:16"
															},
															"nativeSrc": "10546:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "10546:15:16"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "10387:180:16",
												"nodeType": "YulFunctionDefinition",
												"src": "10387:180:16"
											},
											{
												"body": {
													"nativeSrc": "10601:152:16",
													"nodeType": "YulBlock",
													"src": "10601:152:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10618:1:16",
																		"nodeType": "YulLiteral",
																		"src": "10618:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10621:77:16",
																		"nodeType": "YulLiteral",
																		"src": "10621:77:16",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10611:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "10611:6:16"
																},
																"nativeSrc": "10611:88:16",
																"nodeType": "YulFunctionCall",
																"src": "10611:88:16"
															},
															"nativeSrc": "10611:88:16",
															"nodeType": "YulExpressionStatement",
															"src": "10611:88:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10715:1:16",
																		"nodeType": "YulLiteral",
																		"src": "10715:1:16",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10718:4:16",
																		"nodeType": "YulLiteral",
																		"src": "10718:4:16",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10708:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "10708:6:16"
																},
																"nativeSrc": "10708:15:16",
																"nodeType": "YulFunctionCall",
																"src": "10708:15:16"
															},
															"nativeSrc": "10708:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "10708:15:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10739:1:16",
																		"nodeType": "YulLiteral",
																		"src": "10739:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10742:4:16",
																		"nodeType": "YulLiteral",
																		"src": "10742:4:16",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "10732:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "10732:6:16"
																},
																"nativeSrc": "10732:15:16",
																"nodeType": "YulFunctionCall",
																"src": "10732:15:16"
															},
															"nativeSrc": "10732:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "10732:15:16"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "10573:180:16",
												"nodeType": "YulFunctionDefinition",
												"src": "10573:180:16"
											},
											{
												"body": {
													"nativeSrc": "10801:143:16",
													"nodeType": "YulBlock",
													"src": "10801:143:16",
													"statements": [
														{
															"nativeSrc": "10811:25:16",
															"nodeType": "YulAssignment",
															"src": "10811:25:16",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10834:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "10834:1:16"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10816:17:16",
																	"nodeType": "YulIdentifier",
																	"src": "10816:17:16"
																},
																"nativeSrc": "10816:20:16",
																"nodeType": "YulFunctionCall",
																"src": "10816:20:16"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "10811:1:16",
																	"nodeType": "YulIdentifier",
																	"src": "10811:1:16"
																}
															]
														},
														{
															"nativeSrc": "10845:25:16",
															"nodeType": "YulAssignment",
															"src": "10845:25:16",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "10868:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "10868:1:16"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10850:17:16",
																	"nodeType": "YulIdentifier",
																	"src": "10850:17:16"
																},
																"nativeSrc": "10850:20:16",
																"nodeType": "YulFunctionCall",
																"src": "10850:20:16"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "10845:1:16",
																	"nodeType": "YulIdentifier",
																	"src": "10845:1:16"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10892:22:16",
																"nodeType": "YulBlock",
																"src": "10892:22:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "10894:16:16",
																				"nodeType": "YulIdentifier",
																				"src": "10894:16:16"
																			},
																			"nativeSrc": "10894:18:16",
																			"nodeType": "YulFunctionCall",
																			"src": "10894:18:16"
																		},
																		"nativeSrc": "10894:18:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "10894:18:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "10889:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "10889:1:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10882:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "10882:6:16"
																},
																"nativeSrc": "10882:9:16",
																"nodeType": "YulFunctionCall",
																"src": "10882:9:16"
															},
															"nativeSrc": "10879:35:16",
															"nodeType": "YulIf",
															"src": "10879:35:16"
														},
														{
															"nativeSrc": "10924:14:16",
															"nodeType": "YulAssignment",
															"src": "10924:14:16",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10933:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "10933:1:16"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10936:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "10936:1:16"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "10929:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "10929:3:16"
																},
																"nativeSrc": "10929:9:16",
																"nodeType": "YulFunctionCall",
																"src": "10929:9:16"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "10924:1:16",
																	"nodeType": "YulIdentifier",
																	"src": "10924:1:16"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "10759:185:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "10790:1:16",
														"nodeType": "YulTypedName",
														"src": "10790:1:16",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "10793:1:16",
														"nodeType": "YulTypedName",
														"src": "10793:1:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "10799:1:16",
														"nodeType": "YulTypedName",
														"src": "10799:1:16",
														"type": ""
													}
												],
												"src": "10759:185:16"
											},
											{
												"body": {
													"nativeSrc": "11056:138:16",
													"nodeType": "YulBlock",
													"src": "11056:138:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11078:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "11078:6:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11086:1:16",
																				"nodeType": "YulLiteral",
																				"src": "11086:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11074:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "11074:3:16"
																		},
																		"nativeSrc": "11074:14:16",
																		"nodeType": "YulFunctionCall",
																		"src": "11074:14:16"
																	},
																	{
																		"hexValue": "416d6f756e74206d75737420616c77617973206265206c657373207468616e20",
																		"kind": "string",
																		"nativeSrc": "11090:34:16",
																		"nodeType": "YulLiteral",
																		"src": "11090:34:16",
																		"type": "",
																		"value": "Amount must always be less than "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11067:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "11067:6:16"
																},
																"nativeSrc": "11067:58:16",
																"nodeType": "YulFunctionCall",
																"src": "11067:58:16"
															},
															"nativeSrc": "11067:58:16",
															"nodeType": "YulExpressionStatement",
															"src": "11067:58:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11146:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "11146:6:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11154:2:16",
																				"nodeType": "YulLiteral",
																				"src": "11154:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11142:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "11142:3:16"
																		},
																		"nativeSrc": "11142:15:16",
																		"nodeType": "YulFunctionCall",
																		"src": "11142:15:16"
																	},
																	{
																		"hexValue": "746865206e756d626572206f6620706f7373657373696f6e73",
																		"kind": "string",
																		"nativeSrc": "11159:27:16",
																		"nodeType": "YulLiteral",
																		"src": "11159:27:16",
																		"type": "",
																		"value": "the number of possessions"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11135:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "11135:6:16"
																},
																"nativeSrc": "11135:52:16",
																"nodeType": "YulFunctionCall",
																"src": "11135:52:16"
															},
															"nativeSrc": "11135:52:16",
															"nodeType": "YulExpressionStatement",
															"src": "11135:52:16"
														}
													]
												},
												"name": "store_literal_in_memory_016c8545763eb7f610fbb2f8b4daaad18a1230ddad0f63d2a64bb442c88834da",
												"nativeSrc": "10950:244:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11048:6:16",
														"nodeType": "YulTypedName",
														"src": "11048:6:16",
														"type": ""
													}
												],
												"src": "10950:244:16"
											},
											{
												"body": {
													"nativeSrc": "11346:220:16",
													"nodeType": "YulBlock",
													"src": "11346:220:16",
													"statements": [
														{
															"nativeSrc": "11356:74:16",
															"nodeType": "YulAssignment",
															"src": "11356:74:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11422:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "11422:3:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11427:2:16",
																		"nodeType": "YulLiteral",
																		"src": "11427:2:16",
																		"type": "",
																		"value": "57"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11363:58:16",
																	"nodeType": "YulIdentifier",
																	"src": "11363:58:16"
																},
																"nativeSrc": "11363:67:16",
																"nodeType": "YulFunctionCall",
																"src": "11363:67:16"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11356:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "11356:3:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11528:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "11528:3:16"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_016c8545763eb7f610fbb2f8b4daaad18a1230ddad0f63d2a64bb442c88834da",
																	"nativeSrc": "11439:88:16",
																	"nodeType": "YulIdentifier",
																	"src": "11439:88:16"
																},
																"nativeSrc": "11439:93:16",
																"nodeType": "YulFunctionCall",
																"src": "11439:93:16"
															},
															"nativeSrc": "11439:93:16",
															"nodeType": "YulExpressionStatement",
															"src": "11439:93:16"
														},
														{
															"nativeSrc": "11541:19:16",
															"nodeType": "YulAssignment",
															"src": "11541:19:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11552:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "11552:3:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11557:2:16",
																		"nodeType": "YulLiteral",
																		"src": "11557:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11548:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "11548:3:16"
																},
																"nativeSrc": "11548:12:16",
																"nodeType": "YulFunctionCall",
																"src": "11548:12:16"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11541:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "11541:3:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_016c8545763eb7f610fbb2f8b4daaad18a1230ddad0f63d2a64bb442c88834da_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11200:366:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11334:3:16",
														"nodeType": "YulTypedName",
														"src": "11334:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11342:3:16",
														"nodeType": "YulTypedName",
														"src": "11342:3:16",
														"type": ""
													}
												],
												"src": "11200:366:16"
											},
											{
												"body": {
													"nativeSrc": "11743:248:16",
													"nodeType": "YulBlock",
													"src": "11743:248:16",
													"statements": [
														{
															"nativeSrc": "11753:26:16",
															"nodeType": "YulAssignment",
															"src": "11753:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11765:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "11765:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11776:2:16",
																		"nodeType": "YulLiteral",
																		"src": "11776:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11761:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "11761:3:16"
																},
																"nativeSrc": "11761:18:16",
																"nodeType": "YulFunctionCall",
																"src": "11761:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11753:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "11753:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11800:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "11800:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11811:1:16",
																				"nodeType": "YulLiteral",
																				"src": "11811:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11796:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "11796:3:16"
																		},
																		"nativeSrc": "11796:17:16",
																		"nodeType": "YulFunctionCall",
																		"src": "11796:17:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11819:4:16",
																				"nodeType": "YulIdentifier",
																				"src": "11819:4:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11825:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "11825:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11815:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "11815:3:16"
																		},
																		"nativeSrc": "11815:20:16",
																		"nodeType": "YulFunctionCall",
																		"src": "11815:20:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11789:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "11789:6:16"
																},
																"nativeSrc": "11789:47:16",
																"nodeType": "YulFunctionCall",
																"src": "11789:47:16"
															},
															"nativeSrc": "11789:47:16",
															"nodeType": "YulExpressionStatement",
															"src": "11789:47:16"
														},
														{
															"nativeSrc": "11845:139:16",
															"nodeType": "YulAssignment",
															"src": "11845:139:16",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11979:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "11979:4:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_016c8545763eb7f610fbb2f8b4daaad18a1230ddad0f63d2a64bb442c88834da_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11853:124:16",
																	"nodeType": "YulIdentifier",
																	"src": "11853:124:16"
																},
																"nativeSrc": "11853:131:16",
																"nodeType": "YulFunctionCall",
																"src": "11853:131:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11845:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "11845:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_016c8545763eb7f610fbb2f8b4daaad18a1230ddad0f63d2a64bb442c88834da__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11572:419:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11723:9:16",
														"nodeType": "YulTypedName",
														"src": "11723:9:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11738:4:16",
														"nodeType": "YulTypedName",
														"src": "11738:4:16",
														"type": ""
													}
												],
												"src": "11572:419:16"
											},
											{
												"body": {
													"nativeSrc": "12042:149:16",
													"nodeType": "YulBlock",
													"src": "12042:149:16",
													"statements": [
														{
															"nativeSrc": "12052:25:16",
															"nodeType": "YulAssignment",
															"src": "12052:25:16",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12075:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "12075:1:16"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12057:17:16",
																	"nodeType": "YulIdentifier",
																	"src": "12057:17:16"
																},
																"nativeSrc": "12057:20:16",
																"nodeType": "YulFunctionCall",
																"src": "12057:20:16"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "12052:1:16",
																	"nodeType": "YulIdentifier",
																	"src": "12052:1:16"
																}
															]
														},
														{
															"nativeSrc": "12086:25:16",
															"nodeType": "YulAssignment",
															"src": "12086:25:16",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "12109:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "12109:1:16"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12091:17:16",
																	"nodeType": "YulIdentifier",
																	"src": "12091:17:16"
																},
																"nativeSrc": "12091:20:16",
																"nodeType": "YulFunctionCall",
																"src": "12091:20:16"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "12086:1:16",
																	"nodeType": "YulIdentifier",
																	"src": "12086:1:16"
																}
															]
														},
														{
															"nativeSrc": "12120:17:16",
															"nodeType": "YulAssignment",
															"src": "12120:17:16",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12132:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "12132:1:16"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "12135:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "12135:1:16"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "12128:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "12128:3:16"
																},
																"nativeSrc": "12128:9:16",
																"nodeType": "YulFunctionCall",
																"src": "12128:9:16"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "12120:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "12120:4:16"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12162:22:16",
																"nodeType": "YulBlock",
																"src": "12162:22:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "12164:16:16",
																				"nodeType": "YulIdentifier",
																				"src": "12164:16:16"
																			},
																			"nativeSrc": "12164:18:16",
																			"nodeType": "YulFunctionCall",
																			"src": "12164:18:16"
																		},
																		"nativeSrc": "12164:18:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "12164:18:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "12153:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "12153:4:16"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "12159:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "12159:1:16"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "12150:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "12150:2:16"
																},
																"nativeSrc": "12150:11:16",
																"nodeType": "YulFunctionCall",
																"src": "12150:11:16"
															},
															"nativeSrc": "12147:37:16",
															"nodeType": "YulIf",
															"src": "12147:37:16"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "11997:194:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "12028:1:16",
														"nodeType": "YulTypedName",
														"src": "12028:1:16",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "12031:1:16",
														"nodeType": "YulTypedName",
														"src": "12031:1:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "12037:4:16",
														"nodeType": "YulTypedName",
														"src": "12037:4:16",
														"type": ""
													}
												],
												"src": "11997:194:16"
											},
											{
												"body": {
													"nativeSrc": "12245:362:16",
													"nodeType": "YulBlock",
													"src": "12245:362:16",
													"statements": [
														{
															"nativeSrc": "12255:25:16",
															"nodeType": "YulAssignment",
															"src": "12255:25:16",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12278:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "12278:1:16"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12260:17:16",
																	"nodeType": "YulIdentifier",
																	"src": "12260:17:16"
																},
																"nativeSrc": "12260:20:16",
																"nodeType": "YulFunctionCall",
																"src": "12260:20:16"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "12255:1:16",
																	"nodeType": "YulIdentifier",
																	"src": "12255:1:16"
																}
															]
														},
														{
															"nativeSrc": "12289:25:16",
															"nodeType": "YulAssignment",
															"src": "12289:25:16",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "12312:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "12312:1:16"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12294:17:16",
																	"nodeType": "YulIdentifier",
																	"src": "12294:17:16"
																},
																"nativeSrc": "12294:20:16",
																"nodeType": "YulFunctionCall",
																"src": "12294:20:16"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "12289:1:16",
																	"nodeType": "YulIdentifier",
																	"src": "12289:1:16"
																}
															]
														},
														{
															"nativeSrc": "12323:28:16",
															"nodeType": "YulVariableDeclaration",
															"src": "12323:28:16",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12346:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "12346:1:16"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "12349:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "12349:1:16"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "12342:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "12342:3:16"
																},
																"nativeSrc": "12342:9:16",
																"nodeType": "YulFunctionCall",
																"src": "12342:9:16"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "12327:11:16",
																	"nodeType": "YulTypedName",
																	"src": "12327:11:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "12360:41:16",
															"nodeType": "YulAssignment",
															"src": "12360:41:16",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "12389:11:16",
																		"nodeType": "YulIdentifier",
																		"src": "12389:11:16"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12371:17:16",
																	"nodeType": "YulIdentifier",
																	"src": "12371:17:16"
																},
																"nativeSrc": "12371:30:16",
																"nodeType": "YulFunctionCall",
																"src": "12371:30:16"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "12360:7:16",
																	"nodeType": "YulIdentifier",
																	"src": "12360:7:16"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12578:22:16",
																"nodeType": "YulBlock",
																"src": "12578:22:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "12580:16:16",
																				"nodeType": "YulIdentifier",
																				"src": "12580:16:16"
																			},
																			"nativeSrc": "12580:18:16",
																			"nodeType": "YulFunctionCall",
																			"src": "12580:18:16"
																		},
																		"nativeSrc": "12580:18:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "12580:18:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "12511:1:16",
																						"nodeType": "YulIdentifier",
																						"src": "12511:1:16"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "12504:6:16",
																					"nodeType": "YulIdentifier",
																					"src": "12504:6:16"
																				},
																				"nativeSrc": "12504:9:16",
																				"nodeType": "YulFunctionCall",
																				"src": "12504:9:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "12534:1:16",
																						"nodeType": "YulIdentifier",
																						"src": "12534:1:16"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "12541:7:16",
																								"nodeType": "YulIdentifier",
																								"src": "12541:7:16"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "12550:1:16",
																								"nodeType": "YulIdentifier",
																								"src": "12550:1:16"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "12537:3:16",
																							"nodeType": "YulIdentifier",
																							"src": "12537:3:16"
																						},
																						"nativeSrc": "12537:15:16",
																						"nodeType": "YulFunctionCall",
																						"src": "12537:15:16"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "12531:2:16",
																					"nodeType": "YulIdentifier",
																					"src": "12531:2:16"
																				},
																				"nativeSrc": "12531:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "12531:22:16"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "12484:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "12484:2:16"
																		},
																		"nativeSrc": "12484:83:16",
																		"nodeType": "YulFunctionCall",
																		"src": "12484:83:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "12464:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "12464:6:16"
																},
																"nativeSrc": "12464:113:16",
																"nodeType": "YulFunctionCall",
																"src": "12464:113:16"
															},
															"nativeSrc": "12461:139:16",
															"nodeType": "YulIf",
															"src": "12461:139:16"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "12197:410:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "12228:1:16",
														"nodeType": "YulTypedName",
														"src": "12228:1:16",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "12231:1:16",
														"nodeType": "YulTypedName",
														"src": "12231:1:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "12237:7:16",
														"nodeType": "YulTypedName",
														"src": "12237:7:16",
														"type": ""
													}
												],
												"src": "12197:410:16"
											},
											{
												"body": {
													"nativeSrc": "12719:76:16",
													"nodeType": "YulBlock",
													"src": "12719:76:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12741:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "12741:6:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12749:1:16",
																				"nodeType": "YulLiteral",
																				"src": "12749:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12737:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "12737:3:16"
																		},
																		"nativeSrc": "12737:14:16",
																		"nodeType": "YulFunctionCall",
																		"src": "12737:14:16"
																	},
																	{
																		"hexValue": "416d6f756e74206d7573742062652067726561746572207468616e207a65726f",
																		"kind": "string",
																		"nativeSrc": "12753:34:16",
																		"nodeType": "YulLiteral",
																		"src": "12753:34:16",
																		"type": "",
																		"value": "Amount must be greater than zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12730:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "12730:6:16"
																},
																"nativeSrc": "12730:58:16",
																"nodeType": "YulFunctionCall",
																"src": "12730:58:16"
															},
															"nativeSrc": "12730:58:16",
															"nodeType": "YulExpressionStatement",
															"src": "12730:58:16"
														}
													]
												},
												"name": "store_literal_in_memory_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887",
												"nativeSrc": "12613:182:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "12711:6:16",
														"nodeType": "YulTypedName",
														"src": "12711:6:16",
														"type": ""
													}
												],
												"src": "12613:182:16"
											},
											{
												"body": {
													"nativeSrc": "12947:220:16",
													"nodeType": "YulBlock",
													"src": "12947:220:16",
													"statements": [
														{
															"nativeSrc": "12957:74:16",
															"nodeType": "YulAssignment",
															"src": "12957:74:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13023:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "13023:3:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13028:2:16",
																		"nodeType": "YulLiteral",
																		"src": "13028:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12964:58:16",
																	"nodeType": "YulIdentifier",
																	"src": "12964:58:16"
																},
																"nativeSrc": "12964:67:16",
																"nodeType": "YulFunctionCall",
																"src": "12964:67:16"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12957:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "12957:3:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13129:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "13129:3:16"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887",
																	"nativeSrc": "13040:88:16",
																	"nodeType": "YulIdentifier",
																	"src": "13040:88:16"
																},
																"nativeSrc": "13040:93:16",
																"nodeType": "YulFunctionCall",
																"src": "13040:93:16"
															},
															"nativeSrc": "13040:93:16",
															"nodeType": "YulExpressionStatement",
															"src": "13040:93:16"
														},
														{
															"nativeSrc": "13142:19:16",
															"nodeType": "YulAssignment",
															"src": "13142:19:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13153:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "13153:3:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13158:2:16",
																		"nodeType": "YulLiteral",
																		"src": "13158:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13149:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "13149:3:16"
																},
																"nativeSrc": "13149:12:16",
																"nodeType": "YulFunctionCall",
																"src": "13149:12:16"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13142:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "13142:3:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12801:366:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12935:3:16",
														"nodeType": "YulTypedName",
														"src": "12935:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12943:3:16",
														"nodeType": "YulTypedName",
														"src": "12943:3:16",
														"type": ""
													}
												],
												"src": "12801:366:16"
											},
											{
												"body": {
													"nativeSrc": "13344:248:16",
													"nodeType": "YulBlock",
													"src": "13344:248:16",
													"statements": [
														{
															"nativeSrc": "13354:26:16",
															"nodeType": "YulAssignment",
															"src": "13354:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13366:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "13366:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13377:2:16",
																		"nodeType": "YulLiteral",
																		"src": "13377:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13362:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "13362:3:16"
																},
																"nativeSrc": "13362:18:16",
																"nodeType": "YulFunctionCall",
																"src": "13362:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13354:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "13354:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13401:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "13401:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13412:1:16",
																				"nodeType": "YulLiteral",
																				"src": "13412:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13397:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "13397:3:16"
																		},
																		"nativeSrc": "13397:17:16",
																		"nodeType": "YulFunctionCall",
																		"src": "13397:17:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13420:4:16",
																				"nodeType": "YulIdentifier",
																				"src": "13420:4:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13426:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "13426:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13416:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "13416:3:16"
																		},
																		"nativeSrc": "13416:20:16",
																		"nodeType": "YulFunctionCall",
																		"src": "13416:20:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13390:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "13390:6:16"
																},
																"nativeSrc": "13390:47:16",
																"nodeType": "YulFunctionCall",
																"src": "13390:47:16"
															},
															"nativeSrc": "13390:47:16",
															"nodeType": "YulExpressionStatement",
															"src": "13390:47:16"
														},
														{
															"nativeSrc": "13446:139:16",
															"nodeType": "YulAssignment",
															"src": "13446:139:16",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "13580:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "13580:4:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13454:124:16",
																	"nodeType": "YulIdentifier",
																	"src": "13454:124:16"
																},
																"nativeSrc": "13454:131:16",
																"nodeType": "YulFunctionCall",
																"src": "13454:131:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13446:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "13446:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13173:419:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13324:9:16",
														"nodeType": "YulTypedName",
														"src": "13324:9:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13339:4:16",
														"nodeType": "YulTypedName",
														"src": "13339:4:16",
														"type": ""
													}
												],
												"src": "13173:419:16"
											},
											{
												"body": {
													"nativeSrc": "13642:147:16",
													"nodeType": "YulBlock",
													"src": "13642:147:16",
													"statements": [
														{
															"nativeSrc": "13652:25:16",
															"nodeType": "YulAssignment",
															"src": "13652:25:16",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13675:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "13675:1:16"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13657:17:16",
																	"nodeType": "YulIdentifier",
																	"src": "13657:17:16"
																},
																"nativeSrc": "13657:20:16",
																"nodeType": "YulFunctionCall",
																"src": "13657:20:16"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "13652:1:16",
																	"nodeType": "YulIdentifier",
																	"src": "13652:1:16"
																}
															]
														},
														{
															"nativeSrc": "13686:25:16",
															"nodeType": "YulAssignment",
															"src": "13686:25:16",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "13709:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "13709:1:16"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13691:17:16",
																	"nodeType": "YulIdentifier",
																	"src": "13691:17:16"
																},
																"nativeSrc": "13691:20:16",
																"nodeType": "YulFunctionCall",
																"src": "13691:20:16"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "13686:1:16",
																	"nodeType": "YulIdentifier",
																	"src": "13686:1:16"
																}
															]
														},
														{
															"nativeSrc": "13720:16:16",
															"nodeType": "YulAssignment",
															"src": "13720:16:16",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13731:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "13731:1:16"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "13734:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "13734:1:16"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13727:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "13727:3:16"
																},
																"nativeSrc": "13727:9:16",
																"nodeType": "YulFunctionCall",
																"src": "13727:9:16"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "13720:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "13720:3:16"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "13760:22:16",
																"nodeType": "YulBlock",
																"src": "13760:22:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "13762:16:16",
																				"nodeType": "YulIdentifier",
																				"src": "13762:16:16"
																			},
																			"nativeSrc": "13762:18:16",
																			"nodeType": "YulFunctionCall",
																			"src": "13762:18:16"
																		},
																		"nativeSrc": "13762:18:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "13762:18:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13752:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "13752:1:16"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "13755:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "13755:3:16"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "13749:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "13749:2:16"
																},
																"nativeSrc": "13749:10:16",
																"nodeType": "YulFunctionCall",
																"src": "13749:10:16"
															},
															"nativeSrc": "13746:36:16",
															"nodeType": "YulIf",
															"src": "13746:36:16"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "13598:191:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "13629:1:16",
														"nodeType": "YulTypedName",
														"src": "13629:1:16",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "13632:1:16",
														"nodeType": "YulTypedName",
														"src": "13632:1:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "13638:3:16",
														"nodeType": "YulTypedName",
														"src": "13638:3:16",
														"type": ""
													}
												],
												"src": "13598:191:16"
											},
											{
												"body": {
													"nativeSrc": "13836:344:16",
													"nodeType": "YulBlock",
													"src": "13836:344:16",
													"statements": [
														{
															"nativeSrc": "13846:24:16",
															"nodeType": "YulAssignment",
															"src": "13846:24:16",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13868:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "13868:1:16"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_int256",
																	"nativeSrc": "13851:16:16",
																	"nodeType": "YulIdentifier",
																	"src": "13851:16:16"
																},
																"nativeSrc": "13851:19:16",
																"nodeType": "YulFunctionCall",
																"src": "13851:19:16"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "13846:1:16",
																	"nodeType": "YulIdentifier",
																	"src": "13846:1:16"
																}
															]
														},
														{
															"nativeSrc": "13879:24:16",
															"nodeType": "YulAssignment",
															"src": "13879:24:16",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "13901:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "13901:1:16"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_int256",
																	"nativeSrc": "13884:16:16",
																	"nodeType": "YulIdentifier",
																	"src": "13884:16:16"
																},
																"nativeSrc": "13884:19:16",
																"nodeType": "YulFunctionCall",
																"src": "13884:19:16"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "13879:1:16",
																	"nodeType": "YulIdentifier",
																	"src": "13879:1:16"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "13925:22:16",
																"nodeType": "YulBlock",
																"src": "13925:22:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "13927:16:16",
																				"nodeType": "YulIdentifier",
																				"src": "13927:16:16"
																			},
																			"nativeSrc": "13927:18:16",
																			"nodeType": "YulFunctionCall",
																			"src": "13927:18:16"
																		},
																		"nativeSrc": "13927:18:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "13927:18:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "13922:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "13922:1:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "13915:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "13915:6:16"
																},
																"nativeSrc": "13915:9:16",
																"nodeType": "YulFunctionCall",
																"src": "13915:9:16"
															},
															"nativeSrc": "13912:35:16",
															"nodeType": "YulIf",
															"src": "13912:35:16"
														},
														{
															"body": {
																"nativeSrc": "14127:22:16",
																"nodeType": "YulBlock",
																"src": "14127:22:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "14129:16:16",
																				"nodeType": "YulIdentifier",
																				"src": "14129:16:16"
																			},
																			"nativeSrc": "14129:18:16",
																			"nodeType": "YulFunctionCall",
																			"src": "14129:18:16"
																		},
																		"nativeSrc": "14129:18:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "14129:18:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "14016:1:16",
																				"nodeType": "YulIdentifier",
																				"src": "14016:1:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14019:66:16",
																				"nodeType": "YulLiteral",
																				"src": "14019:66:16",
																				"type": "",
																				"value": "0x8000000000000000000000000000000000000000000000000000000000000000"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "14013:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "14013:2:16"
																		},
																		"nativeSrc": "14013:73:16",
																		"nodeType": "YulFunctionCall",
																		"src": "14013:73:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nativeSrc": "14103:1:16",
																				"nodeType": "YulIdentifier",
																				"src": "14103:1:16"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "14110:1:16",
																						"nodeType": "YulLiteral",
																						"src": "14110:1:16",
																						"type": "",
																						"value": "0"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "14113:1:16",
																						"nodeType": "YulLiteral",
																						"src": "14113:1:16",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "14106:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "14106:3:16"
																				},
																				"nativeSrc": "14106:9:16",
																				"nodeType": "YulFunctionCall",
																				"src": "14106:9:16"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "14100:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "14100:2:16"
																		},
																		"nativeSrc": "14100:16:16",
																		"nodeType": "YulFunctionCall",
																		"src": "14100:16:16"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "13996:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "13996:3:16"
																},
																"nativeSrc": "13996:130:16",
																"nodeType": "YulFunctionCall",
																"src": "13996:130:16"
															},
															"nativeSrc": "13993:156:16",
															"nodeType": "YulIf",
															"src": "13993:156:16"
														},
														{
															"nativeSrc": "14159:15:16",
															"nodeType": "YulAssignment",
															"src": "14159:15:16",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14169:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "14169:1:16"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "14172:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "14172:1:16"
																	}
																],
																"functionName": {
																	"name": "sdiv",
																	"nativeSrc": "14164:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "14164:4:16"
																},
																"nativeSrc": "14164:10:16",
																"nodeType": "YulFunctionCall",
																"src": "14164:10:16"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "14159:1:16",
																	"nodeType": "YulIdentifier",
																	"src": "14159:1:16"
																}
															]
														}
													]
												},
												"name": "checked_div_t_int256",
												"nativeSrc": "13795:385:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "13825:1:16",
														"nodeType": "YulTypedName",
														"src": "13825:1:16",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "13828:1:16",
														"nodeType": "YulTypedName",
														"src": "13828:1:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "13834:1:16",
														"nodeType": "YulTypedName",
														"src": "13834:1:16",
														"type": ""
													}
												],
												"src": "13795:385:16"
											},
											{
												"body": {
													"nativeSrc": "14230:61:16",
													"nodeType": "YulBlock",
													"src": "14230:61:16",
													"statements": [
														{
															"nativeSrc": "14240:45:16",
															"nodeType": "YulAssignment",
															"src": "14240:45:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "14255:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "14255:5:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14262:22:16",
																		"nodeType": "YulLiteral",
																		"src": "14262:22:16",
																		"type": "",
																		"value": "0xffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "14251:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "14251:3:16"
																},
																"nativeSrc": "14251:34:16",
																"nodeType": "YulFunctionCall",
																"src": "14251:34:16"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "14240:7:16",
																	"nodeType": "YulIdentifier",
																	"src": "14240:7:16"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint80",
												"nativeSrc": "14186:105:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14212:5:16",
														"nodeType": "YulTypedName",
														"src": "14212:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "14222:7:16",
														"nodeType": "YulTypedName",
														"src": "14222:7:16",
														"type": ""
													}
												],
												"src": "14186:105:16"
											},
											{
												"body": {
													"nativeSrc": "14339:78:16",
													"nodeType": "YulBlock",
													"src": "14339:78:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "14395:16:16",
																"nodeType": "YulBlock",
																"src": "14395:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "14404:1:16",
																					"nodeType": "YulLiteral",
																					"src": "14404:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "14407:1:16",
																					"nodeType": "YulLiteral",
																					"src": "14407:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "14397:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "14397:6:16"
																			},
																			"nativeSrc": "14397:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "14397:12:16"
																		},
																		"nativeSrc": "14397:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "14397:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "14362:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "14362:5:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "14386:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "14386:5:16"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint80",
																					"nativeSrc": "14369:16:16",
																					"nodeType": "YulIdentifier",
																					"src": "14369:16:16"
																				},
																				"nativeSrc": "14369:23:16",
																				"nodeType": "YulFunctionCall",
																				"src": "14369:23:16"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "14359:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "14359:2:16"
																		},
																		"nativeSrc": "14359:34:16",
																		"nodeType": "YulFunctionCall",
																		"src": "14359:34:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "14352:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "14352:6:16"
																},
																"nativeSrc": "14352:42:16",
																"nodeType": "YulFunctionCall",
																"src": "14352:42:16"
															},
															"nativeSrc": "14349:62:16",
															"nodeType": "YulIf",
															"src": "14349:62:16"
														}
													]
												},
												"name": "validator_revert_t_uint80",
												"nativeSrc": "14297:120:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14332:5:16",
														"nodeType": "YulTypedName",
														"src": "14332:5:16",
														"type": ""
													}
												],
												"src": "14297:120:16"
											},
											{
												"body": {
													"nativeSrc": "14485:79:16",
													"nodeType": "YulBlock",
													"src": "14485:79:16",
													"statements": [
														{
															"nativeSrc": "14495:22:16",
															"nodeType": "YulAssignment",
															"src": "14495:22:16",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "14510:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "14510:6:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "14504:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "14504:5:16"
																},
																"nativeSrc": "14504:13:16",
																"nodeType": "YulFunctionCall",
																"src": "14504:13:16"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "14495:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "14495:5:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "14552:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "14552:5:16"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint80",
																	"nativeSrc": "14526:25:16",
																	"nodeType": "YulIdentifier",
																	"src": "14526:25:16"
																},
																"nativeSrc": "14526:32:16",
																"nodeType": "YulFunctionCall",
																"src": "14526:32:16"
															},
															"nativeSrc": "14526:32:16",
															"nodeType": "YulExpressionStatement",
															"src": "14526:32:16"
														}
													]
												},
												"name": "abi_decode_t_uint80_fromMemory",
												"nativeSrc": "14423:141:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "14463:6:16",
														"nodeType": "YulTypedName",
														"src": "14463:6:16",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "14471:3:16",
														"nodeType": "YulTypedName",
														"src": "14471:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "14479:5:16",
														"nodeType": "YulTypedName",
														"src": "14479:5:16",
														"type": ""
													}
												],
												"src": "14423:141:16"
											},
											{
												"body": {
													"nativeSrc": "14612:78:16",
													"nodeType": "YulBlock",
													"src": "14612:78:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "14668:16:16",
																"nodeType": "YulBlock",
																"src": "14668:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "14677:1:16",
																					"nodeType": "YulLiteral",
																					"src": "14677:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "14680:1:16",
																					"nodeType": "YulLiteral",
																					"src": "14680:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "14670:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "14670:6:16"
																			},
																			"nativeSrc": "14670:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "14670:12:16"
																		},
																		"nativeSrc": "14670:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "14670:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "14635:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "14635:5:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "14659:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "14659:5:16"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_int256",
																					"nativeSrc": "14642:16:16",
																					"nodeType": "YulIdentifier",
																					"src": "14642:16:16"
																				},
																				"nativeSrc": "14642:23:16",
																				"nodeType": "YulFunctionCall",
																				"src": "14642:23:16"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "14632:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "14632:2:16"
																		},
																		"nativeSrc": "14632:34:16",
																		"nodeType": "YulFunctionCall",
																		"src": "14632:34:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "14625:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "14625:6:16"
																},
																"nativeSrc": "14625:42:16",
																"nodeType": "YulFunctionCall",
																"src": "14625:42:16"
															},
															"nativeSrc": "14622:62:16",
															"nodeType": "YulIf",
															"src": "14622:62:16"
														}
													]
												},
												"name": "validator_revert_t_int256",
												"nativeSrc": "14570:120:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14605:5:16",
														"nodeType": "YulTypedName",
														"src": "14605:5:16",
														"type": ""
													}
												],
												"src": "14570:120:16"
											},
											{
												"body": {
													"nativeSrc": "14758:79:16",
													"nodeType": "YulBlock",
													"src": "14758:79:16",
													"statements": [
														{
															"nativeSrc": "14768:22:16",
															"nodeType": "YulAssignment",
															"src": "14768:22:16",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "14783:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "14783:6:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "14777:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "14777:5:16"
																},
																"nativeSrc": "14777:13:16",
																"nodeType": "YulFunctionCall",
																"src": "14777:13:16"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "14768:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "14768:5:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "14825:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "14825:5:16"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_int256",
																	"nativeSrc": "14799:25:16",
																	"nodeType": "YulIdentifier",
																	"src": "14799:25:16"
																},
																"nativeSrc": "14799:32:16",
																"nodeType": "YulFunctionCall",
																"src": "14799:32:16"
															},
															"nativeSrc": "14799:32:16",
															"nodeType": "YulExpressionStatement",
															"src": "14799:32:16"
														}
													]
												},
												"name": "abi_decode_t_int256_fromMemory",
												"nativeSrc": "14696:141:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "14736:6:16",
														"nodeType": "YulTypedName",
														"src": "14736:6:16",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "14744:3:16",
														"nodeType": "YulTypedName",
														"src": "14744:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "14752:5:16",
														"nodeType": "YulTypedName",
														"src": "14752:5:16",
														"type": ""
													}
												],
												"src": "14696:141:16"
											},
											{
												"body": {
													"nativeSrc": "14906:80:16",
													"nodeType": "YulBlock",
													"src": "14906:80:16",
													"statements": [
														{
															"nativeSrc": "14916:22:16",
															"nodeType": "YulAssignment",
															"src": "14916:22:16",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "14931:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "14931:6:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "14925:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "14925:5:16"
																},
																"nativeSrc": "14925:13:16",
																"nodeType": "YulFunctionCall",
																"src": "14925:13:16"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "14916:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "14916:5:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "14974:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "14974:5:16"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "14947:26:16",
																	"nodeType": "YulIdentifier",
																	"src": "14947:26:16"
																},
																"nativeSrc": "14947:33:16",
																"nodeType": "YulFunctionCall",
																"src": "14947:33:16"
															},
															"nativeSrc": "14947:33:16",
															"nodeType": "YulExpressionStatement",
															"src": "14947:33:16"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "14843:143:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "14884:6:16",
														"nodeType": "YulTypedName",
														"src": "14884:6:16",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "14892:3:16",
														"nodeType": "YulTypedName",
														"src": "14892:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "14900:5:16",
														"nodeType": "YulTypedName",
														"src": "14900:5:16",
														"type": ""
													}
												],
												"src": "14843:143:16"
											},
											{
												"body": {
													"nativeSrc": "15134:829:16",
													"nodeType": "YulBlock",
													"src": "15134:829:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "15181:83:16",
																"nodeType": "YulBlock",
																"src": "15181:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "15183:77:16",
																				"nodeType": "YulIdentifier",
																				"src": "15183:77:16"
																			},
																			"nativeSrc": "15183:79:16",
																			"nodeType": "YulFunctionCall",
																			"src": "15183:79:16"
																		},
																		"nativeSrc": "15183:79:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "15183:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "15155:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "15155:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15164:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "15164:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15151:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "15151:3:16"
																		},
																		"nativeSrc": "15151:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "15151:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15176:3:16",
																		"nodeType": "YulLiteral",
																		"src": "15176:3:16",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "15147:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "15147:3:16"
																},
																"nativeSrc": "15147:33:16",
																"nodeType": "YulFunctionCall",
																"src": "15147:33:16"
															},
															"nativeSrc": "15144:120:16",
															"nodeType": "YulIf",
															"src": "15144:120:16"
														},
														{
															"nativeSrc": "15274:127:16",
															"nodeType": "YulBlock",
															"src": "15274:127:16",
															"statements": [
																{
																	"nativeSrc": "15289:15:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "15289:15:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "15303:1:16",
																		"nodeType": "YulLiteral",
																		"src": "15303:1:16",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "15293:6:16",
																			"nodeType": "YulTypedName",
																			"src": "15293:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "15318:73:16",
																	"nodeType": "YulAssignment",
																	"src": "15318:73:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "15363:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "15363:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "15374:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "15374:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "15359:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "15359:3:16"
																				},
																				"nativeSrc": "15359:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "15359:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "15383:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "15383:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint80_fromMemory",
																			"nativeSrc": "15328:30:16",
																			"nodeType": "YulIdentifier",
																			"src": "15328:30:16"
																		},
																		"nativeSrc": "15328:63:16",
																		"nodeType": "YulFunctionCall",
																		"src": "15328:63:16"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "15318:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "15318:6:16"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "15411:128:16",
															"nodeType": "YulBlock",
															"src": "15411:128:16",
															"statements": [
																{
																	"nativeSrc": "15426:16:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "15426:16:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "15440:2:16",
																		"nodeType": "YulLiteral",
																		"src": "15440:2:16",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "15430:6:16",
																			"nodeType": "YulTypedName",
																			"src": "15430:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "15456:73:16",
																	"nodeType": "YulAssignment",
																	"src": "15456:73:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "15501:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "15501:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "15512:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "15512:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "15497:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "15497:3:16"
																				},
																				"nativeSrc": "15497:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "15497:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "15521:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "15521:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_int256_fromMemory",
																			"nativeSrc": "15466:30:16",
																			"nodeType": "YulIdentifier",
																			"src": "15466:30:16"
																		},
																		"nativeSrc": "15466:63:16",
																		"nodeType": "YulFunctionCall",
																		"src": "15466:63:16"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "15456:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "15456:6:16"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "15549:129:16",
															"nodeType": "YulBlock",
															"src": "15549:129:16",
															"statements": [
																{
																	"nativeSrc": "15564:16:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "15564:16:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "15578:2:16",
																		"nodeType": "YulLiteral",
																		"src": "15578:2:16",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "15568:6:16",
																			"nodeType": "YulTypedName",
																			"src": "15568:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "15594:74:16",
																	"nodeType": "YulAssignment",
																	"src": "15594:74:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "15640:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "15640:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "15651:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "15651:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "15636:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "15636:3:16"
																				},
																				"nativeSrc": "15636:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "15636:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "15660:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "15660:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "15604:31:16",
																			"nodeType": "YulIdentifier",
																			"src": "15604:31:16"
																		},
																		"nativeSrc": "15604:64:16",
																		"nodeType": "YulFunctionCall",
																		"src": "15604:64:16"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "15594:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "15594:6:16"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "15688:129:16",
															"nodeType": "YulBlock",
															"src": "15688:129:16",
															"statements": [
																{
																	"nativeSrc": "15703:16:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "15703:16:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "15717:2:16",
																		"nodeType": "YulLiteral",
																		"src": "15717:2:16",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "15707:6:16",
																			"nodeType": "YulTypedName",
																			"src": "15707:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "15733:74:16",
																	"nodeType": "YulAssignment",
																	"src": "15733:74:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "15779:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "15779:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "15790:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "15790:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "15775:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "15775:3:16"
																				},
																				"nativeSrc": "15775:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "15775:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "15799:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "15799:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "15743:31:16",
																			"nodeType": "YulIdentifier",
																			"src": "15743:31:16"
																		},
																		"nativeSrc": "15743:64:16",
																		"nodeType": "YulFunctionCall",
																		"src": "15743:64:16"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "15733:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "15733:6:16"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "15827:129:16",
															"nodeType": "YulBlock",
															"src": "15827:129:16",
															"statements": [
																{
																	"nativeSrc": "15842:17:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "15842:17:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "15856:3:16",
																		"nodeType": "YulLiteral",
																		"src": "15856:3:16",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "15846:6:16",
																			"nodeType": "YulTypedName",
																			"src": "15846:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "15873:73:16",
																	"nodeType": "YulAssignment",
																	"src": "15873:73:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "15918:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "15918:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "15929:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "15929:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "15914:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "15914:3:16"
																				},
																				"nativeSrc": "15914:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "15914:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "15938:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "15938:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint80_fromMemory",
																			"nativeSrc": "15883:30:16",
																			"nodeType": "YulIdentifier",
																			"src": "15883:30:16"
																		},
																		"nativeSrc": "15883:63:16",
																		"nodeType": "YulFunctionCall",
																		"src": "15883:63:16"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "15873:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "15873:6:16"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory",
												"nativeSrc": "14992:971:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15072:9:16",
														"nodeType": "YulTypedName",
														"src": "15072:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "15083:7:16",
														"nodeType": "YulTypedName",
														"src": "15083:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "15095:6:16",
														"nodeType": "YulTypedName",
														"src": "15095:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "15103:6:16",
														"nodeType": "YulTypedName",
														"src": "15103:6:16",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "15111:6:16",
														"nodeType": "YulTypedName",
														"src": "15111:6:16",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "15119:6:16",
														"nodeType": "YulTypedName",
														"src": "15119:6:16",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "15127:6:16",
														"nodeType": "YulTypedName",
														"src": "15127:6:16",
														"type": ""
													}
												],
												"src": "14992:971:16"
											},
											{
												"body": {
													"nativeSrc": "16022:32:16",
													"nodeType": "YulBlock",
													"src": "16022:32:16",
													"statements": [
														{
															"nativeSrc": "16032:16:16",
															"nodeType": "YulAssignment",
															"src": "16032:16:16",
															"value": {
																"name": "value",
																"nativeSrc": "16043:5:16",
																"nodeType": "YulIdentifier",
																"src": "16043:5:16"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "16032:7:16",
																	"nodeType": "YulIdentifier",
																	"src": "16032:7:16"
																}
															]
														}
													]
												},
												"name": "cleanup_t_rational_1_by_1",
												"nativeSrc": "15969:85:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "16004:5:16",
														"nodeType": "YulTypedName",
														"src": "16004:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "16014:7:16",
														"nodeType": "YulTypedName",
														"src": "16014:7:16",
														"type": ""
													}
												],
												"src": "15969:85:16"
											},
											{
												"body": {
													"nativeSrc": "16104:57:16",
													"nodeType": "YulBlock",
													"src": "16104:57:16",
													"statements": [
														{
															"nativeSrc": "16114:41:16",
															"nodeType": "YulAssignment",
															"src": "16114:41:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "16129:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "16129:5:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16136:18:16",
																		"nodeType": "YulLiteral",
																		"src": "16136:18:16",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "16125:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "16125:3:16"
																},
																"nativeSrc": "16125:30:16",
																"nodeType": "YulFunctionCall",
																"src": "16125:30:16"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "16114:7:16",
																	"nodeType": "YulIdentifier",
																	"src": "16114:7:16"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint64",
												"nativeSrc": "16060:101:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "16086:5:16",
														"nodeType": "YulTypedName",
														"src": "16086:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "16096:7:16",
														"nodeType": "YulTypedName",
														"src": "16096:7:16",
														"type": ""
													}
												],
												"src": "16060:101:16"
											},
											{
												"body": {
													"nativeSrc": "16199:28:16",
													"nodeType": "YulBlock",
													"src": "16199:28:16",
													"statements": [
														{
															"nativeSrc": "16209:12:16",
															"nodeType": "YulAssignment",
															"src": "16209:12:16",
															"value": {
																"name": "value",
																"nativeSrc": "16216:5:16",
																"nodeType": "YulIdentifier",
																"src": "16216:5:16"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "16209:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "16209:3:16"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "16167:60:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "16185:5:16",
														"nodeType": "YulTypedName",
														"src": "16185:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "16195:3:16",
														"nodeType": "YulTypedName",
														"src": "16195:3:16",
														"type": ""
													}
												],
												"src": "16167:60:16"
											},
											{
												"body": {
													"nativeSrc": "16300:89:16",
													"nodeType": "YulBlock",
													"src": "16300:89:16",
													"statements": [
														{
															"nativeSrc": "16310:73:16",
															"nodeType": "YulAssignment",
															"src": "16310:73:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "16375:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "16375:5:16"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_rational_1_by_1",
																					"nativeSrc": "16349:25:16",
																					"nodeType": "YulIdentifier",
																					"src": "16349:25:16"
																				},
																				"nativeSrc": "16349:32:16",
																				"nodeType": "YulFunctionCall",
																				"src": "16349:32:16"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "16340:8:16",
																			"nodeType": "YulIdentifier",
																			"src": "16340:8:16"
																		},
																		"nativeSrc": "16340:42:16",
																		"nodeType": "YulFunctionCall",
																		"src": "16340:42:16"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint64",
																	"nativeSrc": "16323:16:16",
																	"nodeType": "YulIdentifier",
																	"src": "16323:16:16"
																},
																"nativeSrc": "16323:60:16",
																"nodeType": "YulFunctionCall",
																"src": "16323:60:16"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "16310:9:16",
																	"nodeType": "YulIdentifier",
																	"src": "16310:9:16"
																}
															]
														}
													]
												},
												"name": "convert_t_rational_1_by_1_to_t_uint64",
												"nativeSrc": "16233:156:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "16280:5:16",
														"nodeType": "YulTypedName",
														"src": "16280:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "16290:9:16",
														"nodeType": "YulTypedName",
														"src": "16290:9:16",
														"type": ""
													}
												],
												"src": "16233:156:16"
											},
											{
												"body": {
													"nativeSrc": "16467:73:16",
													"nodeType": "YulBlock",
													"src": "16467:73:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16484:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "16484:3:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "16527:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "16527:5:16"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_rational_1_by_1_to_t_uint64",
																			"nativeSrc": "16489:37:16",
																			"nodeType": "YulIdentifier",
																			"src": "16489:37:16"
																		},
																		"nativeSrc": "16489:44:16",
																		"nodeType": "YulFunctionCall",
																		"src": "16489:44:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16477:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "16477:6:16"
																},
																"nativeSrc": "16477:57:16",
																"nodeType": "YulFunctionCall",
																"src": "16477:57:16"
															},
															"nativeSrc": "16477:57:16",
															"nodeType": "YulExpressionStatement",
															"src": "16477:57:16"
														}
													]
												},
												"name": "abi_encode_t_rational_1_by_1_to_t_uint64_fromStack",
												"nativeSrc": "16395:145:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "16455:5:16",
														"nodeType": "YulTypedName",
														"src": "16455:5:16",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "16462:3:16",
														"nodeType": "YulTypedName",
														"src": "16462:3:16",
														"type": ""
													}
												],
												"src": "16395:145:16"
											},
											{
												"body": {
													"nativeSrc": "16651:131:16",
													"nodeType": "YulBlock",
													"src": "16651:131:16",
													"statements": [
														{
															"nativeSrc": "16661:26:16",
															"nodeType": "YulAssignment",
															"src": "16661:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16673:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "16673:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16684:2:16",
																		"nodeType": "YulLiteral",
																		"src": "16684:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16669:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "16669:3:16"
																},
																"nativeSrc": "16669:18:16",
																"nodeType": "YulFunctionCall",
																"src": "16669:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16661:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "16661:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "16748:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "16748:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16761:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "16761:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16772:1:16",
																				"nodeType": "YulLiteral",
																				"src": "16772:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16757:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "16757:3:16"
																		},
																		"nativeSrc": "16757:17:16",
																		"nodeType": "YulFunctionCall",
																		"src": "16757:17:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_1_by_1_to_t_uint64_fromStack",
																	"nativeSrc": "16697:50:16",
																	"nodeType": "YulIdentifier",
																	"src": "16697:50:16"
																},
																"nativeSrc": "16697:78:16",
																"nodeType": "YulFunctionCall",
																"src": "16697:78:16"
															},
															"nativeSrc": "16697:78:16",
															"nodeType": "YulExpressionStatement",
															"src": "16697:78:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed",
												"nativeSrc": "16546:236:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16623:9:16",
														"nodeType": "YulTypedName",
														"src": "16623:9:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "16635:6:16",
														"nodeType": "YulTypedName",
														"src": "16635:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16646:4:16",
														"nodeType": "YulTypedName",
														"src": "16646:4:16",
														"type": ""
													}
												],
												"src": "16546:236:16"
											},
											{
												"body": {
													"nativeSrc": "16942:288:16",
													"nodeType": "YulBlock",
													"src": "16942:288:16",
													"statements": [
														{
															"nativeSrc": "16952:26:16",
															"nodeType": "YulAssignment",
															"src": "16952:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16964:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "16964:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16975:2:16",
																		"nodeType": "YulLiteral",
																		"src": "16975:2:16",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16960:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "16960:3:16"
																},
																"nativeSrc": "16960:18:16",
																"nodeType": "YulFunctionCall",
																"src": "16960:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16952:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "16952:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "17032:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "17032:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17045:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "17045:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17056:1:16",
																				"nodeType": "YulLiteral",
																				"src": "17056:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17041:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "17041:3:16"
																		},
																		"nativeSrc": "17041:17:16",
																		"nodeType": "YulFunctionCall",
																		"src": "17041:17:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "16988:43:16",
																	"nodeType": "YulIdentifier",
																	"src": "16988:43:16"
																},
																"nativeSrc": "16988:71:16",
																"nodeType": "YulFunctionCall",
																"src": "16988:71:16"
															},
															"nativeSrc": "16988:71:16",
															"nodeType": "YulExpressionStatement",
															"src": "16988:71:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "17113:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "17113:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17126:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "17126:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17137:2:16",
																				"nodeType": "YulLiteral",
																				"src": "17137:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17122:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "17122:3:16"
																		},
																		"nativeSrc": "17122:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "17122:18:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "17069:43:16",
																	"nodeType": "YulIdentifier",
																	"src": "17069:43:16"
																},
																"nativeSrc": "17069:72:16",
																"nodeType": "YulFunctionCall",
																"src": "17069:72:16"
															},
															"nativeSrc": "17069:72:16",
															"nodeType": "YulExpressionStatement",
															"src": "17069:72:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "17195:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "17195:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17208:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "17208:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17219:2:16",
																				"nodeType": "YulLiteral",
																				"src": "17219:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17204:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "17204:3:16"
																		},
																		"nativeSrc": "17204:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "17204:18:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "17151:43:16",
																	"nodeType": "YulIdentifier",
																	"src": "17151:43:16"
																},
																"nativeSrc": "17151:72:16",
																"nodeType": "YulFunctionCall",
																"src": "17151:72:16"
															},
															"nativeSrc": "17151:72:16",
															"nodeType": "YulExpressionStatement",
															"src": "17151:72:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "16788:442:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16898:9:16",
														"nodeType": "YulTypedName",
														"src": "16898:9:16",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "16910:6:16",
														"nodeType": "YulTypedName",
														"src": "16910:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "16918:6:16",
														"nodeType": "YulTypedName",
														"src": "16918:6:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "16926:6:16",
														"nodeType": "YulTypedName",
														"src": "16926:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16937:4:16",
														"nodeType": "YulTypedName",
														"src": "16937:4:16",
														"type": ""
													}
												],
												"src": "16788:442:16"
											},
											{
												"body": {
													"nativeSrc": "17279:79:16",
													"nodeType": "YulBlock",
													"src": "17279:79:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "17336:16:16",
																"nodeType": "YulBlock",
																"src": "17336:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "17345:1:16",
																					"nodeType": "YulLiteral",
																					"src": "17345:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "17348:1:16",
																					"nodeType": "YulLiteral",
																					"src": "17348:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "17338:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "17338:6:16"
																			},
																			"nativeSrc": "17338:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "17338:12:16"
																		},
																		"nativeSrc": "17338:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "17338:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "17302:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "17302:5:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "17327:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "17327:5:16"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nativeSrc": "17309:17:16",
																					"nodeType": "YulIdentifier",
																					"src": "17309:17:16"
																				},
																				"nativeSrc": "17309:24:16",
																				"nodeType": "YulFunctionCall",
																				"src": "17309:24:16"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "17299:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "17299:2:16"
																		},
																		"nativeSrc": "17299:35:16",
																		"nodeType": "YulFunctionCall",
																		"src": "17299:35:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "17292:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "17292:6:16"
																},
																"nativeSrc": "17292:43:16",
																"nodeType": "YulFunctionCall",
																"src": "17292:43:16"
															},
															"nativeSrc": "17289:63:16",
															"nodeType": "YulIf",
															"src": "17289:63:16"
														}
													]
												},
												"name": "validator_revert_t_bytes32",
												"nativeSrc": "17236:122:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "17272:5:16",
														"nodeType": "YulTypedName",
														"src": "17272:5:16",
														"type": ""
													}
												],
												"src": "17236:122:16"
											},
											{
												"body": {
													"nativeSrc": "17427:80:16",
													"nodeType": "YulBlock",
													"src": "17427:80:16",
													"statements": [
														{
															"nativeSrc": "17437:22:16",
															"nodeType": "YulAssignment",
															"src": "17437:22:16",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "17452:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "17452:6:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "17446:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "17446:5:16"
																},
																"nativeSrc": "17446:13:16",
																"nodeType": "YulFunctionCall",
																"src": "17446:13:16"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "17437:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "17437:5:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "17495:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "17495:5:16"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nativeSrc": "17468:26:16",
																	"nodeType": "YulIdentifier",
																	"src": "17468:26:16"
																},
																"nativeSrc": "17468:33:16",
																"nodeType": "YulFunctionCall",
																"src": "17468:33:16"
															},
															"nativeSrc": "17468:33:16",
															"nodeType": "YulExpressionStatement",
															"src": "17468:33:16"
														}
													]
												},
												"name": "abi_decode_t_bytes32_fromMemory",
												"nativeSrc": "17364:143:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "17405:6:16",
														"nodeType": "YulTypedName",
														"src": "17405:6:16",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "17413:3:16",
														"nodeType": "YulTypedName",
														"src": "17413:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "17421:5:16",
														"nodeType": "YulTypedName",
														"src": "17421:5:16",
														"type": ""
													}
												],
												"src": "17364:143:16"
											},
											{
												"body": {
													"nativeSrc": "17590:274:16",
													"nodeType": "YulBlock",
													"src": "17590:274:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "17636:83:16",
																"nodeType": "YulBlock",
																"src": "17636:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "17638:77:16",
																				"nodeType": "YulIdentifier",
																				"src": "17638:77:16"
																			},
																			"nativeSrc": "17638:79:16",
																			"nodeType": "YulFunctionCall",
																			"src": "17638:79:16"
																		},
																		"nativeSrc": "17638:79:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "17638:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "17611:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "17611:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "17620:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "17620:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "17607:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "17607:3:16"
																		},
																		"nativeSrc": "17607:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "17607:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17632:2:16",
																		"nodeType": "YulLiteral",
																		"src": "17632:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "17603:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "17603:3:16"
																},
																"nativeSrc": "17603:32:16",
																"nodeType": "YulFunctionCall",
																"src": "17603:32:16"
															},
															"nativeSrc": "17600:119:16",
															"nodeType": "YulIf",
															"src": "17600:119:16"
														},
														{
															"nativeSrc": "17729:128:16",
															"nodeType": "YulBlock",
															"src": "17729:128:16",
															"statements": [
																{
																	"nativeSrc": "17744:15:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "17744:15:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "17758:1:16",
																		"nodeType": "YulLiteral",
																		"src": "17758:1:16",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "17748:6:16",
																			"nodeType": "YulTypedName",
																			"src": "17748:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "17773:74:16",
																	"nodeType": "YulAssignment",
																	"src": "17773:74:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "17819:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "17819:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "17830:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "17830:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "17815:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "17815:3:16"
																				},
																				"nativeSrc": "17815:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "17815:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "17839:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "17839:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32_fromMemory",
																			"nativeSrc": "17783:31:16",
																			"nodeType": "YulIdentifier",
																			"src": "17783:31:16"
																		},
																		"nativeSrc": "17783:64:16",
																		"nodeType": "YulFunctionCall",
																		"src": "17783:64:16"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "17773:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "17773:6:16"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32_fromMemory",
												"nativeSrc": "17513:351:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17560:9:16",
														"nodeType": "YulTypedName",
														"src": "17560:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "17571:7:16",
														"nodeType": "YulTypedName",
														"src": "17571:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "17583:6:16",
														"nodeType": "YulTypedName",
														"src": "17583:6:16",
														"type": ""
													}
												],
												"src": "17513:351:16"
											},
											{
												"body": {
													"nativeSrc": "17924:87:16",
													"nodeType": "YulBlock",
													"src": "17924:87:16",
													"statements": [
														{
															"nativeSrc": "17934:11:16",
															"nodeType": "YulAssignment",
															"src": "17934:11:16",
															"value": {
																"name": "ptr",
																"nativeSrc": "17942:3:16",
																"nodeType": "YulIdentifier",
																"src": "17942:3:16"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "17934:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "17934:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17962:1:16",
																		"nodeType": "YulLiteral",
																		"src": "17962:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "17965:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "17965:3:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17955:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "17955:6:16"
																},
																"nativeSrc": "17955:14:16",
																"nodeType": "YulFunctionCall",
																"src": "17955:14:16"
															},
															"nativeSrc": "17955:14:16",
															"nodeType": "YulExpressionStatement",
															"src": "17955:14:16"
														},
														{
															"nativeSrc": "17978:26:16",
															"nodeType": "YulAssignment",
															"src": "17978:26:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17996:1:16",
																		"nodeType": "YulLiteral",
																		"src": "17996:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17999:4:16",
																		"nodeType": "YulLiteral",
																		"src": "17999:4:16",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "17986:9:16",
																	"nodeType": "YulIdentifier",
																	"src": "17986:9:16"
																},
																"nativeSrc": "17986:18:16",
																"nodeType": "YulFunctionCall",
																"src": "17986:18:16"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "17978:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "17978:4:16"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "17870:141:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "17911:3:16",
														"nodeType": "YulTypedName",
														"src": "17911:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "17919:4:16",
														"nodeType": "YulTypedName",
														"src": "17919:4:16",
														"type": ""
													}
												],
												"src": "17870:141:16"
											},
											{
												"body": {
													"nativeSrc": "18061:49:16",
													"nodeType": "YulBlock",
													"src": "18061:49:16",
													"statements": [
														{
															"nativeSrc": "18071:33:16",
															"nodeType": "YulAssignment",
															"src": "18071:33:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "18089:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "18089:5:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18096:2:16",
																				"nodeType": "YulLiteral",
																				"src": "18096:2:16",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18085:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "18085:3:16"
																		},
																		"nativeSrc": "18085:14:16",
																		"nodeType": "YulFunctionCall",
																		"src": "18085:14:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18101:2:16",
																		"nodeType": "YulLiteral",
																		"src": "18101:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "18081:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "18081:3:16"
																},
																"nativeSrc": "18081:23:16",
																"nodeType": "YulFunctionCall",
																"src": "18081:23:16"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "18071:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "18071:6:16"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "18017:93:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "18044:5:16",
														"nodeType": "YulTypedName",
														"src": "18044:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "18054:6:16",
														"nodeType": "YulTypedName",
														"src": "18054:6:16",
														"type": ""
													}
												],
												"src": "18017:93:16"
											},
											{
												"body": {
													"nativeSrc": "18169:54:16",
													"nodeType": "YulBlock",
													"src": "18169:54:16",
													"statements": [
														{
															"nativeSrc": "18179:37:16",
															"nodeType": "YulAssignment",
															"src": "18179:37:16",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "18204:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "18204:4:16"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "18210:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "18210:5:16"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "18200:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "18200:3:16"
																},
																"nativeSrc": "18200:16:16",
																"nodeType": "YulFunctionCall",
																"src": "18200:16:16"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "18179:8:16",
																	"nodeType": "YulIdentifier",
																	"src": "18179:8:16"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "18116:107:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "18144:4:16",
														"nodeType": "YulTypedName",
														"src": "18144:4:16",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "18150:5:16",
														"nodeType": "YulTypedName",
														"src": "18150:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "18160:8:16",
														"nodeType": "YulTypedName",
														"src": "18160:8:16",
														"type": ""
													}
												],
												"src": "18116:107:16"
											},
											{
												"body": {
													"nativeSrc": "18305:317:16",
													"nodeType": "YulBlock",
													"src": "18305:317:16",
													"statements": [
														{
															"nativeSrc": "18315:35:16",
															"nodeType": "YulVariableDeclaration",
															"src": "18315:35:16",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "18336:10:16",
																		"nodeType": "YulIdentifier",
																		"src": "18336:10:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18348:1:16",
																		"nodeType": "YulLiteral",
																		"src": "18348:1:16",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "18332:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "18332:3:16"
																},
																"nativeSrc": "18332:18:16",
																"nodeType": "YulFunctionCall",
																"src": "18332:18:16"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "18319:9:16",
																	"nodeType": "YulTypedName",
																	"src": "18319:9:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "18359:109:16",
															"nodeType": "YulVariableDeclaration",
															"src": "18359:109:16",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "18390:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "18390:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18401:66:16",
																		"nodeType": "YulLiteral",
																		"src": "18401:66:16",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "18371:18:16",
																	"nodeType": "YulIdentifier",
																	"src": "18371:18:16"
																},
																"nativeSrc": "18371:97:16",
																"nodeType": "YulFunctionCall",
																"src": "18371:97:16"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "18363:4:16",
																	"nodeType": "YulTypedName",
																	"src": "18363:4:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "18477:51:16",
															"nodeType": "YulAssignment",
															"src": "18477:51:16",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "18508:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "18508:9:16"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "18519:8:16",
																		"nodeType": "YulIdentifier",
																		"src": "18519:8:16"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "18489:18:16",
																	"nodeType": "YulIdentifier",
																	"src": "18489:18:16"
																},
																"nativeSrc": "18489:39:16",
																"nodeType": "YulFunctionCall",
																"src": "18489:39:16"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "18477:8:16",
																	"nodeType": "YulIdentifier",
																	"src": "18477:8:16"
																}
															]
														},
														{
															"nativeSrc": "18537:30:16",
															"nodeType": "YulAssignment",
															"src": "18537:30:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "18550:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "18550:5:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "18561:4:16",
																				"nodeType": "YulIdentifier",
																				"src": "18561:4:16"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "18557:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "18557:3:16"
																		},
																		"nativeSrc": "18557:9:16",
																		"nodeType": "YulFunctionCall",
																		"src": "18557:9:16"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "18546:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "18546:3:16"
																},
																"nativeSrc": "18546:21:16",
																"nodeType": "YulFunctionCall",
																"src": "18546:21:16"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "18537:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "18537:5:16"
																}
															]
														},
														{
															"nativeSrc": "18576:40:16",
															"nodeType": "YulAssignment",
															"src": "18576:40:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "18589:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "18589:5:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "18600:8:16",
																				"nodeType": "YulIdentifier",
																				"src": "18600:8:16"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "18610:4:16",
																				"nodeType": "YulIdentifier",
																				"src": "18610:4:16"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "18596:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "18596:3:16"
																		},
																		"nativeSrc": "18596:19:16",
																		"nodeType": "YulFunctionCall",
																		"src": "18596:19:16"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "18586:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "18586:2:16"
																},
																"nativeSrc": "18586:30:16",
																"nodeType": "YulFunctionCall",
																"src": "18586:30:16"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "18576:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "18576:6:16"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "18229:393:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "18266:5:16",
														"nodeType": "YulTypedName",
														"src": "18266:5:16",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "18273:10:16",
														"nodeType": "YulTypedName",
														"src": "18273:10:16",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "18285:8:16",
														"nodeType": "YulTypedName",
														"src": "18285:8:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "18298:6:16",
														"nodeType": "YulTypedName",
														"src": "18298:6:16",
														"type": ""
													}
												],
												"src": "18229:393:16"
											},
											{
												"body": {
													"nativeSrc": "18688:82:16",
													"nodeType": "YulBlock",
													"src": "18688:82:16",
													"statements": [
														{
															"nativeSrc": "18698:66:16",
															"nodeType": "YulAssignment",
															"src": "18698:66:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "18756:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "18756:5:16"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "18738:17:16",
																					"nodeType": "YulIdentifier",
																					"src": "18738:17:16"
																				},
																				"nativeSrc": "18738:24:16",
																				"nodeType": "YulFunctionCall",
																				"src": "18738:24:16"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "18729:8:16",
																			"nodeType": "YulIdentifier",
																			"src": "18729:8:16"
																		},
																		"nativeSrc": "18729:34:16",
																		"nodeType": "YulFunctionCall",
																		"src": "18729:34:16"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "18711:17:16",
																	"nodeType": "YulIdentifier",
																	"src": "18711:17:16"
																},
																"nativeSrc": "18711:53:16",
																"nodeType": "YulFunctionCall",
																"src": "18711:53:16"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "18698:9:16",
																	"nodeType": "YulIdentifier",
																	"src": "18698:9:16"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "18628:142:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "18668:5:16",
														"nodeType": "YulTypedName",
														"src": "18668:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "18678:9:16",
														"nodeType": "YulTypedName",
														"src": "18678:9:16",
														"type": ""
													}
												],
												"src": "18628:142:16"
											},
											{
												"body": {
													"nativeSrc": "18823:28:16",
													"nodeType": "YulBlock",
													"src": "18823:28:16",
													"statements": [
														{
															"nativeSrc": "18833:12:16",
															"nodeType": "YulAssignment",
															"src": "18833:12:16",
															"value": {
																"name": "value",
																"nativeSrc": "18840:5:16",
																"nodeType": "YulIdentifier",
																"src": "18840:5:16"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "18833:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "18833:3:16"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "18776:75:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "18809:5:16",
														"nodeType": "YulTypedName",
														"src": "18809:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "18819:3:16",
														"nodeType": "YulTypedName",
														"src": "18819:3:16",
														"type": ""
													}
												],
												"src": "18776:75:16"
											},
											{
												"body": {
													"nativeSrc": "18933:193:16",
													"nodeType": "YulBlock",
													"src": "18933:193:16",
													"statements": [
														{
															"nativeSrc": "18943:63:16",
															"nodeType": "YulVariableDeclaration",
															"src": "18943:63:16",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "18998:7:16",
																		"nodeType": "YulIdentifier",
																		"src": "18998:7:16"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "18967:30:16",
																	"nodeType": "YulIdentifier",
																	"src": "18967:30:16"
																},
																"nativeSrc": "18967:39:16",
																"nodeType": "YulFunctionCall",
																"src": "18967:39:16"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "18947:16:16",
																	"nodeType": "YulTypedName",
																	"src": "18947:16:16",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "19022:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "19022:4:16"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "19062:4:16",
																						"nodeType": "YulIdentifier",
																						"src": "19062:4:16"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "19056:5:16",
																					"nodeType": "YulIdentifier",
																					"src": "19056:5:16"
																				},
																				"nativeSrc": "19056:11:16",
																				"nodeType": "YulFunctionCall",
																				"src": "19056:11:16"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "19069:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "19069:6:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "19101:16:16",
																						"nodeType": "YulIdentifier",
																						"src": "19101:16:16"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "19077:23:16",
																					"nodeType": "YulIdentifier",
																					"src": "19077:23:16"
																				},
																				"nativeSrc": "19077:41:16",
																				"nodeType": "YulFunctionCall",
																				"src": "19077:41:16"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "19028:27:16",
																			"nodeType": "YulIdentifier",
																			"src": "19028:27:16"
																		},
																		"nativeSrc": "19028:91:16",
																		"nodeType": "YulFunctionCall",
																		"src": "19028:91:16"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "19015:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "19015:6:16"
																},
																"nativeSrc": "19015:105:16",
																"nodeType": "YulFunctionCall",
																"src": "19015:105:16"
															},
															"nativeSrc": "19015:105:16",
															"nodeType": "YulExpressionStatement",
															"src": "19015:105:16"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "18857:269:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "18910:4:16",
														"nodeType": "YulTypedName",
														"src": "18910:4:16",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "18916:6:16",
														"nodeType": "YulTypedName",
														"src": "18916:6:16",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "18924:7:16",
														"nodeType": "YulTypedName",
														"src": "18924:7:16",
														"type": ""
													}
												],
												"src": "18857:269:16"
											},
											{
												"body": {
													"nativeSrc": "19181:24:16",
													"nodeType": "YulBlock",
													"src": "19181:24:16",
													"statements": [
														{
															"nativeSrc": "19191:8:16",
															"nodeType": "YulAssignment",
															"src": "19191:8:16",
															"value": {
																"kind": "number",
																"nativeSrc": "19198:1:16",
																"nodeType": "YulLiteral",
																"src": "19198:1:16",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "19191:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "19191:3:16"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "19132:73:16",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "19177:3:16",
														"nodeType": "YulTypedName",
														"src": "19177:3:16",
														"type": ""
													}
												],
												"src": "19132:73:16"
											},
											{
												"body": {
													"nativeSrc": "19264:136:16",
													"nodeType": "YulBlock",
													"src": "19264:136:16",
													"statements": [
														{
															"nativeSrc": "19274:46:16",
															"nodeType": "YulVariableDeclaration",
															"src": "19274:46:16",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "19288:30:16",
																	"nodeType": "YulIdentifier",
																	"src": "19288:30:16"
																},
																"nativeSrc": "19288:32:16",
																"nodeType": "YulFunctionCall",
																"src": "19288:32:16"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "19278:6:16",
																	"nodeType": "YulTypedName",
																	"src": "19278:6:16",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "19373:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "19373:4:16"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "19379:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "19379:6:16"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "19387:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "19387:6:16"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "19329:43:16",
																	"nodeType": "YulIdentifier",
																	"src": "19329:43:16"
																},
																"nativeSrc": "19329:65:16",
																"nodeType": "YulFunctionCall",
																"src": "19329:65:16"
															},
															"nativeSrc": "19329:65:16",
															"nodeType": "YulExpressionStatement",
															"src": "19329:65:16"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "19211:189:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "19250:4:16",
														"nodeType": "YulTypedName",
														"src": "19250:4:16",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "19256:6:16",
														"nodeType": "YulTypedName",
														"src": "19256:6:16",
														"type": ""
													}
												],
												"src": "19211:189:16"
											},
											{
												"body": {
													"nativeSrc": "19456:136:16",
													"nodeType": "YulBlock",
													"src": "19456:136:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "19523:63:16",
																"nodeType": "YulBlock",
																"src": "19523:63:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "19567:5:16",
																					"nodeType": "YulIdentifier",
																					"src": "19567:5:16"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "19574:1:16",
																					"nodeType": "YulLiteral",
																					"src": "19574:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "19537:29:16",
																				"nodeType": "YulIdentifier",
																				"src": "19537:29:16"
																			},
																			"nativeSrc": "19537:39:16",
																			"nodeType": "YulFunctionCall",
																			"src": "19537:39:16"
																		},
																		"nativeSrc": "19537:39:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "19537:39:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "19476:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "19476:5:16"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "19483:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "19483:3:16"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "19473:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "19473:2:16"
																},
																"nativeSrc": "19473:14:16",
																"nodeType": "YulFunctionCall",
																"src": "19473:14:16"
															},
															"nativeSrc": "19466:120:16",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "19488:26:16",
																"nodeType": "YulBlock",
																"src": "19488:26:16",
																"statements": [
																	{
																		"nativeSrc": "19490:22:16",
																		"nodeType": "YulAssignment",
																		"src": "19490:22:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "19503:5:16",
																					"nodeType": "YulIdentifier",
																					"src": "19503:5:16"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "19510:1:16",
																					"nodeType": "YulLiteral",
																					"src": "19510:1:16",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "19499:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "19499:3:16"
																			},
																			"nativeSrc": "19499:13:16",
																			"nodeType": "YulFunctionCall",
																			"src": "19499:13:16"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "19490:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "19490:5:16"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "19470:2:16",
																"nodeType": "YulBlock",
																"src": "19470:2:16",
																"statements": []
															},
															"src": "19466:120:16"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "19406:186:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "19444:5:16",
														"nodeType": "YulTypedName",
														"src": "19444:5:16",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "19451:3:16",
														"nodeType": "YulTypedName",
														"src": "19451:3:16",
														"type": ""
													}
												],
												"src": "19406:186:16"
											},
											{
												"body": {
													"nativeSrc": "19677:464:16",
													"nodeType": "YulBlock",
													"src": "19677:464:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "19703:431:16",
																"nodeType": "YulBlock",
																"src": "19703:431:16",
																"statements": [
																	{
																		"nativeSrc": "19717:54:16",
																		"nodeType": "YulVariableDeclaration",
																		"src": "19717:54:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "19765:5:16",
																					"nodeType": "YulIdentifier",
																					"src": "19765:5:16"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "19733:31:16",
																				"nodeType": "YulIdentifier",
																				"src": "19733:31:16"
																			},
																			"nativeSrc": "19733:38:16",
																			"nodeType": "YulFunctionCall",
																			"src": "19733:38:16"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "19721:8:16",
																				"nodeType": "YulTypedName",
																				"src": "19721:8:16",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "19784:63:16",
																		"nodeType": "YulVariableDeclaration",
																		"src": "19784:63:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "19807:8:16",
																					"nodeType": "YulIdentifier",
																					"src": "19807:8:16"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "19835:10:16",
																							"nodeType": "YulIdentifier",
																							"src": "19835:10:16"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "19817:17:16",
																						"nodeType": "YulIdentifier",
																						"src": "19817:17:16"
																					},
																					"nativeSrc": "19817:29:16",
																					"nodeType": "YulFunctionCall",
																					"src": "19817:29:16"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "19803:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "19803:3:16"
																			},
																			"nativeSrc": "19803:44:16",
																			"nodeType": "YulFunctionCall",
																			"src": "19803:44:16"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "19788:11:16",
																				"nodeType": "YulTypedName",
																				"src": "19788:11:16",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "20004:27:16",
																			"nodeType": "YulBlock",
																			"src": "20004:27:16",
																			"statements": [
																				{
																					"nativeSrc": "20006:23:16",
																					"nodeType": "YulAssignment",
																					"src": "20006:23:16",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "20021:8:16",
																						"nodeType": "YulIdentifier",
																						"src": "20021:8:16"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "20006:11:16",
																							"nodeType": "YulIdentifier",
																							"src": "20006:11:16"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "19988:10:16",
																					"nodeType": "YulIdentifier",
																					"src": "19988:10:16"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "20000:2:16",
																					"nodeType": "YulLiteral",
																					"src": "20000:2:16",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "19985:2:16",
																				"nodeType": "YulIdentifier",
																				"src": "19985:2:16"
																			},
																			"nativeSrc": "19985:18:16",
																			"nodeType": "YulFunctionCall",
																			"src": "19985:18:16"
																		},
																		"nativeSrc": "19982:49:16",
																		"nodeType": "YulIf",
																		"src": "19982:49:16"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "20073:11:16",
																					"nodeType": "YulIdentifier",
																					"src": "20073:11:16"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "20090:8:16",
																							"nodeType": "YulIdentifier",
																							"src": "20090:8:16"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "20118:3:16",
																									"nodeType": "YulIdentifier",
																									"src": "20118:3:16"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "20100:17:16",
																								"nodeType": "YulIdentifier",
																								"src": "20100:17:16"
																							},
																							"nativeSrc": "20100:22:16",
																							"nodeType": "YulFunctionCall",
																							"src": "20100:22:16"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "20086:3:16",
																						"nodeType": "YulIdentifier",
																						"src": "20086:3:16"
																					},
																					"nativeSrc": "20086:37:16",
																					"nodeType": "YulFunctionCall",
																					"src": "20086:37:16"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "20044:28:16",
																				"nodeType": "YulIdentifier",
																				"src": "20044:28:16"
																			},
																			"nativeSrc": "20044:80:16",
																			"nodeType": "YulFunctionCall",
																			"src": "20044:80:16"
																		},
																		"nativeSrc": "20044:80:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "20044:80:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "19694:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "19694:3:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19699:2:16",
																		"nodeType": "YulLiteral",
																		"src": "19699:2:16",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "19691:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "19691:2:16"
																},
																"nativeSrc": "19691:11:16",
																"nodeType": "YulFunctionCall",
																"src": "19691:11:16"
															},
															"nativeSrc": "19688:446:16",
															"nodeType": "YulIf",
															"src": "19688:446:16"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "19598:543:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "19653:5:16",
														"nodeType": "YulTypedName",
														"src": "19653:5:16",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "19660:3:16",
														"nodeType": "YulTypedName",
														"src": "19660:3:16",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "19665:10:16",
														"nodeType": "YulTypedName",
														"src": "19665:10:16",
														"type": ""
													}
												],
												"src": "19598:543:16"
											},
											{
												"body": {
													"nativeSrc": "20210:54:16",
													"nodeType": "YulBlock",
													"src": "20210:54:16",
													"statements": [
														{
															"nativeSrc": "20220:37:16",
															"nodeType": "YulAssignment",
															"src": "20220:37:16",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "20245:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "20245:4:16"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "20251:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "20251:5:16"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "20241:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "20241:3:16"
																},
																"nativeSrc": "20241:16:16",
																"nodeType": "YulFunctionCall",
																"src": "20241:16:16"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "20220:8:16",
																	"nodeType": "YulIdentifier",
																	"src": "20220:8:16"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "20147:117:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "20185:4:16",
														"nodeType": "YulTypedName",
														"src": "20185:4:16",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "20191:5:16",
														"nodeType": "YulTypedName",
														"src": "20191:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "20201:8:16",
														"nodeType": "YulTypedName",
														"src": "20201:8:16",
														"type": ""
													}
												],
												"src": "20147:117:16"
											},
											{
												"body": {
													"nativeSrc": "20321:118:16",
													"nodeType": "YulBlock",
													"src": "20321:118:16",
													"statements": [
														{
															"nativeSrc": "20331:68:16",
															"nodeType": "YulVariableDeclaration",
															"src": "20331:68:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "20380:1:16",
																						"nodeType": "YulLiteral",
																						"src": "20380:1:16",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "20383:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "20383:5:16"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "20376:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "20376:3:16"
																				},
																				"nativeSrc": "20376:13:16",
																				"nodeType": "YulFunctionCall",
																				"src": "20376:13:16"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "20395:1:16",
																						"nodeType": "YulLiteral",
																						"src": "20395:1:16",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "20391:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "20391:3:16"
																				},
																				"nativeSrc": "20391:6:16",
																				"nodeType": "YulFunctionCall",
																				"src": "20391:6:16"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "20347:28:16",
																			"nodeType": "YulIdentifier",
																			"src": "20347:28:16"
																		},
																		"nativeSrc": "20347:51:16",
																		"nodeType": "YulFunctionCall",
																		"src": "20347:51:16"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "20343:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "20343:3:16"
																},
																"nativeSrc": "20343:56:16",
																"nodeType": "YulFunctionCall",
																"src": "20343:56:16"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "20335:4:16",
																	"nodeType": "YulTypedName",
																	"src": "20335:4:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "20408:25:16",
															"nodeType": "YulAssignment",
															"src": "20408:25:16",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "20422:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "20422:4:16"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "20428:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "20428:4:16"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "20418:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "20418:3:16"
																},
																"nativeSrc": "20418:15:16",
																"nodeType": "YulFunctionCall",
																"src": "20418:15:16"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "20408:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "20408:6:16"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "20270:169:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "20298:4:16",
														"nodeType": "YulTypedName",
														"src": "20298:4:16",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "20304:5:16",
														"nodeType": "YulTypedName",
														"src": "20304:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "20314:6:16",
														"nodeType": "YulTypedName",
														"src": "20314:6:16",
														"type": ""
													}
												],
												"src": "20270:169:16"
											},
											{
												"body": {
													"nativeSrc": "20525:214:16",
													"nodeType": "YulBlock",
													"src": "20525:214:16",
													"statements": [
														{
															"nativeSrc": "20658:37:16",
															"nodeType": "YulAssignment",
															"src": "20658:37:16",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "20685:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "20685:4:16"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "20691:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "20691:3:16"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "20666:18:16",
																	"nodeType": "YulIdentifier",
																	"src": "20666:18:16"
																},
																"nativeSrc": "20666:29:16",
																"nodeType": "YulFunctionCall",
																"src": "20666:29:16"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "20658:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "20658:4:16"
																}
															]
														},
														{
															"nativeSrc": "20704:29:16",
															"nodeType": "YulAssignment",
															"src": "20704:29:16",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "20715:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "20715:4:16"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "20725:1:16",
																				"nodeType": "YulLiteral",
																				"src": "20725:1:16",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "20728:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "20728:3:16"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "20721:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "20721:3:16"
																		},
																		"nativeSrc": "20721:11:16",
																		"nodeType": "YulFunctionCall",
																		"src": "20721:11:16"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "20712:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "20712:2:16"
																},
																"nativeSrc": "20712:21:16",
																"nodeType": "YulFunctionCall",
																"src": "20712:21:16"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "20704:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "20704:4:16"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "20444:295:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "20506:4:16",
														"nodeType": "YulTypedName",
														"src": "20506:4:16",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "20512:3:16",
														"nodeType": "YulTypedName",
														"src": "20512:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "20520:4:16",
														"nodeType": "YulTypedName",
														"src": "20520:4:16",
														"type": ""
													}
												],
												"src": "20444:295:16"
											},
											{
												"body": {
													"nativeSrc": "20836:1303:16",
													"nodeType": "YulBlock",
													"src": "20836:1303:16",
													"statements": [
														{
															"nativeSrc": "20847:51:16",
															"nodeType": "YulVariableDeclaration",
															"src": "20847:51:16",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "20894:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "20894:3:16"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "20861:32:16",
																	"nodeType": "YulIdentifier",
																	"src": "20861:32:16"
																},
																"nativeSrc": "20861:37:16",
																"nodeType": "YulFunctionCall",
																"src": "20861:37:16"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "20851:6:16",
																	"nodeType": "YulTypedName",
																	"src": "20851:6:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "20983:22:16",
																"nodeType": "YulBlock",
																"src": "20983:22:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "20985:16:16",
																				"nodeType": "YulIdentifier",
																				"src": "20985:16:16"
																			},
																			"nativeSrc": "20985:18:16",
																			"nodeType": "YulFunctionCall",
																			"src": "20985:18:16"
																		},
																		"nativeSrc": "20985:18:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "20985:18:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "20955:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "20955:6:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20963:18:16",
																		"nodeType": "YulLiteral",
																		"src": "20963:18:16",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "20952:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "20952:2:16"
																},
																"nativeSrc": "20952:30:16",
																"nodeType": "YulFunctionCall",
																"src": "20952:30:16"
															},
															"nativeSrc": "20949:56:16",
															"nodeType": "YulIf",
															"src": "20949:56:16"
														},
														{
															"nativeSrc": "21015:52:16",
															"nodeType": "YulVariableDeclaration",
															"src": "21015:52:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "21061:4:16",
																				"nodeType": "YulIdentifier",
																				"src": "21061:4:16"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "21055:5:16",
																			"nodeType": "YulIdentifier",
																			"src": "21055:5:16"
																		},
																		"nativeSrc": "21055:11:16",
																		"nodeType": "YulFunctionCall",
																		"src": "21055:11:16"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "21029:25:16",
																	"nodeType": "YulIdentifier",
																	"src": "21029:25:16"
																},
																"nativeSrc": "21029:38:16",
																"nodeType": "YulFunctionCall",
																"src": "21029:38:16"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "21019:6:16",
																	"nodeType": "YulTypedName",
																	"src": "21019:6:16",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "21160:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "21160:4:16"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "21166:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "21166:6:16"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "21174:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "21174:6:16"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "21114:45:16",
																	"nodeType": "YulIdentifier",
																	"src": "21114:45:16"
																},
																"nativeSrc": "21114:67:16",
																"nodeType": "YulFunctionCall",
																"src": "21114:67:16"
															},
															"nativeSrc": "21114:67:16",
															"nodeType": "YulExpressionStatement",
															"src": "21114:67:16"
														},
														{
															"nativeSrc": "21191:18:16",
															"nodeType": "YulVariableDeclaration",
															"src": "21191:18:16",
															"value": {
																"kind": "number",
																"nativeSrc": "21208:1:16",
																"nodeType": "YulLiteral",
																"src": "21208:1:16",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "21195:9:16",
																	"nodeType": "YulTypedName",
																	"src": "21195:9:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "21219:17:16",
															"nodeType": "YulAssignment",
															"src": "21219:17:16",
															"value": {
																"kind": "number",
																"nativeSrc": "21232:4:16",
																"nodeType": "YulLiteral",
																"src": "21232:4:16",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "21219:9:16",
																	"nodeType": "YulIdentifier",
																	"src": "21219:9:16"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "21283:611:16",
																		"nodeType": "YulBlock",
																		"src": "21283:611:16",
																		"statements": [
																			{
																				"nativeSrc": "21297:37:16",
																				"nodeType": "YulVariableDeclaration",
																				"src": "21297:37:16",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "21316:6:16",
																							"nodeType": "YulIdentifier",
																							"src": "21316:6:16"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "21328:4:16",
																									"nodeType": "YulLiteral",
																									"src": "21328:4:16",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "21324:3:16",
																								"nodeType": "YulIdentifier",
																								"src": "21324:3:16"
																							},
																							"nativeSrc": "21324:9:16",
																							"nodeType": "YulFunctionCall",
																							"src": "21324:9:16"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "21312:3:16",
																						"nodeType": "YulIdentifier",
																						"src": "21312:3:16"
																					},
																					"nativeSrc": "21312:22:16",
																					"nodeType": "YulFunctionCall",
																					"src": "21312:22:16"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "21301:7:16",
																						"nodeType": "YulTypedName",
																						"src": "21301:7:16",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "21348:51:16",
																				"nodeType": "YulVariableDeclaration",
																				"src": "21348:51:16",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "21394:4:16",
																							"nodeType": "YulIdentifier",
																							"src": "21394:4:16"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "21362:31:16",
																						"nodeType": "YulIdentifier",
																						"src": "21362:31:16"
																					},
																					"nativeSrc": "21362:37:16",
																					"nodeType": "YulFunctionCall",
																					"src": "21362:37:16"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "21352:6:16",
																						"nodeType": "YulTypedName",
																						"src": "21352:6:16",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "21412:10:16",
																				"nodeType": "YulVariableDeclaration",
																				"src": "21412:10:16",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "21421:1:16",
																					"nodeType": "YulLiteral",
																					"src": "21421:1:16",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "21416:1:16",
																						"nodeType": "YulTypedName",
																						"src": "21416:1:16",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "21480:163:16",
																					"nodeType": "YulBlock",
																					"src": "21480:163:16",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "21505:6:16",
																										"nodeType": "YulIdentifier",
																										"src": "21505:6:16"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "21523:3:16",
																														"nodeType": "YulIdentifier",
																														"src": "21523:3:16"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "21528:9:16",
																														"nodeType": "YulIdentifier",
																														"src": "21528:9:16"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "21519:3:16",
																													"nodeType": "YulIdentifier",
																													"src": "21519:3:16"
																												},
																												"nativeSrc": "21519:19:16",
																												"nodeType": "YulFunctionCall",
																												"src": "21519:19:16"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "21513:5:16",
																											"nodeType": "YulIdentifier",
																											"src": "21513:5:16"
																										},
																										"nativeSrc": "21513:26:16",
																										"nodeType": "YulFunctionCall",
																										"src": "21513:26:16"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "21498:6:16",
																									"nodeType": "YulIdentifier",
																									"src": "21498:6:16"
																								},
																								"nativeSrc": "21498:42:16",
																								"nodeType": "YulFunctionCall",
																								"src": "21498:42:16"
																							},
																							"nativeSrc": "21498:42:16",
																							"nodeType": "YulExpressionStatement",
																							"src": "21498:42:16"
																						},
																						{
																							"nativeSrc": "21557:24:16",
																							"nodeType": "YulAssignment",
																							"src": "21557:24:16",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "21571:6:16",
																										"nodeType": "YulIdentifier",
																										"src": "21571:6:16"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "21579:1:16",
																										"nodeType": "YulLiteral",
																										"src": "21579:1:16",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "21567:3:16",
																									"nodeType": "YulIdentifier",
																									"src": "21567:3:16"
																								},
																								"nativeSrc": "21567:14:16",
																								"nodeType": "YulFunctionCall",
																								"src": "21567:14:16"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "21557:6:16",
																									"nodeType": "YulIdentifier",
																									"src": "21557:6:16"
																								}
																							]
																						},
																						{
																							"nativeSrc": "21598:31:16",
																							"nodeType": "YulAssignment",
																							"src": "21598:31:16",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "21615:9:16",
																										"nodeType": "YulIdentifier",
																										"src": "21615:9:16"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "21626:2:16",
																										"nodeType": "YulLiteral",
																										"src": "21626:2:16",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "21611:3:16",
																									"nodeType": "YulIdentifier",
																									"src": "21611:3:16"
																								},
																								"nativeSrc": "21611:18:16",
																								"nodeType": "YulFunctionCall",
																								"src": "21611:18:16"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "21598:9:16",
																									"nodeType": "YulIdentifier",
																									"src": "21598:9:16"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "21446:1:16",
																							"nodeType": "YulIdentifier",
																							"src": "21446:1:16"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "21449:7:16",
																							"nodeType": "YulIdentifier",
																							"src": "21449:7:16"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "21443:2:16",
																						"nodeType": "YulIdentifier",
																						"src": "21443:2:16"
																					},
																					"nativeSrc": "21443:14:16",
																					"nodeType": "YulFunctionCall",
																					"src": "21443:14:16"
																				},
																				"nativeSrc": "21435:208:16",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "21458:21:16",
																					"nodeType": "YulBlock",
																					"src": "21458:21:16",
																					"statements": [
																						{
																							"nativeSrc": "21460:17:16",
																							"nodeType": "YulAssignment",
																							"src": "21460:17:16",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "21469:1:16",
																										"nodeType": "YulIdentifier",
																										"src": "21469:1:16"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "21472:4:16",
																										"nodeType": "YulLiteral",
																										"src": "21472:4:16",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "21465:3:16",
																									"nodeType": "YulIdentifier",
																									"src": "21465:3:16"
																								},
																								"nativeSrc": "21465:12:16",
																								"nodeType": "YulFunctionCall",
																								"src": "21465:12:16"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "21460:1:16",
																									"nodeType": "YulIdentifier",
																									"src": "21460:1:16"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "21439:3:16",
																					"nodeType": "YulBlock",
																					"src": "21439:3:16",
																					"statements": []
																				},
																				"src": "21435:208:16"
																			},
																			{
																				"body": {
																					"nativeSrc": "21679:156:16",
																					"nodeType": "YulBlock",
																					"src": "21679:156:16",
																					"statements": [
																						{
																							"nativeSrc": "21697:43:16",
																							"nodeType": "YulVariableDeclaration",
																							"src": "21697:43:16",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "21724:3:16",
																												"nodeType": "YulIdentifier",
																												"src": "21724:3:16"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "21729:9:16",
																												"nodeType": "YulIdentifier",
																												"src": "21729:9:16"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "21720:3:16",
																											"nodeType": "YulIdentifier",
																											"src": "21720:3:16"
																										},
																										"nativeSrc": "21720:19:16",
																										"nodeType": "YulFunctionCall",
																										"src": "21720:19:16"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "21714:5:16",
																									"nodeType": "YulIdentifier",
																									"src": "21714:5:16"
																								},
																								"nativeSrc": "21714:26:16",
																								"nodeType": "YulFunctionCall",
																								"src": "21714:26:16"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "21701:9:16",
																									"nodeType": "YulTypedName",
																									"src": "21701:9:16",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "21764:6:16",
																										"nodeType": "YulIdentifier",
																										"src": "21764:6:16"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "21791:9:16",
																												"nodeType": "YulIdentifier",
																												"src": "21791:9:16"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "21806:6:16",
																														"nodeType": "YulIdentifier",
																														"src": "21806:6:16"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "21814:4:16",
																														"nodeType": "YulLiteral",
																														"src": "21814:4:16",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "21802:3:16",
																													"nodeType": "YulIdentifier",
																													"src": "21802:3:16"
																												},
																												"nativeSrc": "21802:17:16",
																												"nodeType": "YulFunctionCall",
																												"src": "21802:17:16"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "21772:18:16",
																											"nodeType": "YulIdentifier",
																											"src": "21772:18:16"
																										},
																										"nativeSrc": "21772:48:16",
																										"nodeType": "YulFunctionCall",
																										"src": "21772:48:16"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "21757:6:16",
																									"nodeType": "YulIdentifier",
																									"src": "21757:6:16"
																								},
																								"nativeSrc": "21757:64:16",
																								"nodeType": "YulFunctionCall",
																								"src": "21757:64:16"
																							},
																							"nativeSrc": "21757:64:16",
																							"nodeType": "YulExpressionStatement",
																							"src": "21757:64:16"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "21662:7:16",
																							"nodeType": "YulIdentifier",
																							"src": "21662:7:16"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "21671:6:16",
																							"nodeType": "YulIdentifier",
																							"src": "21671:6:16"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "21659:2:16",
																						"nodeType": "YulIdentifier",
																						"src": "21659:2:16"
																					},
																					"nativeSrc": "21659:19:16",
																					"nodeType": "YulFunctionCall",
																					"src": "21659:19:16"
																				},
																				"nativeSrc": "21656:179:16",
																				"nodeType": "YulIf",
																				"src": "21656:179:16"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "21855:4:16",
																							"nodeType": "YulIdentifier",
																							"src": "21855:4:16"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "21869:6:16",
																											"nodeType": "YulIdentifier",
																											"src": "21869:6:16"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "21877:1:16",
																											"nodeType": "YulLiteral",
																											"src": "21877:1:16",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "21865:3:16",
																										"nodeType": "YulIdentifier",
																										"src": "21865:3:16"
																									},
																									"nativeSrc": "21865:14:16",
																									"nodeType": "YulFunctionCall",
																									"src": "21865:14:16"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "21881:1:16",
																									"nodeType": "YulLiteral",
																									"src": "21881:1:16",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "21861:3:16",
																								"nodeType": "YulIdentifier",
																								"src": "21861:3:16"
																							},
																							"nativeSrc": "21861:22:16",
																							"nodeType": "YulFunctionCall",
																							"src": "21861:22:16"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "21848:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "21848:6:16"
																					},
																					"nativeSrc": "21848:36:16",
																					"nodeType": "YulFunctionCall",
																					"src": "21848:36:16"
																				},
																				"nativeSrc": "21848:36:16",
																				"nodeType": "YulExpressionStatement",
																				"src": "21848:36:16"
																			}
																		]
																	},
																	"nativeSrc": "21276:618:16",
																	"nodeType": "YulCase",
																	"src": "21276:618:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "21281:1:16",
																		"nodeType": "YulLiteral",
																		"src": "21281:1:16",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "21911:222:16",
																		"nodeType": "YulBlock",
																		"src": "21911:222:16",
																		"statements": [
																			{
																				"nativeSrc": "21925:14:16",
																				"nodeType": "YulVariableDeclaration",
																				"src": "21925:14:16",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "21938:1:16",
																					"nodeType": "YulLiteral",
																					"src": "21938:1:16",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "21929:5:16",
																						"nodeType": "YulTypedName",
																						"src": "21929:5:16",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "21962:67:16",
																					"nodeType": "YulBlock",
																					"src": "21962:67:16",
																					"statements": [
																						{
																							"nativeSrc": "21980:35:16",
																							"nodeType": "YulAssignment",
																							"src": "21980:35:16",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "21999:3:16",
																												"nodeType": "YulIdentifier",
																												"src": "21999:3:16"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "22004:9:16",
																												"nodeType": "YulIdentifier",
																												"src": "22004:9:16"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "21995:3:16",
																											"nodeType": "YulIdentifier",
																											"src": "21995:3:16"
																										},
																										"nativeSrc": "21995:19:16",
																										"nodeType": "YulFunctionCall",
																										"src": "21995:19:16"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "21989:5:16",
																									"nodeType": "YulIdentifier",
																									"src": "21989:5:16"
																								},
																								"nativeSrc": "21989:26:16",
																								"nodeType": "YulFunctionCall",
																								"src": "21989:26:16"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "21980:5:16",
																									"nodeType": "YulIdentifier",
																									"src": "21980:5:16"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "21955:6:16",
																					"nodeType": "YulIdentifier",
																					"src": "21955:6:16"
																				},
																				"nativeSrc": "21952:77:16",
																				"nodeType": "YulIf",
																				"src": "21952:77:16"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "22049:4:16",
																							"nodeType": "YulIdentifier",
																							"src": "22049:4:16"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "22108:5:16",
																									"nodeType": "YulIdentifier",
																									"src": "22108:5:16"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "22115:6:16",
																									"nodeType": "YulIdentifier",
																									"src": "22115:6:16"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "22055:52:16",
																								"nodeType": "YulIdentifier",
																								"src": "22055:52:16"
																							},
																							"nativeSrc": "22055:67:16",
																							"nodeType": "YulFunctionCall",
																							"src": "22055:67:16"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "22042:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "22042:6:16"
																					},
																					"nativeSrc": "22042:81:16",
																					"nodeType": "YulFunctionCall",
																					"src": "22042:81:16"
																				},
																				"nativeSrc": "22042:81:16",
																				"nodeType": "YulExpressionStatement",
																				"src": "22042:81:16"
																			}
																		]
																	},
																	"nativeSrc": "21903:230:16",
																	"nodeType": "YulCase",
																	"src": "21903:230:16",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "21256:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "21256:6:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21264:2:16",
																		"nodeType": "YulLiteral",
																		"src": "21264:2:16",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "21253:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "21253:2:16"
																},
																"nativeSrc": "21253:14:16",
																"nodeType": "YulFunctionCall",
																"src": "21253:14:16"
															},
															"nativeSrc": "21246:887:16",
															"nodeType": "YulSwitch",
															"src": "21246:887:16"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "20744:1395:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "20825:4:16",
														"nodeType": "YulTypedName",
														"src": "20825:4:16",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "20831:3:16",
														"nodeType": "YulTypedName",
														"src": "20831:3:16",
														"type": ""
													}
												],
												"src": "20744:1395:16"
											},
											{
												"body": {
													"nativeSrc": "22203:40:16",
													"nodeType": "YulBlock",
													"src": "22203:40:16",
													"statements": [
														{
															"nativeSrc": "22214:22:16",
															"nodeType": "YulAssignment",
															"src": "22214:22:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "22230:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "22230:5:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "22224:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "22224:5:16"
																},
																"nativeSrc": "22224:12:16",
																"nodeType": "YulFunctionCall",
																"src": "22224:12:16"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "22214:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "22214:6:16"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "22145:98:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "22186:5:16",
														"nodeType": "YulTypedName",
														"src": "22186:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "22196:6:16",
														"nodeType": "YulTypedName",
														"src": "22196:6:16",
														"type": ""
													}
												],
												"src": "22145:98:16"
											},
											{
												"body": {
													"nativeSrc": "22362:34:16",
													"nodeType": "YulBlock",
													"src": "22362:34:16",
													"statements": [
														{
															"nativeSrc": "22372:18:16",
															"nodeType": "YulAssignment",
															"src": "22372:18:16",
															"value": {
																"name": "pos",
																"nativeSrc": "22387:3:16",
																"nodeType": "YulIdentifier",
																"src": "22387:3:16"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "22372:11:16",
																	"nodeType": "YulIdentifier",
																	"src": "22372:11:16"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "22249:147:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "22334:3:16",
														"nodeType": "YulTypedName",
														"src": "22334:3:16",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "22339:6:16",
														"nodeType": "YulTypedName",
														"src": "22339:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "22350:11:16",
														"nodeType": "YulTypedName",
														"src": "22350:11:16",
														"type": ""
													}
												],
												"src": "22249:147:16"
											},
											{
												"body": {
													"nativeSrc": "22510:278:16",
													"nodeType": "YulBlock",
													"src": "22510:278:16",
													"statements": [
														{
															"nativeSrc": "22520:52:16",
															"nodeType": "YulVariableDeclaration",
															"src": "22520:52:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "22566:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "22566:5:16"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "22534:31:16",
																	"nodeType": "YulIdentifier",
																	"src": "22534:31:16"
																},
																"nativeSrc": "22534:38:16",
																"nodeType": "YulFunctionCall",
																"src": "22534:38:16"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "22524:6:16",
																	"nodeType": "YulTypedName",
																	"src": "22524:6:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "22581:95:16",
															"nodeType": "YulAssignment",
															"src": "22581:95:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22664:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "22664:3:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "22669:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "22669:6:16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "22588:75:16",
																	"nodeType": "YulIdentifier",
																	"src": "22588:75:16"
																},
																"nativeSrc": "22588:88:16",
																"nodeType": "YulFunctionCall",
																"src": "22588:88:16"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "22581:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "22581:3:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "22724:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "22724:5:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22731:4:16",
																				"nodeType": "YulLiteral",
																				"src": "22731:4:16",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22720:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "22720:3:16"
																		},
																		"nativeSrc": "22720:16:16",
																		"nodeType": "YulFunctionCall",
																		"src": "22720:16:16"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "22738:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "22738:3:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "22743:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "22743:6:16"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "22685:34:16",
																	"nodeType": "YulIdentifier",
																	"src": "22685:34:16"
																},
																"nativeSrc": "22685:65:16",
																"nodeType": "YulFunctionCall",
																"src": "22685:65:16"
															},
															"nativeSrc": "22685:65:16",
															"nodeType": "YulExpressionStatement",
															"src": "22685:65:16"
														},
														{
															"nativeSrc": "22759:23:16",
															"nodeType": "YulAssignment",
															"src": "22759:23:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22770:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "22770:3:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "22775:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "22775:6:16"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22766:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "22766:3:16"
																},
																"nativeSrc": "22766:16:16",
																"nodeType": "YulFunctionCall",
																"src": "22766:16:16"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "22759:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "22759:3:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "22402:386:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "22491:5:16",
														"nodeType": "YulTypedName",
														"src": "22491:5:16",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "22498:3:16",
														"nodeType": "YulTypedName",
														"src": "22498:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "22506:3:16",
														"nodeType": "YulTypedName",
														"src": "22506:3:16",
														"type": ""
													}
												],
												"src": "22402:386:16"
											},
											{
												"body": {
													"nativeSrc": "22928:137:16",
													"nodeType": "YulBlock",
													"src": "22928:137:16",
													"statements": [
														{
															"nativeSrc": "22939:100:16",
															"nodeType": "YulAssignment",
															"src": "22939:100:16",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "23026:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "23026:6:16"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "23035:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "23035:3:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "22946:79:16",
																	"nodeType": "YulIdentifier",
																	"src": "22946:79:16"
																},
																"nativeSrc": "22946:93:16",
																"nodeType": "YulFunctionCall",
																"src": "22946:93:16"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "22939:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "22939:3:16"
																}
															]
														},
														{
															"nativeSrc": "23049:10:16",
															"nodeType": "YulAssignment",
															"src": "23049:10:16",
															"value": {
																"name": "pos",
																"nativeSrc": "23056:3:16",
																"nodeType": "YulIdentifier",
																"src": "23056:3:16"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "23049:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "23049:3:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "22794:271:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "22907:3:16",
														"nodeType": "YulTypedName",
														"src": "22907:3:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "22913:6:16",
														"nodeType": "YulTypedName",
														"src": "22913:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "22924:3:16",
														"nodeType": "YulTypedName",
														"src": "22924:3:16",
														"type": ""
													}
												],
												"src": "22794:271:16"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_bytes_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_int256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_int256_to_t_int256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_int256(value))\n    }\n\n    function abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_int256_to_t_int256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function store_literal_in_memory_016c8545763eb7f610fbb2f8b4daaad18a1230ddad0f63d2a64bb442c88834da(memPtr) {\n\n        mstore(add(memPtr, 0), \"Amount must always be less than \")\n\n        mstore(add(memPtr, 32), \"the number of possessions\")\n\n    }\n\n    function abi_encode_t_stringliteral_016c8545763eb7f610fbb2f8b4daaad18a1230ddad0f63d2a64bb442c88834da_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 57)\n        store_literal_in_memory_016c8545763eb7f610fbb2f8b4daaad18a1230ddad0f63d2a64bb442c88834da(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_016c8545763eb7f610fbb2f8b4daaad18a1230ddad0f63d2a64bb442c88834da__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_016c8545763eb7f610fbb2f8b4daaad18a1230ddad0f63d2a64bb442c88834da_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887(memPtr) {\n\n        mstore(add(memPtr, 0), \"Amount must be greater than zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function checked_div_t_int256(x, y) -> r {\n        x := cleanup_t_int256(x)\n        y := cleanup_t_int256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        // overflow for minVal / -1\n        if and(\n            eq(x, 0x8000000000000000000000000000000000000000000000000000000000000000),\n            eq(y, sub(0, 1))\n        ) { panic_error_0x11() }\n\n        r := sdiv(x, y)\n    }\n\n    function cleanup_t_uint80(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffff)\n    }\n\n    function validator_revert_t_uint80(value) {\n        if iszero(eq(value, cleanup_t_uint80(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint80_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint80(value)\n    }\n\n    function validator_revert_t_int256(value) {\n        if iszero(eq(value, cleanup_t_int256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_int256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_int256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint80_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_int256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint80_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_rational_1_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_rational_1_by_1_to_t_uint64(value) -> converted {\n        converted := cleanup_t_uint64(identity(cleanup_t_rational_1_by_1(value)))\n    }\n\n    function abi_encode_t_rational_1_by_1_to_t_uint64_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_1_by_1_to_t_uint64(value))\n    }\n\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_rational_1_by_1_to_t_uint64_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n}\n",
									"id": 16,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"514": [
									{
										"length": 32,
										"start": 5066
									},
									{
										"length": 32,
										"start": 5151
									},
									{
										"length": 32,
										"start": 5593
									}
								]
							},
							"linkReferences": {},
							"object": "6080604052600436106101b6575f3560e01c80637284e416116100eb578063ad3cb1cc11610089578063dd62ed3e11610063578063dd62ed3e146105a6578063e6c9566c146105e2578063f2fde38b1461060c578063fee5035914610634576101b6565b8063ad3cb1cc1461052a578063b7c422f514610554578063c4d66de81461057e576101b6565b80638da5cb5b116100c55780638da5cb5b1461047257806395d89b411461049c578063a9059cbb146104c6578063abab467314610502576101b6565b80637284e416146103f657806379cc6790146104205780637ce3518814610448576101b6565b8063331ee7391161015857806352d1902d1161013257806352d1902d1461035057806354fd4d501461037a57806370a08231146103a4578063715018a6146103e0576101b6565b8063331ee7391461030257806342966c681461030c5780634f1ef28614610334576101b6565b806318b804a51161019457806318b804a51461024a57806323b872dd146102745780632e1a7d4d146102b0578063313ce567146102d8576101b6565b806306fdde03146101ba578063095ea7b3146101e457806318160ddd14610220575b5f80fd5b3480156101c5575f80fd5b506101ce61064a565b6040516101db9190612100565b60405180910390f35b3480156101ef575f80fd5b5061020a600480360381019061020591906121be565b6106e8565b6040516102179190612216565b60405180910390f35b34801561022b575f80fd5b5061023461070a565b604051610241919061223e565b60405180910390f35b348015610255575f80fd5b5061025e610721565b60405161026b919061223e565b60405180910390f35b34801561027f575f80fd5b5061029a60048036038101906102959190612257565b61075f565b6040516102a79190612216565b60405180910390f35b3480156102bb575f80fd5b506102d660048036038101906102d191906122a7565b61078d565b005b3480156102e3575f80fd5b506102ec6108db565b6040516102f991906122ed565b60405180910390f35b61030a6108e3565b005b348015610317575f80fd5b50610332600480360381019061032d91906122a7565b6109ae565b005b61034e60048036038101906103499190612432565b6109c2565b005b34801561035b575f80fd5b506103646109e1565b60405161037191906124a4565b60405180910390f35b348015610385575f80fd5b5061038e610a12565b60405161039b919061223e565b60405180910390f35b3480156103af575f80fd5b506103ca60048036038101906103c591906124bd565b610a1a565b6040516103d7919061223e565b60405180910390f35b3480156103eb575f80fd5b506103f4610a6d565b005b348015610401575f80fd5b5061040a610a80565b6040516104179190612100565b60405180910390f35b34801561042b575f80fd5b50610446600480360381019061044191906121be565b610aa0565b005b348015610453575f80fd5b5061045c610ac0565b604051610469919061223e565b60405180910390f35b34801561047d575f80fd5b50610486610b0e565b60405161049391906124f7565b60405180910390f35b3480156104a7575f80fd5b506104b0610b43565b6040516104bd9190612100565b60405180910390f35b3480156104d1575f80fd5b506104ec60048036038101906104e791906121be565b610be1565b6040516104f99190612216565b60405180910390f35b34801561050d575f80fd5b50610528600480360381019061052391906121be565b610c03565b005b348015610535575f80fd5b5061053e610c11565b60405161054b9190612100565b60405180910390f35b34801561055f575f80fd5b50610568610c4a565b6040516105759190612528565b60405180910390f35b348015610589575f80fd5b506105a4600480360381019061059f91906124bd565b610ce5565b005b3480156105b1575f80fd5b506105cc60048036038101906105c79190612541565b610eea565b6040516105d9919061223e565b60405180910390f35b3480156105ed575f80fd5b506105f6610f7a565b6040516106039190612528565b60405180910390f35b348015610617575f80fd5b50610632600480360381019061062d91906124bd565b611017565b005b34801561063f575f80fd5b5061064861109b565b005b60605f610655611108565b9050806003018054610666906125ac565b80601f0160208091040260200160405190810160405280929190818152602001828054610692906125ac565b80156106dd5780601f106106b4576101008083540402835291602001916106dd565b820191905f5260205f20905b8154815290600101906020018083116106c057829003601f168201915b505050505091505090565b5f806106f261112f565b90506106ff818585611136565b600191505092915050565b5f80610714611108565b9050806002015491505090565b5f80670de0b6b3a7640000610734610ac0565b61073e9190612636565b90505f81670de0b6b3a76400006107559190612636565b9050809250505090565b5f8061076961112f565b9050610776858285611148565b6107818585856111da565b60019150509392505050565b8060025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054101561080d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610804906126d6565b60405180910390fd5b8060025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461085991906126f4565b9250508190555061086a3382610c03565b5f670de0b6b3a76400008261087d610721565b6108879190612727565b6108919190612636565b90503373ffffffffffffffffffffffffffffffffffffffff166108fc8290811502906040515f60405180830381858888f193505050501580156108d6573d5f803e3d5ffd5b505050565b5f6012905090565b5f3411610925576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161091c906127b2565b60405180910390fd5b5f670de0b6b3a764000034610938610ac0565b6109429190612727565b61094c9190612636565b905061095833826112ca565b8060025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546109a491906127d0565b9250508190555050565b6109bf6109b961112f565b82611349565b50565b6109ca6113c8565b6109d3826114ae565b6109dd82826114b9565b5050565b5f6109ea6115d7565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5f1b905090565b5f6001905090565b5f80610a24611108565b9050805f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054915050919050565b610a7561165e565b610a7e5f6116e5565b565b6060604051806080016040528060448152602001612d1560449139905090565b610ab282610aac61112f565b83611148565b610abc8282611349565b5050565b5f80610aca610c4a565b90505f610ad5610f7a565b6305f5e100610ae49190612803565b90505f6402540be4008284610af99190612727565b610b039190612727565b905080935050505090565b5f80610b186117b6565b9050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691505090565b60605f610b4e611108565b9050806004018054610b5f906125ac565b80601f0160208091040260200160405190810160405280929190818152602001828054610b8b906125ac565b8015610bd65780601f10610bad57610100808354040283529160200191610bd6565b820191905f5260205f20905b815481529060010190602001808311610bb957829003601f168201915b505050505091505090565b5f80610beb61112f565b9050610bf88185856111da565b600191505092915050565b610c0d8282611349565b5050565b6040518060400160405280600581526020017f352e302e3000000000000000000000000000000000000000000000000000000081525081565b5f805f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610cb4573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610cd891906128e8565b5050509150508091505090565b5f610cee6117dd565b90505f815f0160089054906101000a900460ff161590505f825f015f9054906101000a900467ffffffffffffffff1690505f808267ffffffffffffffff16148015610d365750825b90505f60018367ffffffffffffffff16148015610d6957505f3073ffffffffffffffffffffffffffffffffffffffff163b145b905081158015610d77575080155b15610dae576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001855f015f6101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055508315610dfb576001855f0160086101000a81548160ff0219169083151502179055505b610e6f6040518060400160405280600981526020017f43616d70546f6b656e00000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f43544b0000000000000000000000000000000000000000000000000000000000815250611804565b610e7761181a565b610e8086611824565b610e88611838565b8315610ee2575f855f0160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d26001604051610ed991906129b4565b60405180910390a15b505050505050565b5f80610ef4611108565b9050806001015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205491505092915050565b5f8060015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610fe6573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061100a91906128e8565b5050509150508091505090565b61101f61165e565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361108f575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161108691906124f7565b60405180910390fd5b611098816116e5565b50565b5f681b1ae4d6e2ef50000090506110b233826112ca565b8060025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546110fe91906127d0565b9250508190555050565b5f7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00905090565b5f33905090565b6111438383836001611842565b505050565b5f6111538484610eea565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146111d457818110156111c5578281836040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526004016111bc939291906129cd565b60405180910390fd5b6111d384848484035f611842565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361124a575f6040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260040161124191906124f7565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036112ba575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016112b191906124f7565b60405180910390fd5b6112c5838383611a1f565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361133a575f6040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161133191906124f7565b60405180910390fd5b6113455f8383611a1f565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036113b9575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016113b091906124f7565b60405180910390fd5b6113c4825f83611a1f565b5050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff16148061147557507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1661145c611c4e565b73ffffffffffffffffffffffffffffffffffffffff1614155b156114ac576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6114b661165e565b50565b8173ffffffffffffffffffffffffffffffffffffffff166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa92505050801561152157506040513d601f19601f8201168201806040525081019061151e9190612a2c565b60015b61156257816040517f4c9c8ce300000000000000000000000000000000000000000000000000000000815260040161155991906124f7565b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5f1b81146115c857806040517faa1d49a40000000000000000000000000000000000000000000000000000000081526004016115bf91906124a4565b60405180910390fd5b6115d28383611ca1565b505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff161461165c576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b61166661112f565b73ffffffffffffffffffffffffffffffffffffffff16611684610b0e565b73ffffffffffffffffffffffffffffffffffffffff16146116e3576116a761112f565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016116da91906124f7565b60405180910390fd5b565b5f6116ee6117b6565b90505f815f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905082825f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3505050565b5f7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300905090565b5f7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00905090565b61180c611d13565b6118168282611d53565b5050565b611822611d13565b565b61182c611d13565b61183581611d8f565b50565b611840611d13565b565b5f61184b611108565b90505f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16036118bd575f6040517fe602df050000000000000000000000000000000000000000000000000000000081526004016118b491906124f7565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361192d575f6040517f94280d6200000000000000000000000000000000000000000000000000000000815260040161192491906124f7565b60405180910390fd5b82816001015f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508115611a18578373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92585604051611a0f919061223e565b60405180910390a35b5050505050565b5f611a28611108565b90505f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611a7c5781816002015f828254611a7091906127d0565b92505081905550611b4e565b5f815f015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905082811015611b07578481846040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401611afe939291906129cd565b60405180910390fd5b828103825f015f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611b975781816002015f8282540392505081905550611be3565b81815f015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051611c40919061223e565b60405180910390a350505050565b5f611c7a7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5f1b611e13565b5f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b611caa82611e1c565b8173ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a25f81511115611d0657611d008282611ee5565b50611d0f565b611d0e611f65565b5b5050565b611d1b611fa1565b611d51576040517fd7e6bcf800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b611d5b611d13565b5f611d64611108565b905082816003019081611d779190612beb565b5081816004019081611d899190612beb565b50505050565b611d97611d13565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611e07575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401611dfe91906124f7565b60405180910390fd5b611e10816116e5565b50565b5f819050919050565b5f8173ffffffffffffffffffffffffffffffffffffffff163b03611e7757806040517f4c9c8ce3000000000000000000000000000000000000000000000000000000008152600401611e6e91906124f7565b60405180910390fd5b80611ea37f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5f1b611e13565b5f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60605f808473ffffffffffffffffffffffffffffffffffffffff1684604051611f0e9190612cfe565b5f60405180830381855af49150503d805f8114611f46576040519150601f19603f3d011682016040523d82523d5f602084013e611f4b565b606091505b5091509150611f5b858383611fbf565b9250505092915050565b5f341115611f9f576040517fb398979f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b5f611faa6117dd565b5f0160089054906101000a900460ff16905090565b606082611fd457611fcf8261204c565b612044565b5f8251148015611ffa57505f8473ffffffffffffffffffffffffffffffffffffffff163b145b1561203c57836040517f9996b31500000000000000000000000000000000000000000000000000000000815260040161203391906124f7565b60405180910390fd5b819050612045565b5b9392505050565b5f8151111561205e5780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f6120d282612090565b6120dc818561209a565b93506120ec8185602086016120aa565b6120f5816120b8565b840191505092915050565b5f6020820190508181035f83015261211881846120c8565b905092915050565b5f604051905090565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61215a82612131565b9050919050565b61216a81612150565b8114612174575f80fd5b50565b5f8135905061218581612161565b92915050565b5f819050919050565b61219d8161218b565b81146121a7575f80fd5b50565b5f813590506121b881612194565b92915050565b5f80604083850312156121d4576121d3612129565b5b5f6121e185828601612177565b92505060206121f2858286016121aa565b9150509250929050565b5f8115159050919050565b612210816121fc565b82525050565b5f6020820190506122295f830184612207565b92915050565b6122388161218b565b82525050565b5f6020820190506122515f83018461222f565b92915050565b5f805f6060848603121561226e5761226d612129565b5b5f61227b86828701612177565b935050602061228c86828701612177565b925050604061229d868287016121aa565b9150509250925092565b5f602082840312156122bc576122bb612129565b5b5f6122c9848285016121aa565b91505092915050565b5f60ff82169050919050565b6122e7816122d2565b82525050565b5f6020820190506123005f8301846122de565b92915050565b5f80fd5b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b612344826120b8565b810181811067ffffffffffffffff821117156123635761236261230e565b5b80604052505050565b5f612375612120565b9050612381828261233b565b919050565b5f67ffffffffffffffff8211156123a05761239f61230e565b5b6123a9826120b8565b9050602081019050919050565b828183375f83830152505050565b5f6123d66123d184612386565b61236c565b9050828152602081018484840111156123f2576123f161230a565b5b6123fd8482856123b6565b509392505050565b5f82601f83011261241957612418612306565b5b81356124298482602086016123c4565b91505092915050565b5f806040838503121561244857612447612129565b5b5f61245585828601612177565b925050602083013567ffffffffffffffff8111156124765761247561212d565b5b61248285828601612405565b9150509250929050565b5f819050919050565b61249e8161248c565b82525050565b5f6020820190506124b75f830184612495565b92915050565b5f602082840312156124d2576124d1612129565b5b5f6124df84828501612177565b91505092915050565b6124f181612150565b82525050565b5f60208201905061250a5f8301846124e8565b92915050565b5f819050919050565b61252281612510565b82525050565b5f60208201905061253b5f830184612519565b92915050565b5f806040838503121561255757612556612129565b5b5f61256485828601612177565b925050602061257585828601612177565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806125c357607f821691505b6020821081036125d6576125d561257f565b5b50919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6126408261218b565b915061264b8361218b565b92508261265b5761265a6125dc565b5b828204905092915050565b7f416d6f756e74206d75737420616c77617973206265206c657373207468616e205f8201527f746865206e756d626572206f6620706f7373657373696f6e7300000000000000602082015250565b5f6126c060398361209a565b91506126cb82612666565b604082019050919050565b5f6020820190508181035f8301526126ed816126b4565b9050919050565b5f6126fe8261218b565b91506127098361218b565b925082820390508181111561272157612720612609565b5b92915050565b5f6127318261218b565b915061273c8361218b565b925082820261274a8161218b565b9150828204841483151761276157612760612609565b5b5092915050565b7f416d6f756e74206d7573742062652067726561746572207468616e207a65726f5f82015250565b5f61279c60208361209a565b91506127a782612768565b602082019050919050565b5f6020820190508181035f8301526127c981612790565b9050919050565b5f6127da8261218b565b91506127e58361218b565b92508282019050808211156127fd576127fc612609565b5b92915050565b5f61280d82612510565b915061281883612510565b925082612828576128276125dc565b5b60015f0383147f8000000000000000000000000000000000000000000000000000000000000000831416156128605761285f612609565b5b828205905092915050565b5f69ffffffffffffffffffff82169050919050565b6128898161286b565b8114612893575f80fd5b50565b5f815190506128a481612880565b92915050565b6128b381612510565b81146128bd575f80fd5b50565b5f815190506128ce816128aa565b92915050565b5f815190506128e281612194565b92915050565b5f805f805f60a0868803121561290157612900612129565b5b5f61290e88828901612896565b955050602061291f888289016128c0565b9450506040612930888289016128d4565b9350506060612941888289016128d4565b925050608061295288828901612896565b9150509295509295909350565b5f819050919050565b5f67ffffffffffffffff82169050919050565b5f819050919050565b5f61299e6129996129948461295f565b61297b565b612968565b9050919050565b6129ae81612984565b82525050565b5f6020820190506129c75f8301846129a5565b92915050565b5f6060820190506129e05f8301866124e8565b6129ed602083018561222f565b6129fa604083018461222f565b949350505050565b612a0b8161248c565b8114612a15575f80fd5b50565b5f81519050612a2681612a02565b92915050565b5f60208284031215612a4157612a40612129565b5b5f612a4e84828501612a18565b91505092915050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302612ab37fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82612a78565b612abd8683612a78565b95508019841693508086168417925050509392505050565b5f612aef612aea612ae58461218b565b61297b565b61218b565b9050919050565b5f819050919050565b612b0883612ad5565b612b1c612b1482612af6565b848454612a84565b825550505050565b5f90565b612b30612b24565b612b3b818484612aff565b505050565b5b81811015612b5e57612b535f82612b28565b600181019050612b41565b5050565b601f821115612ba357612b7481612a57565b612b7d84612a69565b81016020851015612b8c578190505b612ba0612b9885612a69565b830182612b40565b50505b505050565b5f82821c905092915050565b5f612bc35f1984600802612ba8565b1980831691505092915050565b5f612bdb8383612bb4565b9150826002028217905092915050565b612bf482612090565b67ffffffffffffffff811115612c0d57612c0c61230e565b5b612c1782546125ac565b612c22828285612b62565b5f60209050601f831160018114612c53575f8415612c41578287015190505b612c4b8582612bd0565b865550612cb2565b601f198416612c6186612a57565b5f5b82811015612c8857848901518255600182019150602085019450602081019050612c63565b86831015612ca55784890151612ca1601f891682612bb4565b8355505b6001600288020188555050505b505050505050565b5f81519050919050565b5f81905092915050565b5f612cd882612cba565b612ce28185612cc4565b9350612cf28185602086016120aa565b80840191505092915050565b5f612d098284612cce565b91508190509291505056fe43616d70546f6b656e203c2d3e204554482e2043616d70546f6b656e20697320537461626c65436f696e20746861742072656c6174696e6720455448203c2d3e204a5059a2646970667358221220057672c2c96fe073382fafec2dafc649d15f56b881dca15de3a93f976d0485f364736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1B6 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7284E416 GT PUSH2 0xEB JUMPI DUP1 PUSH4 0xAD3CB1CC GT PUSH2 0x89 JUMPI DUP1 PUSH4 0xDD62ED3E GT PUSH2 0x63 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x5A6 JUMPI DUP1 PUSH4 0xE6C9566C EQ PUSH2 0x5E2 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x60C JUMPI DUP1 PUSH4 0xFEE50359 EQ PUSH2 0x634 JUMPI PUSH2 0x1B6 JUMP JUMPDEST DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0x52A JUMPI DUP1 PUSH4 0xB7C422F5 EQ PUSH2 0x554 JUMPI DUP1 PUSH4 0xC4D66DE8 EQ PUSH2 0x57E JUMPI PUSH2 0x1B6 JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xC5 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x472 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x49C JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x4C6 JUMPI DUP1 PUSH4 0xABAB4673 EQ PUSH2 0x502 JUMPI PUSH2 0x1B6 JUMP JUMPDEST DUP1 PUSH4 0x7284E416 EQ PUSH2 0x3F6 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x420 JUMPI DUP1 PUSH4 0x7CE35188 EQ PUSH2 0x448 JUMPI PUSH2 0x1B6 JUMP JUMPDEST DUP1 PUSH4 0x331EE739 GT PUSH2 0x158 JUMPI DUP1 PUSH4 0x52D1902D GT PUSH2 0x132 JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x350 JUMPI DUP1 PUSH4 0x54FD4D50 EQ PUSH2 0x37A JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x3A4 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x3E0 JUMPI PUSH2 0x1B6 JUMP JUMPDEST DUP1 PUSH4 0x331EE739 EQ PUSH2 0x302 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x30C JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x334 JUMPI PUSH2 0x1B6 JUMP JUMPDEST DUP1 PUSH4 0x18B804A5 GT PUSH2 0x194 JUMPI DUP1 PUSH4 0x18B804A5 EQ PUSH2 0x24A JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x274 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x2B0 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2D8 JUMPI PUSH2 0x1B6 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1BA JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1E4 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x220 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CE PUSH2 0x64A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DB SWAP2 SWAP1 PUSH2 0x2100 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1EF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x20A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x205 SWAP2 SWAP1 PUSH2 0x21BE JUMP JUMPDEST PUSH2 0x6E8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x217 SWAP2 SWAP1 PUSH2 0x2216 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x22B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x234 PUSH2 0x70A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x241 SWAP2 SWAP1 PUSH2 0x223E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x255 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x25E PUSH2 0x721 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26B SWAP2 SWAP1 PUSH2 0x223E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x29A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x295 SWAP2 SWAP1 PUSH2 0x2257 JUMP JUMPDEST PUSH2 0x75F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A7 SWAP2 SWAP1 PUSH2 0x2216 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D1 SWAP2 SWAP1 PUSH2 0x22A7 JUMP JUMPDEST PUSH2 0x78D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EC PUSH2 0x8DB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F9 SWAP2 SWAP1 PUSH2 0x22ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x30A PUSH2 0x8E3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x317 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x332 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x32D SWAP2 SWAP1 PUSH2 0x22A7 JUMP JUMPDEST PUSH2 0x9AE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x34E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x349 SWAP2 SWAP1 PUSH2 0x2432 JUMP JUMPDEST PUSH2 0x9C2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x35B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x364 PUSH2 0x9E1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x371 SWAP2 SWAP1 PUSH2 0x24A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x385 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x38E PUSH2 0xA12 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x39B SWAP2 SWAP1 PUSH2 0x223E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3AF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3CA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3C5 SWAP2 SWAP1 PUSH2 0x24BD JUMP JUMPDEST PUSH2 0xA1A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D7 SWAP2 SWAP1 PUSH2 0x223E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3EB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F4 PUSH2 0xA6D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x401 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x40A PUSH2 0xA80 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x417 SWAP2 SWAP1 PUSH2 0x2100 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x42B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x446 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x441 SWAP2 SWAP1 PUSH2 0x21BE JUMP JUMPDEST PUSH2 0xAA0 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x453 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x45C PUSH2 0xAC0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x469 SWAP2 SWAP1 PUSH2 0x223E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x47D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x486 PUSH2 0xB0E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x493 SWAP2 SWAP1 PUSH2 0x24F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4B0 PUSH2 0xB43 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4BD SWAP2 SWAP1 PUSH2 0x2100 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4D1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4EC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4E7 SWAP2 SWAP1 PUSH2 0x21BE JUMP JUMPDEST PUSH2 0xBE1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4F9 SWAP2 SWAP1 PUSH2 0x2216 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x50D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x528 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x523 SWAP2 SWAP1 PUSH2 0x21BE JUMP JUMPDEST PUSH2 0xC03 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x535 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x53E PUSH2 0xC11 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x54B SWAP2 SWAP1 PUSH2 0x2100 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x55F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x568 PUSH2 0xC4A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x575 SWAP2 SWAP1 PUSH2 0x2528 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x589 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x5A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x59F SWAP2 SWAP1 PUSH2 0x24BD JUMP JUMPDEST PUSH2 0xCE5 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x5CC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5C7 SWAP2 SWAP1 PUSH2 0x2541 JUMP JUMPDEST PUSH2 0xEEA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5D9 SWAP2 SWAP1 PUSH2 0x223E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5ED JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x5F6 PUSH2 0xF7A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x603 SWAP2 SWAP1 PUSH2 0x2528 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x617 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x632 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x62D SWAP2 SWAP1 PUSH2 0x24BD JUMP JUMPDEST PUSH2 0x1017 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x63F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x648 PUSH2 0x109B JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0x655 PUSH2 0x1108 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x3 ADD DUP1 SLOAD PUSH2 0x666 SWAP1 PUSH2 0x25AC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x692 SWAP1 PUSH2 0x25AC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x6DD JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6B4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6DD JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6C0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x6F2 PUSH2 0x112F JUMP JUMPDEST SWAP1 POP PUSH2 0x6FF DUP2 DUP6 DUP6 PUSH2 0x1136 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x714 PUSH2 0x1108 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x2 ADD SLOAD SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH8 0xDE0B6B3A7640000 PUSH2 0x734 PUSH2 0xAC0 JUMP JUMPDEST PUSH2 0x73E SWAP2 SWAP1 PUSH2 0x2636 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH8 0xDE0B6B3A7640000 PUSH2 0x755 SWAP2 SWAP1 PUSH2 0x2636 JUMP JUMPDEST SWAP1 POP DUP1 SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x769 PUSH2 0x112F JUMP JUMPDEST SWAP1 POP PUSH2 0x776 DUP6 DUP3 DUP6 PUSH2 0x1148 JUMP JUMPDEST PUSH2 0x781 DUP6 DUP6 DUP6 PUSH2 0x11DA JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD LT ISZERO PUSH2 0x80D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x804 SWAP1 PUSH2 0x26D6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x859 SWAP2 SWAP1 PUSH2 0x26F4 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x86A CALLER DUP3 PUSH2 0xC03 JUMP JUMPDEST PUSH0 PUSH8 0xDE0B6B3A7640000 DUP3 PUSH2 0x87D PUSH2 0x721 JUMP JUMPDEST PUSH2 0x887 SWAP2 SWAP1 PUSH2 0x2727 JUMP JUMPDEST PUSH2 0x891 SWAP2 SWAP1 PUSH2 0x2636 JUMP JUMPDEST SWAP1 POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x8D6 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLVALUE GT PUSH2 0x925 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x91C SWAP1 PUSH2 0x27B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH8 0xDE0B6B3A7640000 CALLVALUE PUSH2 0x938 PUSH2 0xAC0 JUMP JUMPDEST PUSH2 0x942 SWAP2 SWAP1 PUSH2 0x2727 JUMP JUMPDEST PUSH2 0x94C SWAP2 SWAP1 PUSH2 0x2636 JUMP JUMPDEST SWAP1 POP PUSH2 0x958 CALLER DUP3 PUSH2 0x12CA JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x9A4 SWAP2 SWAP1 PUSH2 0x27D0 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x9BF PUSH2 0x9B9 PUSH2 0x112F JUMP JUMPDEST DUP3 PUSH2 0x1349 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x9CA PUSH2 0x13C8 JUMP JUMPDEST PUSH2 0x9D3 DUP3 PUSH2 0x14AE JUMP JUMPDEST PUSH2 0x9DD DUP3 DUP3 PUSH2 0x14B9 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0x9EA PUSH2 0x15D7 JUMP JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH0 SHL SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x1 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xA24 PUSH2 0x1108 JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA75 PUSH2 0x165E JUMP JUMPDEST PUSH2 0xA7E PUSH0 PUSH2 0x16E5 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x44 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2D15 PUSH1 0x44 SWAP2 CODECOPY SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xAB2 DUP3 PUSH2 0xAAC PUSH2 0x112F JUMP JUMPDEST DUP4 PUSH2 0x1148 JUMP JUMPDEST PUSH2 0xABC DUP3 DUP3 PUSH2 0x1349 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xACA PUSH2 0xC4A JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xAD5 PUSH2 0xF7A JUMP JUMPDEST PUSH4 0x5F5E100 PUSH2 0xAE4 SWAP2 SWAP1 PUSH2 0x2803 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH5 0x2540BE400 DUP3 DUP5 PUSH2 0xAF9 SWAP2 SWAP1 PUSH2 0x2727 JUMP JUMPDEST PUSH2 0xB03 SWAP2 SWAP1 PUSH2 0x2727 JUMP JUMPDEST SWAP1 POP DUP1 SWAP4 POP POP POP POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xB18 PUSH2 0x17B6 JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0xB4E PUSH2 0x1108 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x4 ADD DUP1 SLOAD PUSH2 0xB5F SWAP1 PUSH2 0x25AC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xB8B SWAP1 PUSH2 0x25AC JUMP JUMPDEST DUP1 ISZERO PUSH2 0xBD6 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xBAD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xBD6 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xBB9 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xBEB PUSH2 0x112F JUMP JUMPDEST SWAP1 POP PUSH2 0xBF8 DUP2 DUP6 DUP6 PUSH2 0x11DA JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC0D DUP3 DUP3 PUSH2 0x1349 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x352E302E30000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xCB4 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCD8 SWAP2 SWAP1 PUSH2 0x28E8 JUMP JUMPDEST POP POP POP SWAP2 POP POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0xCEE PUSH2 0x17DD JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP PUSH0 DUP3 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xD36 JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH0 PUSH1 0x1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xD69 JUMPI POP PUSH0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0xD77 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0xDAE JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0xDFB JUMPI PUSH1 0x1 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0xE6F PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x43616D70546F6B656E0000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x43544B0000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x1804 JUMP JUMPDEST PUSH2 0xE77 PUSH2 0x181A JUMP JUMPDEST PUSH2 0xE80 DUP7 PUSH2 0x1824 JUMP JUMPDEST PUSH2 0xE88 PUSH2 0x1838 JUMP JUMPDEST DUP4 ISZERO PUSH2 0xEE2 JUMPI PUSH0 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0xED9 SWAP2 SWAP1 PUSH2 0x29B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xEF4 PUSH2 0x1108 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 ADD PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xFE6 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x100A SWAP2 SWAP1 PUSH2 0x28E8 JUMP JUMPDEST POP POP POP SWAP2 POP POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0x101F PUSH2 0x165E JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x108F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1086 SWAP2 SWAP1 PUSH2 0x24F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1098 DUP2 PUSH2 0x16E5 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH9 0x1B1AE4D6E2EF500000 SWAP1 POP PUSH2 0x10B2 CALLER DUP3 PUSH2 0x12CA JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x10FE SWAP2 SWAP1 PUSH2 0x27D0 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1143 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1842 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1153 DUP5 DUP5 PUSH2 0xEEA JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x11D4 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x11C5 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11BC SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x29CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x11D3 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x1842 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x124A JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1241 SWAP2 SWAP1 PUSH2 0x24F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x12BA JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12B1 SWAP2 SWAP1 PUSH2 0x24F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x12C5 DUP4 DUP4 DUP4 PUSH2 0x1A1F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x133A JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1331 SWAP2 SWAP1 PUSH2 0x24F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1345 PUSH0 DUP4 DUP4 PUSH2 0x1A1F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x13B9 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13B0 SWAP2 SWAP1 PUSH2 0x24F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x13C4 DUP3 PUSH0 DUP4 PUSH2 0x1A1F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1475 JUMPI POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x145C PUSH2 0x1C4E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x14AC JUMPI PUSH1 0x40 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x14B6 PUSH2 0x165E JUMP JUMPDEST POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1521 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x151E SWAP2 SWAP1 PUSH2 0x2A2C JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1562 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1559 SWAP2 SWAP1 PUSH2 0x24F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH0 SHL DUP2 EQ PUSH2 0x15C8 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xAA1D49A400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15BF SWAP2 SWAP1 PUSH2 0x24A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x15D2 DUP4 DUP4 PUSH2 0x1CA1 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x165C JUMPI PUSH1 0x40 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x1666 PUSH2 0x112F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1684 PUSH2 0xB0E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x16E3 JUMPI PUSH2 0x16A7 PUSH2 0x112F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16DA SWAP2 SWAP1 PUSH2 0x24F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0x16EE PUSH2 0x17B6 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP3 DUP3 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x180C PUSH2 0x1D13 JUMP JUMPDEST PUSH2 0x1816 DUP3 DUP3 PUSH2 0x1D53 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1822 PUSH2 0x1D13 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x182C PUSH2 0x1D13 JUMP JUMPDEST PUSH2 0x1835 DUP2 PUSH2 0x1D8F JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1840 PUSH2 0x1D13 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0x184B PUSH2 0x1108 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x18BD JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18B4 SWAP2 SWAP1 PUSH2 0x24F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x192D JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1924 SWAP2 SWAP1 PUSH2 0x24F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP2 PUSH1 0x1 ADD PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 ISZERO PUSH2 0x1A18 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP6 PUSH1 0x40 MLOAD PUSH2 0x1A0F SWAP2 SWAP1 PUSH2 0x223E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1A28 PUSH2 0x1108 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1A7C JUMPI DUP2 DUP2 PUSH1 0x2 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1A70 SWAP2 SWAP1 PUSH2 0x27D0 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1B4E JUMP JUMPDEST PUSH0 DUP2 PUSH0 ADD PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x1B07 JUMPI DUP5 DUP2 DUP5 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AFE SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x29CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP2 SUB DUP3 PUSH0 ADD PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1B97 JUMPI DUP2 DUP2 PUSH1 0x2 ADD PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1BE3 JUMP JUMPDEST DUP2 DUP2 PUSH0 ADD PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x1C40 SWAP2 SWAP1 PUSH2 0x223E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1C7A PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH0 SHL PUSH2 0x1E13 JUMP JUMPDEST PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1CAA DUP3 PUSH2 0x1E1C JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH0 DUP2 MLOAD GT ISZERO PUSH2 0x1D06 JUMPI PUSH2 0x1D00 DUP3 DUP3 PUSH2 0x1EE5 JUMP JUMPDEST POP PUSH2 0x1D0F JUMP JUMPDEST PUSH2 0x1D0E PUSH2 0x1F65 JUMP JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1D1B PUSH2 0x1FA1 JUMP JUMPDEST PUSH2 0x1D51 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD7E6BCF800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x1D5B PUSH2 0x1D13 JUMP JUMPDEST PUSH0 PUSH2 0x1D64 PUSH2 0x1108 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 PUSH1 0x3 ADD SWAP1 DUP2 PUSH2 0x1D77 SWAP2 SWAP1 PUSH2 0x2BEB JUMP JUMPDEST POP DUP2 DUP2 PUSH1 0x4 ADD SWAP1 DUP2 PUSH2 0x1D89 SWAP2 SWAP1 PUSH2 0x2BEB JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x1D97 PUSH2 0x1D13 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1E07 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1DFE SWAP2 SWAP1 PUSH2 0x24F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1E10 DUP2 PUSH2 0x16E5 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE SUB PUSH2 0x1E77 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E6E SWAP2 SWAP1 PUSH2 0x24F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x1EA3 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH0 SHL PUSH2 0x1E13 JUMP JUMPDEST PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x1F0E SWAP2 SWAP1 PUSH2 0x2CFE JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1F46 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1F4B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1F5B DUP6 DUP4 DUP4 PUSH2 0x1FBF JUMP JUMPDEST SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLVALUE GT ISZERO PUSH2 0x1F9F JUMPI PUSH1 0x40 MLOAD PUSH32 0xB398979F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0x1FAA PUSH2 0x17DD JUMP JUMPDEST PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x1FD4 JUMPI PUSH2 0x1FCF DUP3 PUSH2 0x204C JUMP JUMPDEST PUSH2 0x2044 JUMP JUMPDEST PUSH0 DUP3 MLOAD EQ DUP1 ISZERO PUSH2 0x1FFA JUMPI POP PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x203C JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2033 SWAP2 SWAP1 PUSH2 0x24F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP PUSH2 0x2045 JUMP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD GT ISZERO PUSH2 0x205E JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x20D2 DUP3 PUSH2 0x2090 JUMP JUMPDEST PUSH2 0x20DC DUP2 DUP6 PUSH2 0x209A JUMP JUMPDEST SWAP4 POP PUSH2 0x20EC DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x20AA JUMP JUMPDEST PUSH2 0x20F5 DUP2 PUSH2 0x20B8 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2118 DUP2 DUP5 PUSH2 0x20C8 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x215A DUP3 PUSH2 0x2131 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x216A DUP2 PUSH2 0x2150 JUMP JUMPDEST DUP2 EQ PUSH2 0x2174 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2185 DUP2 PUSH2 0x2161 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x219D DUP2 PUSH2 0x218B JUMP JUMPDEST DUP2 EQ PUSH2 0x21A7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x21B8 DUP2 PUSH2 0x2194 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x21D4 JUMPI PUSH2 0x21D3 PUSH2 0x2129 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x21E1 DUP6 DUP3 DUP7 ADD PUSH2 0x2177 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x21F2 DUP6 DUP3 DUP7 ADD PUSH2 0x21AA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2210 DUP2 PUSH2 0x21FC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2229 PUSH0 DUP4 ADD DUP5 PUSH2 0x2207 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2238 DUP2 PUSH2 0x218B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2251 PUSH0 DUP4 ADD DUP5 PUSH2 0x222F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x226E JUMPI PUSH2 0x226D PUSH2 0x2129 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x227B DUP7 DUP3 DUP8 ADD PUSH2 0x2177 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x228C DUP7 DUP3 DUP8 ADD PUSH2 0x2177 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x229D DUP7 DUP3 DUP8 ADD PUSH2 0x21AA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x22BC JUMPI PUSH2 0x22BB PUSH2 0x2129 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x22C9 DUP5 DUP3 DUP6 ADD PUSH2 0x21AA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x22E7 DUP2 PUSH2 0x22D2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2300 PUSH0 DUP4 ADD DUP5 PUSH2 0x22DE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x2344 DUP3 PUSH2 0x20B8 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2363 JUMPI PUSH2 0x2362 PUSH2 0x230E JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2375 PUSH2 0x2120 JUMP JUMPDEST SWAP1 POP PUSH2 0x2381 DUP3 DUP3 PUSH2 0x233B JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x23A0 JUMPI PUSH2 0x239F PUSH2 0x230E JUMP JUMPDEST JUMPDEST PUSH2 0x23A9 DUP3 PUSH2 0x20B8 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x23D6 PUSH2 0x23D1 DUP5 PUSH2 0x2386 JUMP JUMPDEST PUSH2 0x236C JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x23F2 JUMPI PUSH2 0x23F1 PUSH2 0x230A JUMP JUMPDEST JUMPDEST PUSH2 0x23FD DUP5 DUP3 DUP6 PUSH2 0x23B6 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2419 JUMPI PUSH2 0x2418 PUSH2 0x2306 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2429 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x23C4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2448 JUMPI PUSH2 0x2447 PUSH2 0x2129 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2455 DUP6 DUP3 DUP7 ADD PUSH2 0x2177 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2476 JUMPI PUSH2 0x2475 PUSH2 0x212D JUMP JUMPDEST JUMPDEST PUSH2 0x2482 DUP6 DUP3 DUP7 ADD PUSH2 0x2405 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x249E DUP2 PUSH2 0x248C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x24B7 PUSH0 DUP4 ADD DUP5 PUSH2 0x2495 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x24D2 JUMPI PUSH2 0x24D1 PUSH2 0x2129 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x24DF DUP5 DUP3 DUP6 ADD PUSH2 0x2177 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x24F1 DUP2 PUSH2 0x2150 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x250A PUSH0 DUP4 ADD DUP5 PUSH2 0x24E8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2522 DUP2 PUSH2 0x2510 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x253B PUSH0 DUP4 ADD DUP5 PUSH2 0x2519 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2557 JUMPI PUSH2 0x2556 PUSH2 0x2129 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2564 DUP6 DUP3 DUP7 ADD PUSH2 0x2177 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2575 DUP6 DUP3 DUP7 ADD PUSH2 0x2177 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x25C3 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x25D6 JUMPI PUSH2 0x25D5 PUSH2 0x257F JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2640 DUP3 PUSH2 0x218B JUMP JUMPDEST SWAP2 POP PUSH2 0x264B DUP4 PUSH2 0x218B JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x265B JUMPI PUSH2 0x265A PUSH2 0x25DC JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416D6F756E74206D75737420616C77617973206265206C657373207468616E20 PUSH0 DUP3 ADD MSTORE PUSH32 0x746865206E756D626572206F6620706F7373657373696F6E7300000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x26C0 PUSH1 0x39 DUP4 PUSH2 0x209A JUMP JUMPDEST SWAP2 POP PUSH2 0x26CB DUP3 PUSH2 0x2666 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x26ED DUP2 PUSH2 0x26B4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x26FE DUP3 PUSH2 0x218B JUMP JUMPDEST SWAP2 POP PUSH2 0x2709 DUP4 PUSH2 0x218B JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x2721 JUMPI PUSH2 0x2720 PUSH2 0x2609 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2731 DUP3 PUSH2 0x218B JUMP JUMPDEST SWAP2 POP PUSH2 0x273C DUP4 PUSH2 0x218B JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x274A DUP2 PUSH2 0x218B JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x2761 JUMPI PUSH2 0x2760 PUSH2 0x2609 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E207A65726F PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x279C PUSH1 0x20 DUP4 PUSH2 0x209A JUMP JUMPDEST SWAP2 POP PUSH2 0x27A7 DUP3 PUSH2 0x2768 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x27C9 DUP2 PUSH2 0x2790 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x27DA DUP3 PUSH2 0x218B JUMP JUMPDEST SWAP2 POP PUSH2 0x27E5 DUP4 PUSH2 0x218B JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x27FD JUMPI PUSH2 0x27FC PUSH2 0x2609 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x280D DUP3 PUSH2 0x2510 JUMP JUMPDEST SWAP2 POP PUSH2 0x2818 DUP4 PUSH2 0x2510 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2828 JUMPI PUSH2 0x2827 PUSH2 0x25DC JUMP JUMPDEST JUMPDEST PUSH1 0x1 PUSH0 SUB DUP4 EQ PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 DUP4 EQ AND ISZERO PUSH2 0x2860 JUMPI PUSH2 0x285F PUSH2 0x2609 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SDIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2889 DUP2 PUSH2 0x286B JUMP JUMPDEST DUP2 EQ PUSH2 0x2893 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x28A4 DUP2 PUSH2 0x2880 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x28B3 DUP2 PUSH2 0x2510 JUMP JUMPDEST DUP2 EQ PUSH2 0x28BD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x28CE DUP2 PUSH2 0x28AA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x28E2 DUP2 PUSH2 0x2194 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2901 JUMPI PUSH2 0x2900 PUSH2 0x2129 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x290E DUP9 DUP3 DUP10 ADD PUSH2 0x2896 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x291F DUP9 DUP3 DUP10 ADD PUSH2 0x28C0 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x2930 DUP9 DUP3 DUP10 ADD PUSH2 0x28D4 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x2941 DUP9 DUP3 DUP10 ADD PUSH2 0x28D4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x2952 DUP9 DUP3 DUP10 ADD PUSH2 0x2896 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x299E PUSH2 0x2999 PUSH2 0x2994 DUP5 PUSH2 0x295F JUMP JUMPDEST PUSH2 0x297B JUMP JUMPDEST PUSH2 0x2968 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x29AE DUP2 PUSH2 0x2984 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x29C7 PUSH0 DUP4 ADD DUP5 PUSH2 0x29A5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x29E0 PUSH0 DUP4 ADD DUP7 PUSH2 0x24E8 JUMP JUMPDEST PUSH2 0x29ED PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x222F JUMP JUMPDEST PUSH2 0x29FA PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x222F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x2A0B DUP2 PUSH2 0x248C JUMP JUMPDEST DUP2 EQ PUSH2 0x2A15 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2A26 DUP2 PUSH2 0x2A02 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2A41 JUMPI PUSH2 0x2A40 PUSH2 0x2129 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2A4E DUP5 DUP3 DUP6 ADD PUSH2 0x2A18 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x2AB3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x2A78 JUMP JUMPDEST PUSH2 0x2ABD DUP7 DUP4 PUSH2 0x2A78 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2AEF PUSH2 0x2AEA PUSH2 0x2AE5 DUP5 PUSH2 0x218B JUMP JUMPDEST PUSH2 0x297B JUMP JUMPDEST PUSH2 0x218B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2B08 DUP4 PUSH2 0x2AD5 JUMP JUMPDEST PUSH2 0x2B1C PUSH2 0x2B14 DUP3 PUSH2 0x2AF6 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x2A84 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x2B30 PUSH2 0x2B24 JUMP JUMPDEST PUSH2 0x2B3B DUP2 DUP5 DUP5 PUSH2 0x2AFF JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2B5E JUMPI PUSH2 0x2B53 PUSH0 DUP3 PUSH2 0x2B28 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2B41 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x2BA3 JUMPI PUSH2 0x2B74 DUP2 PUSH2 0x2A57 JUMP JUMPDEST PUSH2 0x2B7D DUP5 PUSH2 0x2A69 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x2B8C JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x2BA0 PUSH2 0x2B98 DUP6 PUSH2 0x2A69 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x2B40 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2BC3 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x2BA8 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2BDB DUP4 DUP4 PUSH2 0x2BB4 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2BF4 DUP3 PUSH2 0x2090 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2C0D JUMPI PUSH2 0x2C0C PUSH2 0x230E JUMP JUMPDEST JUMPDEST PUSH2 0x2C17 DUP3 SLOAD PUSH2 0x25AC JUMP JUMPDEST PUSH2 0x2C22 DUP3 DUP3 DUP6 PUSH2 0x2B62 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x2C53 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x2C41 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x2C4B DUP6 DUP3 PUSH2 0x2BD0 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x2CB2 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x2C61 DUP7 PUSH2 0x2A57 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2C88 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2C63 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x2CA5 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x2CA1 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x2BB4 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2CD8 DUP3 PUSH2 0x2CBA JUMP JUMPDEST PUSH2 0x2CE2 DUP2 DUP6 PUSH2 0x2CC4 JUMP JUMPDEST SWAP4 POP PUSH2 0x2CF2 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x20AA JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2D09 DUP3 DUP5 PUSH2 0x2CCE JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID NUMBER PUSH2 0x6D70 SLOAD PUSH16 0x6B656E203C2D3E204554482E2043616D PUSH17 0x546F6B656E20697320537461626C65436F PUSH10 0x6E20746861742072656C PUSH2 0x7469 PUSH15 0x6720455448203C2D3E204A5059A264 PUSH10 0x70667358221220057672 0xC2 0xC9 PUSH16 0xE073382FAFEC2DAFC649D15F56B881DC LOG1 TSTORE 0xE3 0xA9 EXTCODEHASH SWAP8 PUSH14 0x485F364736F6C63430008190033 ",
							"sourceMap": "582:3979:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3011:144:4;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5505:186;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4191:152;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4387:172:15;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6251:244:4;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2406:353:15;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4049:82:4;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2007:245:15;;;:::i;:::-;;931:87:5;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4158:214:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3705:134;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1889:78:15;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4401:171:4;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3155:101:1;;;;;;;;;;;;;:::i;:::-;;1701:161:15;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1334:158:5;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4131:252:15;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2441:144:1;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3268:148:4;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4767:178;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2943:97:15;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1819:58:3;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3065:509:15;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1367:196;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5003:195:4;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3600:502:15;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3405:215:1;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2256:146:15;;;;;;;;;;;;;:::i;:::-;;3011:144:4;3056:13;3081:22;3106:18;:16;:18::i;:::-;3081:43;;3141:1;:7;;3134:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3011:144;:::o;5505:186::-;5578:4;5594:13;5610:12;:10;:12::i;:::-;5594:28;;5632:31;5641:5;5648:7;5657:5;5632:8;:31::i;:::-;5680:4;5673:11;;;5505:186;;;;:::o;4191:152::-;4243:7;4262:22;4287:18;:16;:18::i;:::-;4262:43;;4322:1;:14;;;4315:21;;;4191:152;:::o;4387:172:15:-;4427:7;4444:18;4483:8;4470:9;:7;:9::i;:::-;4465:26;;;;:::i;:::-;4444:47;;4497:11;4522:13;4511:8;:24;;;;:::i;:::-;4497:38;;4548:6;4541:13;;;;4387:172;:::o;6251:244:4:-;6338:4;6354:15;6372:12;:10;:12::i;:::-;6354:30;;6394:37;6410:4;6416:7;6425:5;6394:15;:37::i;:::-;6441:26;6451:4;6457:2;6461:5;6441:9;:26::i;:::-;6484:4;6477:11;;;6251:244;;;;;:::o;2406:353:15:-;2501:6;2471:14;:26;2486:10;2471:26;;;;;;;;;;;;;;;;:36;;2463:106;;;;;;;;;;;;:::i;:::-;;;;;;;;;2605:6;2575:14;:26;2590:10;2575:26;;;;;;;;;;;;;;;;:36;;;;;;;:::i;:::-;;;;;;;;2617:28;2626:10;2638:6;2617:8;:28::i;:::-;2651:20;2695:8;2686:6;2674:9;:7;:9::i;:::-;:18;;;;:::i;:::-;:29;;;;:::i;:::-;2651:52;;2717:10;2709:28;;:45;2738:15;2709:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2457:302;2406:353;:::o;4049:82:4:-;4098:5;4122:2;4115:9;;4049:82;:::o;2007:245:15:-;2081:1;2069:9;:13;2061:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;2125:14;2166:8;2154:9;2142;:7;:9::i;:::-;:21;;;;:::i;:::-;:32;;;;:::i;:::-;2125:49;;2180:25;2186:10;2198:6;2180:5;:25::i;:::-;2241:6;2211:14;:26;2226:10;2211:26;;;;;;;;;;;;;;;;:36;;;;;;;:::i;:::-;;;;;;;;2055:197;2007:245::o;931:87:5:-;985:26;991:12;:10;:12::i;:::-;1005:5;985;:26::i;:::-;931:87;:::o;4158:214:3:-;2653:13;:11;:13::i;:::-;4273:36:::1;4291:17;4273;:36::i;:::-;4319:46;4341:17;4360:4;4319:21;:46::i;:::-;4158:214:::0;;:::o;3705:134::-;3774:7;2924:20;:18;:20::i;:::-;1327:66:9::1;3800:32:3;;3793:39;;3705:134:::0;:::o;1889:78:15:-;1939:7;1961:1;1954:8;;1889:78;:::o;4401:171:4:-;4466:7;4485:22;4510:18;:16;:18::i;:::-;4485:43;;4545:1;:11;;:20;4557:7;4545:20;;;;;;;;;;;;;;;;4538:27;;;4401:171;;;:::o;3155:101:1:-;2334:13;:11;:13::i;:::-;3219:30:::1;3246:1;3219:18;:30::i;:::-;3155:101::o:0;1701:161:15:-;1755:13;1780:77;;;;;;;;;;;;;;;;;;;1701:161;:::o;1334:158:5:-;1409:45;1425:7;1434:12;:10;:12::i;:::-;1448:5;1409:15;:45::i;:::-;1464:21;1470:7;1479:5;1464;:21::i;:::-;1334:158;;:::o;4131:252:15:-;4171:7;4188:17;4208:21;:19;:21::i;:::-;4188:41;;4235:17;4265:21;:19;:21::i;:::-;4255:7;:31;;;;:::i;:::-;4235:51;;4293:11;4351:8;4334:13;4312;4307:41;;;;:::i;:::-;:52;;;;:::i;:::-;4293:66;;4372:6;4365:13;;;;;4131:252;:::o;2441:144:1:-;2487:7;2506:24;2533:20;:18;:20::i;:::-;2506:47;;2570:1;:8;;;;;;;;;;;;2563:15;;;2441:144;:::o;3268:148:4:-;3315:13;3340:22;3365:18;:16;:18::i;:::-;3340:43;;3400:1;:9;;3393:16;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3268:148;:::o;4767:178::-;4836:4;4852:13;4868:12;:10;:12::i;:::-;4852:28;;4890:27;4900:5;4907:2;4911:5;4890:9;:27::i;:::-;4934:4;4927:11;;;4767:178;;;;:::o;2943:97:15:-;3011:24;3017:7;3026:8;3011:5;:24::i;:::-;2943:97;;:::o;1819:58:3:-;;;;;;;;;;;;;;;;;;;:::o;3065:509:15:-;3117:6;3217:12;3497:7;;;;;;;;;;:23;;;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3131:391;;;;;;3536:5;3529:12;;;3065:509;:::o;1367:196::-;4158:30:2;4191:26;:24;:26::i;:::-;4158:59;;4279:19;4302:1;:15;;;;;;;;;;;;4301:16;4279:38;;4327:18;4348:1;:14;;;;;;;;;;;;4327:35;;4706:17;4741:1;4726:11;:16;;;:34;;;;;4746:14;4726:34;4706:54;;4770:17;4805:1;4790:11;:16;;;:50;;;;;4839:1;4818:4;4810:25;;;:30;4790:50;4770:70;;4856:12;4855:13;:30;;;;;4873:12;4872:13;4855:30;4851:91;;;4908:23;;;;;;;;;;;;;;4851:91;4968:1;4951;:14;;;:18;;;;;;;;;;;;;;;;;;4983:14;4979:67;;;5031:4;5013:1;:15;;;:22;;;;;;;;;;;;;;;;;;4979:67;1434:32:15::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;::::0;:12:::1;:32::i;:::-;1472:22;:20;:22::i;:::-;1500:28;1515:12;1500:14;:28::i;:::-;1534:24;:22;:24::i;:::-;5070:14:2::0;5066:101;;;5118:5;5100:1;:15;;;:23;;;;;;;;;;;;;;;;;;5142:14;5154:1;5142:14;;;;;;:::i;:::-;;;;;;;;5066:101;4092:1081;;;;;1367:196:15;:::o;5003:195:4:-;5083:7;5102:22;5127:18;:16;:18::i;:::-;5102:43;;5162:1;:13;;:20;5176:5;5162:20;;;;;;;;;;;;;;;:29;5183:7;5162:29;;;;;;;;;;;;;;;;5155:36;;;5003:195;;;;:::o;3600:502:15:-;3652:6;3752:12;4032:7;;;;;;;;;;;:23;;;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3666:391;;;;;;4070:5;4063:12;;;3600:502;:::o;3405:215:1:-;2334:13;:11;:13::i;:::-;3509:1:::1;3489:22;;:8;:22;;::::0;3485:91:::1;;3562:1;3534:31;;;;;;;;;;;:::i;:::-;;;;;;;;3485:91;3585:28;3604:8;3585:18;:28::i;:::-;3405:215:::0;:::o;2256:146:15:-;2293:14;2310;2293:31;;2330:25;2336:10;2348:6;2330:5;:25::i;:::-;2391:6;2361:14;:26;2376:10;2361:26;;;;;;;;;;;;;;;;:36;;;;;;;:::i;:::-;;;;;;;;2287:115;2256:146::o;2242:153:4:-;2292:22;2359:20;2349:30;;2242:153;:::o;887:96:6:-;940:7;966:10;959:17;;887:96;:::o;10264:128:4:-;10348:37;10357:5;10364:7;10373:5;10380:4;10348:8;:37::i;:::-;10264:128;;;:::o;11993:477::-;12092:24;12119:25;12129:5;12136:7;12119:9;:25::i;:::-;12092:52;;12178:17;12158:16;:37;12154:310;;12234:5;12215:16;:24;12211:130;;;12293:7;12302:16;12320:5;12266:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;12211:130;12382:57;12391:5;12398:7;12426:5;12407:16;:24;12433:5;12382:8;:57::i;:::-;12154:310;12082:388;11993:477;;;:::o;6868:300::-;6967:1;6951:18;;:4;:18;;;6947:86;;7019:1;6992:30;;;;;;;;;;;:::i;:::-;;;;;;;;6947:86;7060:1;7046:16;;:2;:16;;;7042:86;;7114:1;7085:32;;;;;;;;;;;:::i;:::-;;;;;;;;7042:86;7137:24;7145:4;7151:2;7155:5;7137:7;:24::i;:::-;6868:300;;;:::o;8996:208::-;9085:1;9066:21;;:7;:21;;;9062:91;;9139:1;9110:32;;;;;;;;;;;:::i;:::-;;;;;;;;9062:91;9162:35;9178:1;9182:7;9191:5;9162:7;:35::i;:::-;8996:208;;:::o;9522:206::-;9611:1;9592:21;;:7;:21;;;9588:89;;9663:1;9636:30;;;;;;;;;;;:::i;:::-;;;;;;;;9588:89;9686:35;9694:7;9711:1;9715:5;9686:7;:35::i;:::-;9522:206;;:::o;4599:312:3:-;4688:6;4671:23;;4679:4;4671:23;;;:120;;;;4785:6;4749:42;;:32;:30;:32::i;:::-;:42;;;;4671:120;4654:251;;;4865:29;;;;;;;;;;;;;;4654:251;4599:312::o;1567:104:15:-;2334:13:1;:11;:13::i;:::-;1567:104:15;:::o;6052:538:3:-;6169:17;6151:50;;;:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;6147:437;;6555:17;6513:60;;;;;;;;;;;:::i;:::-;;;;;;;;6147:437;1327:66:9;6253:32:3;;6245:4;:40;6241:120;;6341:4;6312:34;;;;;;;;;;;:::i;:::-;;;;;;;;6241:120;6374:54;6404:17;6423:4;6374:29;:54::i;:::-;6204:235;6052:538;;:::o;5028:213::-;5111:6;5094:23;;5102:4;5094:23;;;5090:145;;5195:29;;;;;;;;;;;;;;5090:145;5028:213::o;2658:162:1:-;2728:12;:10;:12::i;:::-;2717:23;;:7;:5;:7::i;:::-;:23;;;2713:101;;2790:12;:10;:12::i;:::-;2763:40;;;;;;;;;;;:::i;:::-;;;;;;;;2713:101;2658:162::o;3774:248::-;3847:24;3874:20;:18;:20::i;:::-;3847:47;;3904:16;3923:1;:8;;;;;;;;;;;;3904:27;;3952:8;3941:1;:8;;;:19;;;;;;;;;;;;;;;;;;4006:8;3975:40;;3996:8;3975:40;;;;;;;;;;;;3837:185;;3774:248;:::o;1192:159::-;1244:24;1313:22;1303:32;;1192:159;:::o;8737:170:2:-;8795:30;8870:21;8860:31;;8737:170;:::o;2577:147:4:-;6931:20:2;:18;:20::i;:::-;2679:38:4::1;2702:5;2709:7;2679:22;:38::i;:::-;2577:147:::0;;:::o;666:65:5:-;6931:20:2;:18;:20::i;:::-;666:65:5:o;1847:127:1:-;6931:20:2;:18;:20::i;:::-;1929:38:1::1;1954:12;1929:24;:38::i;:::-;1847:127:::0;:::o;2968:67:3:-;6931:20:2;:18;:20::i;:::-;2968:67:3:o;11224:487:4:-;11332:22;11357:18;:16;:18::i;:::-;11332:43;;11406:1;11389:19;;:5;:19;;;11385:89;;11460:1;11431:32;;;;;;;;;;;:::i;:::-;;;;;;;;11385:89;11506:1;11487:21;;:7;:21;;;11483:90;;11559:1;11531:31;;;;;;;;;;;:::i;:::-;;;;;;;;11483:90;11614:5;11582:1;:13;;:20;11596:5;11582:20;;;;;;;;;;;;;;;:29;11603:7;11582:29;;;;;;;;;;;;;;;:37;;;;11633:9;11629:76;;;11679:7;11663:31;;11672:5;11663:31;;;11688:5;11663:31;;;;;;:::i;:::-;;;;;;;;11629:76;11322:389;11224:487;;;;:::o;7483:1170::-;7568:22;7593:18;:16;:18::i;:::-;7568:43;;7641:1;7625:18;;:4;:18;;;7621:546;;7779:5;7761:1;:14;;;:23;;;;;;;:::i;:::-;;;;;;;;7621:546;;;7815:19;7837:1;:11;;:17;7849:4;7837:17;;;;;;;;;;;;;;;;7815:39;;7886:5;7872:11;:19;7868:115;;;7943:4;7949:11;7962:5;7918:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;7868:115;8137:5;8123:11;:19;8103:1;:11;;:17;8115:4;8103:17;;;;;;;;;;;;;;;:39;;;;7801:366;7621:546;8195:1;8181:16;;:2;:16;;;8177:429;;8362:5;8344:1;:14;;;:23;;;;;;;;;;;8177:429;;;8576:5;8557:1;:11;;:15;8569:2;8557:15;;;;;;;;;;;;;;;;:24;;;;;;;;;;;8177:429;8636:2;8621:25;;8630:4;8621:25;;;8640:5;8621:25;;;;;;:::i;:::-;;;;;;;;7558:1095;7483:1170;;;:::o;1957:138:9:-;2009:7;2035:47;1327:66;2062:19;;2035:26;:47::i;:::-;:53;;;;;;;;;;;;2028:60;;1957:138;:::o;2779:335::-;2870:37;2889:17;2870:18;:37::i;:::-;2931:17;2922:27;;;;;;;;;;;;2978:1;2964:4;:11;:15;2960:148;;;2995:53;3024:17;3043:4;2995:28;:53::i;:::-;;2960:148;;;3079:18;:16;:18::i;:::-;2960:148;2779:335;;:::o;7084:141:2:-;7151:17;:15;:17::i;:::-;7146:73;;7191:17;;;;;;;;;;;;;;7146:73;7084:141::o;2730:216:4:-;6931:20:2;:18;:20::i;:::-;2842:22:4::1;2867:18;:16;:18::i;:::-;2842:43;;2905:5;2895:1;:7;;:15;;;;;;:::i;:::-;;2932:7;2920:1;:9;;:19;;;;;;:::i;:::-;;2832:114;2730:216:::0;;:::o;1980:235:1:-;6931:20:2;:18;:20::i;:::-;2100:1:1::1;2076:26;;:12;:26;;::::0;2072:95:::1;;2153:1;2125:31;;;;;;;;;;;:::i;:::-;;;;;;;;2072:95;2176:32;2195:12;2176:18;:32::i;:::-;1980:235:::0;:::o;1684:190:14:-;1745:21;1854:4;1844:14;;1684:190;;;:::o;2186:281:9:-;2296:1;2263:17;:29;;;:34;2259:119;;2349:17;2320:47;;;;;;;;;;;:::i;:::-;;;;;;;;2259:119;2443:17;2387:47;1327:66;2414:19;;2387:26;:47::i;:::-;:53;;;:73;;;;;;;;;;;;;;;;;;2186:281;:::o;4106:253:13:-;4189:12;4214;4228:23;4255:6;:19;;4275:4;4255:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4213:67;;;;4297:55;4324:6;4332:7;4341:10;4297:26;:55::i;:::-;4290:62;;;;4106:253;;;;:::o;6598:122:9:-;6660:1;6648:9;:13;6644:70;;;6684:19;;;;;;;;;;;;;;6644:70;6598:122::o;8487:120:2:-;8537:4;8560:26;:24;:26::i;:::-;:40;;;;;;;;;;;;8553:47;;8487:120;:::o;4625:582:13:-;4769:12;4798:7;4793:408;;4821:19;4829:10;4821:7;:19::i;:::-;4793:408;;;5066:1;5045:10;:17;:22;:49;;;;;5093:1;5071:6;:18;;;:23;5045:49;5041:119;;;5138:6;5121:24;;;;;;;;;;;:::i;:::-;;;;;;;;5041:119;5180:10;5173:17;;;;4793:408;4625:582;;;;;;:::o;5743:516::-;5894:1;5874:10;:17;:21;5870:383;;;6102:10;6096:17;6158:15;6145:10;6141:2;6137:19;6130:44;5870:383;6225:17;;;;;;;;;;;;;;7:99:16;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:139::-;376:6;371:3;366;360:23;417:1;408:6;403:3;399:16;392:27;287:139;;;:::o;432:102::-;473:6;524:2;520:7;515:2;508:5;504:14;500:28;490:38;;432:102;;;:::o;540:377::-;628:3;656:39;689:5;656:39;:::i;:::-;711:71;775:6;770:3;711:71;:::i;:::-;704:78;;791:65;849:6;844:3;837:4;830:5;826:16;791:65;:::i;:::-;881:29;903:6;881:29;:::i;:::-;876:3;872:39;865:46;;632:285;540:377;;;;:::o;923:313::-;1036:4;1074:2;1063:9;1059:18;1051:26;;1123:9;1117:4;1113:20;1109:1;1098:9;1094:17;1087:47;1151:78;1224:4;1215:6;1151:78;:::i;:::-;1143:86;;923:313;;;;:::o;1242:75::-;1275:6;1308:2;1302:9;1292:19;;1242:75;:::o;1323:117::-;1432:1;1429;1422:12;1446:117;1555:1;1552;1545:12;1569:126;1606:7;1646:42;1639:5;1635:54;1624:65;;1569:126;;;:::o;1701:96::-;1738:7;1767:24;1785:5;1767:24;:::i;:::-;1756:35;;1701:96;;;:::o;1803:122::-;1876:24;1894:5;1876:24;:::i;:::-;1869:5;1866:35;1856:63;;1915:1;1912;1905:12;1856:63;1803:122;:::o;1931:139::-;1977:5;2015:6;2002:20;1993:29;;2031:33;2058:5;2031:33;:::i;:::-;1931:139;;;;:::o;2076:77::-;2113:7;2142:5;2131:16;;2076:77;;;:::o;2159:122::-;2232:24;2250:5;2232:24;:::i;:::-;2225:5;2222:35;2212:63;;2271:1;2268;2261:12;2212:63;2159:122;:::o;2287:139::-;2333:5;2371:6;2358:20;2349:29;;2387:33;2414:5;2387:33;:::i;:::-;2287:139;;;;:::o;2432:474::-;2500:6;2508;2557:2;2545:9;2536:7;2532:23;2528:32;2525:119;;;2563:79;;:::i;:::-;2525:119;2683:1;2708:53;2753:7;2744:6;2733:9;2729:22;2708:53;:::i;:::-;2698:63;;2654:117;2810:2;2836:53;2881:7;2872:6;2861:9;2857:22;2836:53;:::i;:::-;2826:63;;2781:118;2432:474;;;;;:::o;2912:90::-;2946:7;2989:5;2982:13;2975:21;2964:32;;2912:90;;;:::o;3008:109::-;3089:21;3104:5;3089:21;:::i;:::-;3084:3;3077:34;3008:109;;:::o;3123:210::-;3210:4;3248:2;3237:9;3233:18;3225:26;;3261:65;3323:1;3312:9;3308:17;3299:6;3261:65;:::i;:::-;3123:210;;;;:::o;3339:118::-;3426:24;3444:5;3426:24;:::i;:::-;3421:3;3414:37;3339:118;;:::o;3463:222::-;3556:4;3594:2;3583:9;3579:18;3571:26;;3607:71;3675:1;3664:9;3660:17;3651:6;3607:71;:::i;:::-;3463:222;;;;:::o;3691:619::-;3768:6;3776;3784;3833:2;3821:9;3812:7;3808:23;3804:32;3801:119;;;3839:79;;:::i;:::-;3801:119;3959:1;3984:53;4029:7;4020:6;4009:9;4005:22;3984:53;:::i;:::-;3974:63;;3930:117;4086:2;4112:53;4157:7;4148:6;4137:9;4133:22;4112:53;:::i;:::-;4102:63;;4057:118;4214:2;4240:53;4285:7;4276:6;4265:9;4261:22;4240:53;:::i;:::-;4230:63;;4185:118;3691:619;;;;;:::o;4316:329::-;4375:6;4424:2;4412:9;4403:7;4399:23;4395:32;4392:119;;;4430:79;;:::i;:::-;4392:119;4550:1;4575:53;4620:7;4611:6;4600:9;4596:22;4575:53;:::i;:::-;4565:63;;4521:117;4316:329;;;;:::o;4651:86::-;4686:7;4726:4;4719:5;4715:16;4704:27;;4651:86;;;:::o;4743:112::-;4826:22;4842:5;4826:22;:::i;:::-;4821:3;4814:35;4743:112;;:::o;4861:214::-;4950:4;4988:2;4977:9;4973:18;4965:26;;5001:67;5065:1;5054:9;5050:17;5041:6;5001:67;:::i;:::-;4861:214;;;;:::o;5081:117::-;5190:1;5187;5180:12;5204:117;5313:1;5310;5303:12;5327:180;5375:77;5372:1;5365:88;5472:4;5469:1;5462:15;5496:4;5493:1;5486:15;5513:281;5596:27;5618:4;5596:27;:::i;:::-;5588:6;5584:40;5726:6;5714:10;5711:22;5690:18;5678:10;5675:34;5672:62;5669:88;;;5737:18;;:::i;:::-;5669:88;5777:10;5773:2;5766:22;5556:238;5513:281;;:::o;5800:129::-;5834:6;5861:20;;:::i;:::-;5851:30;;5890:33;5918:4;5910:6;5890:33;:::i;:::-;5800:129;;;:::o;5935:307::-;5996:4;6086:18;6078:6;6075:30;6072:56;;;6108:18;;:::i;:::-;6072:56;6146:29;6168:6;6146:29;:::i;:::-;6138:37;;6230:4;6224;6220:15;6212:23;;5935:307;;;:::o;6248:148::-;6346:6;6341:3;6336;6323:30;6387:1;6378:6;6373:3;6369:16;6362:27;6248:148;;;:::o;6402:423::-;6479:5;6504:65;6520:48;6561:6;6520:48;:::i;:::-;6504:65;:::i;:::-;6495:74;;6592:6;6585:5;6578:21;6630:4;6623:5;6619:16;6668:3;6659:6;6654:3;6650:16;6647:25;6644:112;;;6675:79;;:::i;:::-;6644:112;6765:54;6812:6;6807:3;6802;6765:54;:::i;:::-;6485:340;6402:423;;;;;:::o;6844:338::-;6899:5;6948:3;6941:4;6933:6;6929:17;6925:27;6915:122;;6956:79;;:::i;:::-;6915:122;7073:6;7060:20;7098:78;7172:3;7164:6;7157:4;7149:6;7145:17;7098:78;:::i;:::-;7089:87;;6905:277;6844:338;;;;:::o;7188:652::-;7265:6;7273;7322:2;7310:9;7301:7;7297:23;7293:32;7290:119;;;7328:79;;:::i;:::-;7290:119;7448:1;7473:53;7518:7;7509:6;7498:9;7494:22;7473:53;:::i;:::-;7463:63;;7419:117;7603:2;7592:9;7588:18;7575:32;7634:18;7626:6;7623:30;7620:117;;;7656:79;;:::i;:::-;7620:117;7761:62;7815:7;7806:6;7795:9;7791:22;7761:62;:::i;:::-;7751:72;;7546:287;7188:652;;;;;:::o;7846:77::-;7883:7;7912:5;7901:16;;7846:77;;;:::o;7929:118::-;8016:24;8034:5;8016:24;:::i;:::-;8011:3;8004:37;7929:118;;:::o;8053:222::-;8146:4;8184:2;8173:9;8169:18;8161:26;;8197:71;8265:1;8254:9;8250:17;8241:6;8197:71;:::i;:::-;8053:222;;;;:::o;8281:329::-;8340:6;8389:2;8377:9;8368:7;8364:23;8360:32;8357:119;;;8395:79;;:::i;:::-;8357:119;8515:1;8540:53;8585:7;8576:6;8565:9;8561:22;8540:53;:::i;:::-;8530:63;;8486:117;8281:329;;;;:::o;8616:118::-;8703:24;8721:5;8703:24;:::i;:::-;8698:3;8691:37;8616:118;;:::o;8740:222::-;8833:4;8871:2;8860:9;8856:18;8848:26;;8884:71;8952:1;8941:9;8937:17;8928:6;8884:71;:::i;:::-;8740:222;;;;:::o;8968:76::-;9004:7;9033:5;9022:16;;8968:76;;;:::o;9050:115::-;9135:23;9152:5;9135:23;:::i;:::-;9130:3;9123:36;9050:115;;:::o;9171:218::-;9262:4;9300:2;9289:9;9285:18;9277:26;;9313:69;9379:1;9368:9;9364:17;9355:6;9313:69;:::i;:::-;9171:218;;;;:::o;9395:474::-;9463:6;9471;9520:2;9508:9;9499:7;9495:23;9491:32;9488:119;;;9526:79;;:::i;:::-;9488:119;9646:1;9671:53;9716:7;9707:6;9696:9;9692:22;9671:53;:::i;:::-;9661:63;;9617:117;9773:2;9799:53;9844:7;9835:6;9824:9;9820:22;9799:53;:::i;:::-;9789:63;;9744:118;9395:474;;;;;:::o;9875:180::-;9923:77;9920:1;9913:88;10020:4;10017:1;10010:15;10044:4;10041:1;10034:15;10061:320;10105:6;10142:1;10136:4;10132:12;10122:22;;10189:1;10183:4;10179:12;10210:18;10200:81;;10266:4;10258:6;10254:17;10244:27;;10200:81;10328:2;10320:6;10317:14;10297:18;10294:38;10291:84;;10347:18;;:::i;:::-;10291:84;10112:269;10061:320;;;:::o;10387:180::-;10435:77;10432:1;10425:88;10532:4;10529:1;10522:15;10556:4;10553:1;10546:15;10573:180;10621:77;10618:1;10611:88;10718:4;10715:1;10708:15;10742:4;10739:1;10732:15;10759:185;10799:1;10816:20;10834:1;10816:20;:::i;:::-;10811:25;;10850:20;10868:1;10850:20;:::i;:::-;10845:25;;10889:1;10879:35;;10894:18;;:::i;:::-;10879:35;10936:1;10933;10929:9;10924:14;;10759:185;;;;:::o;10950:244::-;11090:34;11086:1;11078:6;11074:14;11067:58;11159:27;11154:2;11146:6;11142:15;11135:52;10950:244;:::o;11200:366::-;11342:3;11363:67;11427:2;11422:3;11363:67;:::i;:::-;11356:74;;11439:93;11528:3;11439:93;:::i;:::-;11557:2;11552:3;11548:12;11541:19;;11200:366;;;:::o;11572:419::-;11738:4;11776:2;11765:9;11761:18;11753:26;;11825:9;11819:4;11815:20;11811:1;11800:9;11796:17;11789:47;11853:131;11979:4;11853:131;:::i;:::-;11845:139;;11572:419;;;:::o;11997:194::-;12037:4;12057:20;12075:1;12057:20;:::i;:::-;12052:25;;12091:20;12109:1;12091:20;:::i;:::-;12086:25;;12135:1;12132;12128:9;12120:17;;12159:1;12153:4;12150:11;12147:37;;;12164:18;;:::i;:::-;12147:37;11997:194;;;;:::o;12197:410::-;12237:7;12260:20;12278:1;12260:20;:::i;:::-;12255:25;;12294:20;12312:1;12294:20;:::i;:::-;12289:25;;12349:1;12346;12342:9;12371:30;12389:11;12371:30;:::i;:::-;12360:41;;12550:1;12541:7;12537:15;12534:1;12531:22;12511:1;12504:9;12484:83;12461:139;;12580:18;;:::i;:::-;12461:139;12245:362;12197:410;;;;:::o;12613:182::-;12753:34;12749:1;12741:6;12737:14;12730:58;12613:182;:::o;12801:366::-;12943:3;12964:67;13028:2;13023:3;12964:67;:::i;:::-;12957:74;;13040:93;13129:3;13040:93;:::i;:::-;13158:2;13153:3;13149:12;13142:19;;12801:366;;;:::o;13173:419::-;13339:4;13377:2;13366:9;13362:18;13354:26;;13426:9;13420:4;13416:20;13412:1;13401:9;13397:17;13390:47;13454:131;13580:4;13454:131;:::i;:::-;13446:139;;13173:419;;;:::o;13598:191::-;13638:3;13657:20;13675:1;13657:20;:::i;:::-;13652:25;;13691:20;13709:1;13691:20;:::i;:::-;13686:25;;13734:1;13731;13727:9;13720:16;;13755:3;13752:1;13749:10;13746:36;;;13762:18;;:::i;:::-;13746:36;13598:191;;;;:::o;13795:385::-;13834:1;13851:19;13868:1;13851:19;:::i;:::-;13846:24;;13884:19;13901:1;13884:19;:::i;:::-;13879:24;;13922:1;13912:35;;13927:18;;:::i;:::-;13912:35;14113:1;14110;14106:9;14103:1;14100:16;14019:66;14016:1;14013:73;13996:130;13993:156;;;14129:18;;:::i;:::-;13993:156;14172:1;14169;14164:10;14159:15;;13795:385;;;;:::o;14186:105::-;14222:7;14262:22;14255:5;14251:34;14240:45;;14186:105;;;:::o;14297:120::-;14369:23;14386:5;14369:23;:::i;:::-;14362:5;14359:34;14349:62;;14407:1;14404;14397:12;14349:62;14297:120;:::o;14423:141::-;14479:5;14510:6;14504:13;14495:22;;14526:32;14552:5;14526:32;:::i;:::-;14423:141;;;;:::o;14570:120::-;14642:23;14659:5;14642:23;:::i;:::-;14635:5;14632:34;14622:62;;14680:1;14677;14670:12;14622:62;14570:120;:::o;14696:141::-;14752:5;14783:6;14777:13;14768:22;;14799:32;14825:5;14799:32;:::i;:::-;14696:141;;;;:::o;14843:143::-;14900:5;14931:6;14925:13;14916:22;;14947:33;14974:5;14947:33;:::i;:::-;14843:143;;;;:::o;14992:971::-;15095:6;15103;15111;15119;15127;15176:3;15164:9;15155:7;15151:23;15147:33;15144:120;;;15183:79;;:::i;:::-;15144:120;15303:1;15328:63;15383:7;15374:6;15363:9;15359:22;15328:63;:::i;:::-;15318:73;;15274:127;15440:2;15466:63;15521:7;15512:6;15501:9;15497:22;15466:63;:::i;:::-;15456:73;;15411:128;15578:2;15604:64;15660:7;15651:6;15640:9;15636:22;15604:64;:::i;:::-;15594:74;;15549:129;15717:2;15743:64;15799:7;15790:6;15779:9;15775:22;15743:64;:::i;:::-;15733:74;;15688:129;15856:3;15883:63;15938:7;15929:6;15918:9;15914:22;15883:63;:::i;:::-;15873:73;;15827:129;14992:971;;;;;;;;:::o;15969:85::-;16014:7;16043:5;16032:16;;15969:85;;;:::o;16060:101::-;16096:7;16136:18;16129:5;16125:30;16114:41;;16060:101;;;:::o;16167:60::-;16195:3;16216:5;16209:12;;16167:60;;;:::o;16233:156::-;16290:9;16323:60;16340:42;16349:32;16375:5;16349:32;:::i;:::-;16340:42;:::i;:::-;16323:60;:::i;:::-;16310:73;;16233:156;;;:::o;16395:145::-;16489:44;16527:5;16489:44;:::i;:::-;16484:3;16477:57;16395:145;;:::o;16546:236::-;16646:4;16684:2;16673:9;16669:18;16661:26;;16697:78;16772:1;16761:9;16757:17;16748:6;16697:78;:::i;:::-;16546:236;;;;:::o;16788:442::-;16937:4;16975:2;16964:9;16960:18;16952:26;;16988:71;17056:1;17045:9;17041:17;17032:6;16988:71;:::i;:::-;17069:72;17137:2;17126:9;17122:18;17113:6;17069:72;:::i;:::-;17151;17219:2;17208:9;17204:18;17195:6;17151:72;:::i;:::-;16788:442;;;;;;:::o;17236:122::-;17309:24;17327:5;17309:24;:::i;:::-;17302:5;17299:35;17289:63;;17348:1;17345;17338:12;17289:63;17236:122;:::o;17364:143::-;17421:5;17452:6;17446:13;17437:22;;17468:33;17495:5;17468:33;:::i;:::-;17364:143;;;;:::o;17513:351::-;17583:6;17632:2;17620:9;17611:7;17607:23;17603:32;17600:119;;;17638:79;;:::i;:::-;17600:119;17758:1;17783:64;17839:7;17830:6;17819:9;17815:22;17783:64;:::i;:::-;17773:74;;17729:128;17513:351;;;;:::o;17870:141::-;17919:4;17942:3;17934:11;;17965:3;17962:1;17955:14;17999:4;17996:1;17986:18;17978:26;;17870:141;;;:::o;18017:93::-;18054:6;18101:2;18096;18089:5;18085:14;18081:23;18071:33;;18017:93;;;:::o;18116:107::-;18160:8;18210:5;18204:4;18200:16;18179:37;;18116:107;;;;:::o;18229:393::-;18298:6;18348:1;18336:10;18332:18;18371:97;18401:66;18390:9;18371:97;:::i;:::-;18489:39;18519:8;18508:9;18489:39;:::i;:::-;18477:51;;18561:4;18557:9;18550:5;18546:21;18537:30;;18610:4;18600:8;18596:19;18589:5;18586:30;18576:40;;18305:317;;18229:393;;;;;:::o;18628:142::-;18678:9;18711:53;18729:34;18738:24;18756:5;18738:24;:::i;:::-;18729:34;:::i;:::-;18711:53;:::i;:::-;18698:66;;18628:142;;;:::o;18776:75::-;18819:3;18840:5;18833:12;;18776:75;;;:::o;18857:269::-;18967:39;18998:7;18967:39;:::i;:::-;19028:91;19077:41;19101:16;19077:41;:::i;:::-;19069:6;19062:4;19056:11;19028:91;:::i;:::-;19022:4;19015:105;18933:193;18857:269;;;:::o;19132:73::-;19177:3;19132:73;:::o;19211:189::-;19288:32;;:::i;:::-;19329:65;19387:6;19379;19373:4;19329:65;:::i;:::-;19264:136;19211:189;;:::o;19406:186::-;19466:120;19483:3;19476:5;19473:14;19466:120;;;19537:39;19574:1;19567:5;19537:39;:::i;:::-;19510:1;19503:5;19499:13;19490:22;;19466:120;;;19406:186;;:::o;19598:543::-;19699:2;19694:3;19691:11;19688:446;;;19733:38;19765:5;19733:38;:::i;:::-;19817:29;19835:10;19817:29;:::i;:::-;19807:8;19803:44;20000:2;19988:10;19985:18;19982:49;;;20021:8;20006:23;;19982:49;20044:80;20100:22;20118:3;20100:22;:::i;:::-;20090:8;20086:37;20073:11;20044:80;:::i;:::-;19703:431;;19688:446;19598:543;;;:::o;20147:117::-;20201:8;20251:5;20245:4;20241:16;20220:37;;20147:117;;;;:::o;20270:169::-;20314:6;20347:51;20395:1;20391:6;20383:5;20380:1;20376:13;20347:51;:::i;:::-;20343:56;20428:4;20422;20418:15;20408:25;;20321:118;20270:169;;;;:::o;20444:295::-;20520:4;20666:29;20691:3;20685:4;20666:29;:::i;:::-;20658:37;;20728:3;20725:1;20721:11;20715:4;20712:21;20704:29;;20444:295;;;;:::o;20744:1395::-;20861:37;20894:3;20861:37;:::i;:::-;20963:18;20955:6;20952:30;20949:56;;;20985:18;;:::i;:::-;20949:56;21029:38;21061:4;21055:11;21029:38;:::i;:::-;21114:67;21174:6;21166;21160:4;21114:67;:::i;:::-;21208:1;21232:4;21219:17;;21264:2;21256:6;21253:14;21281:1;21276:618;;;;21938:1;21955:6;21952:77;;;22004:9;21999:3;21995:19;21989:26;21980:35;;21952:77;22055:67;22115:6;22108:5;22055:67;:::i;:::-;22049:4;22042:81;21911:222;21246:887;;21276:618;21328:4;21324:9;21316:6;21312:22;21362:37;21394:4;21362:37;:::i;:::-;21421:1;21435:208;21449:7;21446:1;21443:14;21435:208;;;21528:9;21523:3;21519:19;21513:26;21505:6;21498:42;21579:1;21571:6;21567:14;21557:24;;21626:2;21615:9;21611:18;21598:31;;21472:4;21469:1;21465:12;21460:17;;21435:208;;;21671:6;21662:7;21659:19;21656:179;;;21729:9;21724:3;21720:19;21714:26;21772:48;21814:4;21806:6;21802:17;21791:9;21772:48;:::i;:::-;21764:6;21757:64;21679:156;21656:179;21881:1;21877;21869:6;21865:14;21861:22;21855:4;21848:36;21283:611;;;21246:887;;20836:1303;;;20744:1395;;:::o;22145:98::-;22196:6;22230:5;22224:12;22214:22;;22145:98;;;:::o;22249:147::-;22350:11;22387:3;22372:18;;22249:147;;;;:::o;22402:386::-;22506:3;22534:38;22566:5;22534:38;:::i;:::-;22588:88;22669:6;22664:3;22588:88;:::i;:::-;22581:95;;22685:65;22743:6;22738:3;22731:4;22724:5;22720:16;22685:65;:::i;:::-;22775:6;22770:3;22766:16;22759:23;;22510:278;22402:386;;;;:::o;22794:271::-;22924:3;22946:93;23035:3;23026:6;22946:93;:::i;:::-;22939:100;;23056:3;23049:10;;22794:271;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2332400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"Burn_CTK(address,uint256)": "infinite",
								"ETH_JPY()": "infinite",
								"Exchange_ETH_to_CTK()": "infinite",
								"JPY_ETH()": "infinite",
								"UPGRADE_INTERFACE_VERSION()": "infinite",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2970",
								"burn(uint256)": "infinite",
								"burnFrom(address,uint256)": "infinite",
								"decimals()": "450",
								"description()": "infinite",
								"getAward()": "infinite",
								"get_Latest_EU_Price()": "infinite",
								"get_Latest_JU_Price()": "infinite",
								"initialize(address)": "infinite",
								"name()": "infinite",
								"owner()": "2612",
								"proxiableUUID()": "infinite",
								"renounceOwnership()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2576",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite",
								"upgradeToAndCall(address,bytes)": "infinite",
								"version()": "399",
								"withdraw(uint256)": "infinite"
							},
							"internal": {
								"Get_mint_quantity(uint256)": "infinite",
								"_authorizeUpgrade(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 582,
									"end": 4561,
									"name": "PUSH",
									"source": 15,
									"value": "A0"
								},
								{
									"begin": 582,
									"end": 4561,
									"name": "PUSH",
									"source": 15,
									"value": "40"
								},
								{
									"begin": 582,
									"end": 4561,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 1171,
									"end": 1175,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 867,
									"end": 1363,
									"name": "CALLVALUE",
									"source": 15
								},
								{
									"begin": 867,
									"end": 1363,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 867,
									"end": 1363,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 867,
									"end": 1363,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 867,
									"end": 1363,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 867,
									"end": 1363,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 867,
									"end": 1363,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 867,
									"end": 1363,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 867,
									"end": 1363,
									"name": "tag",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 867,
									"end": 1363,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 867,
									"end": 1363,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 887,
									"end": 909,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "4"
								},
								{
									"begin": 887,
									"end": 907,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "5"
								},
								{
									"begin": 887,
									"end": 907,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 887,
									"end": 907,
									"name": "SHL",
									"source": 15
								},
								{
									"begin": 887,
									"end": 909,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 887,
									"end": 909,
									"name": "SHR",
									"source": 15
								},
								{
									"begin": 887,
									"end": 909,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 887,
									"end": 909,
									"name": "tag",
									"source": 15,
									"value": "4"
								},
								{
									"begin": 887,
									"end": 909,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1234,
									"end": 1276,
									"name": "PUSH",
									"source": 15,
									"value": "694AA1769357215DE4FAC081BF1F309ADC325306"
								},
								{
									"begin": 1202,
									"end": 1209,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1202,
									"end": 1209,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 1202,
									"end": 1277,
									"name": "PUSH",
									"source": 15,
									"value": "100"
								},
								{
									"begin": 1202,
									"end": 1277,
									"name": "EXP",
									"source": 15
								},
								{
									"begin": 1202,
									"end": 1277,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 1202,
									"end": 1277,
									"name": "SLOAD",
									"source": 15
								},
								{
									"begin": 1202,
									"end": 1277,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 1202,
									"end": 1277,
									"name": "PUSH",
									"source": 15,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1202,
									"end": 1277,
									"name": "MUL",
									"source": 15
								},
								{
									"begin": 1202,
									"end": 1277,
									"name": "NOT",
									"source": 15
								},
								{
									"begin": 1202,
									"end": 1277,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 1202,
									"end": 1277,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 1202,
									"end": 1277,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 1202,
									"end": 1277,
									"name": "PUSH",
									"source": 15,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1202,
									"end": 1277,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 1202,
									"end": 1277,
									"name": "MUL",
									"source": 15
								},
								{
									"begin": 1202,
									"end": 1277,
									"name": "OR",
									"source": 15
								},
								{
									"begin": 1202,
									"end": 1277,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 1202,
									"end": 1277,
									"name": "SSTORE",
									"source": 15
								},
								{
									"begin": 1202,
									"end": 1277,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1315,
									"end": 1357,
									"name": "PUSH",
									"source": 15,
									"value": "8A6AF2B75F23831ADC973CE6288E5329F63D86C6"
								},
								{
									"begin": 1283,
									"end": 1290,
									"name": "PUSH",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 1283,
									"end": 1290,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1283,
									"end": 1358,
									"name": "PUSH",
									"source": 15,
									"value": "100"
								},
								{
									"begin": 1283,
									"end": 1358,
									"name": "EXP",
									"source": 15
								},
								{
									"begin": 1283,
									"end": 1358,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 1283,
									"end": 1358,
									"name": "SLOAD",
									"source": 15
								},
								{
									"begin": 1283,
									"end": 1358,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 1283,
									"end": 1358,
									"name": "PUSH",
									"source": 15,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1283,
									"end": 1358,
									"name": "MUL",
									"source": 15
								},
								{
									"begin": 1283,
									"end": 1358,
									"name": "NOT",
									"source": 15
								},
								{
									"begin": 1283,
									"end": 1358,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 1283,
									"end": 1358,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 1283,
									"end": 1358,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 1283,
									"end": 1358,
									"name": "PUSH",
									"source": 15,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1283,
									"end": 1358,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 1283,
									"end": 1358,
									"name": "MUL",
									"source": 15
								},
								{
									"begin": 1283,
									"end": 1358,
									"name": "OR",
									"source": 15
								},
								{
									"begin": 1283,
									"end": 1358,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 1283,
									"end": 1358,
									"name": "SSTORE",
									"source": 15
								},
								{
									"begin": 1283,
									"end": 1358,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 582,
									"end": 4561,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "6"
								},
								{
									"begin": 582,
									"end": 4561,
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 7711,
									"end": 8133,
									"name": "tag",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 7711,
									"end": 8133,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7826,
									"end": 7856,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7859,
									"end": 7885,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 7859,
									"end": 7883,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 7859,
									"end": 7883,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7859,
									"end": 7883,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 7859,
									"end": 7885,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7859,
									"end": 7885,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 7859,
									"end": 7885,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7859,
									"end": 7885,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 7859,
									"end": 7885,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7826,
									"end": 7885,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7826,
									"end": 7885,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7900,
									"end": 7901,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "PUSH",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "DIV",
									"source": 2
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7896,
									"end": 7972,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 7896,
									"end": 7972,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 7896,
									"end": 7972,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "PUSH",
									"source": 2,
									"value": "F92EE8A900000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 7896,
									"end": 7972,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 7896,
									"end": 7972,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 8003,
									"end": 8019,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7985,
									"end": 8019,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7985,
									"end": 8019,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7985,
									"end": 7986,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7985,
									"end": 7999,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7985,
									"end": 7999,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7985,
									"end": 7999,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7985,
									"end": 7999,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7985,
									"end": 7999,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 7985,
									"end": 7999,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7985,
									"end": 7999,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 7985,
									"end": 7999,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 7985,
									"end": 7999,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7985,
									"end": 7999,
									"name": "DIV",
									"source": 2
								},
								{
									"begin": 7985,
									"end": 7999,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7985,
									"end": 7999,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7985,
									"end": 8019,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7985,
									"end": 8019,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7985,
									"end": 8019,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 7981,
									"end": 8127,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 7981,
									"end": 8127,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 8052,
									"end": 8068,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8035,
									"end": 8036,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 8035,
									"end": 8049,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 8035,
									"end": 8049,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 8035,
									"end": 8049,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "PUSH",
									"source": 2,
									"value": "C7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2"
								},
								{
									"begin": 8099,
									"end": 8115,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 8087,
									"end": 8116,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "tag",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "LOG1",
									"source": 2
								},
								{
									"begin": 7981,
									"end": 8127,
									"name": "tag",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 7981,
									"end": 8127,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7760,
									"end": 8133,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7711,
									"end": 8133,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 8737,
									"end": 8907,
									"name": "tag",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 8737,
									"end": 8907,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 8795,
									"end": 8825,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 8870,
									"end": 8891,
									"name": "PUSH",
									"source": 2,
									"value": "F0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00"
								},
								{
									"begin": 8860,
									"end": 8891,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 8860,
									"end": 8891,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 8737,
									"end": 8907,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 8737,
									"end": 8907,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7,
									"end": 108,
									"name": "tag",
									"source": 16,
									"value": "15"
								},
								{
									"begin": 7,
									"end": 108,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 43,
									"end": 50,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 83,
									"end": 101,
									"name": "PUSH",
									"source": 16,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 76,
									"end": 81,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 72,
									"end": 102,
									"name": "AND",
									"source": 16
								},
								{
									"begin": 61,
									"end": 102,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 61,
									"end": 102,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 7,
									"end": 108,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 7,
									"end": 108,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 7,
									"end": 108,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 7,
									"end": 108,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 114,
									"end": 229,
									"name": "tag",
									"source": 16,
									"value": "16"
								},
								{
									"begin": 114,
									"end": 229,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 199,
									"end": 222,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 216,
									"end": 221,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 199,
									"end": 222,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "15"
								},
								{
									"begin": 199,
									"end": 222,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 199,
									"end": 222,
									"name": "tag",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 199,
									"end": 222,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 194,
									"end": 197,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 187,
									"end": 223,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 114,
									"end": 229,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 114,
									"end": 229,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 114,
									"end": 229,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 235,
									"end": 453,
									"name": "tag",
									"source": 16,
									"value": "13"
								},
								{
									"begin": 235,
									"end": 453,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 326,
									"end": 330,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 364,
									"end": 366,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 353,
									"end": 362,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 349,
									"end": 367,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 341,
									"end": 367,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 341,
									"end": 367,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 377,
									"end": 446,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "22"
								},
								{
									"begin": 443,
									"end": 444,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 432,
									"end": 441,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 428,
									"end": 445,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 419,
									"end": 425,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 377,
									"end": 446,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "16"
								},
								{
									"begin": 377,
									"end": 446,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 377,
									"end": 446,
									"name": "tag",
									"source": 16,
									"value": "22"
								},
								{
									"begin": 377,
									"end": 446,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 235,
									"end": 453,
									"name": "SWAP3",
									"source": 16
								},
								{
									"begin": 235,
									"end": 453,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 235,
									"end": 453,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 235,
									"end": 453,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 235,
									"end": 453,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 582,
									"end": 4561,
									"name": "tag",
									"source": 15,
									"value": "6"
								},
								{
									"begin": 582,
									"end": 4561,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 582,
									"end": 4561,
									"name": "PUSH",
									"source": 15,
									"value": "80"
								},
								{
									"begin": 582,
									"end": 4561,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 582,
									"end": 4561,
									"name": "PUSH #[$]",
									"source": 15,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 582,
									"end": 4561,
									"name": "PUSH [$]",
									"source": 15,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 582,
									"end": 4561,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 582,
									"end": 4561,
									"name": "CODECOPY",
									"source": 15
								},
								{
									"begin": 582,
									"end": 4561,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 582,
									"end": 4561,
									"name": "ASSIGNIMMUTABLE",
									"source": 15,
									"value": "514"
								},
								{
									"begin": 582,
									"end": 4561,
									"name": "PUSH #[$]",
									"source": 15,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 582,
									"end": 4561,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 582,
									"end": 4561,
									"name": "RETURN",
									"source": 15
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220057672c2c96fe073382fafec2dafc649d15f56b881dca15de3a93f976d0485f364736f6c63430008190033",
									".code": [
										{
											"begin": 582,
											"end": 4561,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "CALLDATASIZE",
											"source": 15
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "PUSH",
											"source": 15,
											"value": "E0"
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "SHR",
											"source": 15
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "PUSH",
											"source": 15,
											"value": "7284E416"
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "30"
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "PUSH",
											"source": 15,
											"value": "AD3CB1CC"
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "31"
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "PUSH",
											"source": 15,
											"value": "DD62ED3E"
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "32"
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "PUSH",
											"source": 15,
											"value": "DD62ED3E"
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "26"
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "PUSH",
											"source": 15,
											"value": "E6C9566C"
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "27"
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "PUSH",
											"source": 15,
											"value": "F2FDE38B"
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "28"
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "PUSH",
											"source": 15,
											"value": "FEE50359"
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "29"
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "tag",
											"source": 15,
											"value": "32"
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "PUSH",
											"source": 15,
											"value": "AD3CB1CC"
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "23"
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "PUSH",
											"source": 15,
											"value": "B7C422F5"
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "PUSH",
											"source": 15,
											"value": "C4D66DE8"
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "25"
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "tag",
											"source": 15,
											"value": "31"
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "PUSH",
											"source": 15,
											"value": "8DA5CB5B"
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "33"
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "PUSH",
											"source": 15,
											"value": "8DA5CB5B"
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "19"
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "PUSH",
											"source": 15,
											"value": "95D89B41"
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "PUSH",
											"source": 15,
											"value": "A9059CBB"
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "21"
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "PUSH",
											"source": 15,
											"value": "ABAB4673"
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "22"
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "tag",
											"source": 15,
											"value": "33"
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "PUSH",
											"source": 15,
											"value": "7284E416"
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "16"
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "PUSH",
											"source": 15,
											"value": "79CC6790"
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "17"
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "PUSH",
											"source": 15,
											"value": "7CE35188"
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "18"
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "tag",
											"source": 15,
											"value": "30"
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "PUSH",
											"source": 15,
											"value": "331EE739"
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "34"
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "PUSH",
											"source": 15,
											"value": "52D1902D"
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "35"
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "PUSH",
											"source": 15,
											"value": "52D1902D"
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "12"
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "PUSH",
											"source": 15,
											"value": "54FD4D50"
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "13"
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "PUSH",
											"source": 15,
											"value": "70A08231"
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "14"
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "PUSH",
											"source": 15,
											"value": "715018A6"
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "15"
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "tag",
											"source": 15,
											"value": "35"
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "PUSH",
											"source": 15,
											"value": "331EE739"
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "9"
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "PUSH",
											"source": 15,
											"value": "42966C68"
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "10"
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "PUSH",
											"source": 15,
											"value": "4F1EF286"
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "11"
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "tag",
											"source": 15,
											"value": "34"
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "PUSH",
											"source": 15,
											"value": "18B804A5"
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "36"
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "PUSH",
											"source": 15,
											"value": "18B804A5"
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "5"
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "PUSH",
											"source": 15,
											"value": "23B872DD"
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "6"
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "PUSH",
											"source": 15,
											"value": "2E1A7D4D"
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "7"
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "PUSH",
											"source": 15,
											"value": "313CE567"
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "8"
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "tag",
											"source": 15,
											"value": "36"
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "PUSH",
											"source": 15,
											"value": "6FDDE03"
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "2"
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "PUSH",
											"source": 15,
											"value": "95EA7B3"
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "3"
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "PUSH",
											"source": 15,
											"value": "18160DDD"
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "tag",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 582,
											"end": 4561,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 3011,
											"end": 3155,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 3011,
											"end": 3155,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3011,
											"end": 3155,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 3011,
											"end": 3155,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3011,
											"end": 3155,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3011,
											"end": 3155,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 3011,
											"end": 3155,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3011,
											"end": 3155,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3011,
											"end": 3155,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3011,
											"end": 3155,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3011,
											"end": 3155,
											"name": "tag",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 3011,
											"end": 3155,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3011,
											"end": 3155,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3011,
											"end": 3155,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 3011,
											"end": 3155,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 3011,
											"end": 3155,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3011,
											"end": 3155,
											"name": "tag",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 3011,
											"end": 3155,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3011,
											"end": 3155,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3011,
											"end": 3155,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3011,
											"end": 3155,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3011,
											"end": 3155,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3011,
											"end": 3155,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3011,
											"end": 3155,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 3011,
											"end": 3155,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3011,
											"end": 3155,
											"name": "tag",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3011,
											"end": 3155,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3011,
											"end": 3155,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3011,
											"end": 3155,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3011,
											"end": 3155,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3011,
											"end": 3155,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3011,
											"end": 3155,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3011,
											"end": 3155,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3011,
											"end": 3155,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "tag",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 5505,
											"end": 5691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "tag",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 5505,
											"end": 5691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "tag",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 5505,
											"end": 5691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "tag",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 4191,
											"end": 4343,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4191,
											"end": 4343,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4191,
											"end": 4343,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 4191,
											"end": 4343,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4191,
											"end": 4343,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4191,
											"end": 4343,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 4191,
											"end": 4343,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4191,
											"end": 4343,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4191,
											"end": 4343,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4191,
											"end": 4343,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4191,
											"end": 4343,
											"name": "tag",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 4191,
											"end": 4343,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4191,
											"end": 4343,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4191,
											"end": 4343,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 4191,
											"end": 4343,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 4191,
											"end": 4343,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4191,
											"end": 4343,
											"name": "tag",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 4191,
											"end": 4343,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4191,
											"end": 4343,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4191,
											"end": 4343,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4191,
											"end": 4343,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 4191,
											"end": 4343,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4191,
											"end": 4343,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4191,
											"end": 4343,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 4191,
											"end": 4343,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4191,
											"end": 4343,
											"name": "tag",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 4191,
											"end": 4343,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4191,
											"end": 4343,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4191,
											"end": 4343,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4191,
											"end": 4343,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4191,
											"end": 4343,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4191,
											"end": 4343,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4191,
											"end": 4343,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4191,
											"end": 4343,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 4387,
											"end": 4559,
											"name": "tag",
											"source": 15,
											"value": "5"
										},
										{
											"begin": 4387,
											"end": 4559,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4387,
											"end": 4559,
											"name": "CALLVALUE",
											"source": 15
										},
										{
											"begin": 4387,
											"end": 4559,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4387,
											"end": 4559,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 4387,
											"end": 4559,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "54"
										},
										{
											"begin": 4387,
											"end": 4559,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 4387,
											"end": 4559,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4387,
											"end": 4559,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4387,
											"end": 4559,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 4387,
											"end": 4559,
											"name": "tag",
											"source": 15,
											"value": "54"
										},
										{
											"begin": 4387,
											"end": 4559,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4387,
											"end": 4559,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4387,
											"end": 4559,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "55"
										},
										{
											"begin": 4387,
											"end": 4559,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "56"
										},
										{
											"begin": 4387,
											"end": 4559,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4387,
											"end": 4559,
											"name": "tag",
											"source": 15,
											"value": "55"
										},
										{
											"begin": 4387,
											"end": 4559,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4387,
											"end": 4559,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 4387,
											"end": 4559,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 4387,
											"end": 4559,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "57"
										},
										{
											"begin": 4387,
											"end": 4559,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4387,
											"end": 4559,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4387,
											"end": 4559,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "53"
										},
										{
											"begin": 4387,
											"end": 4559,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4387,
											"end": 4559,
											"name": "tag",
											"source": 15,
											"value": "57"
										},
										{
											"begin": 4387,
											"end": 4559,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4387,
											"end": 4559,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 4387,
											"end": 4559,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 4387,
											"end": 4559,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4387,
											"end": 4559,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4387,
											"end": 4559,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 4387,
											"end": 4559,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4387,
											"end": 4559,
											"name": "RETURN",
											"source": 15
										},
										{
											"begin": 6251,
											"end": 6495,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 6251,
											"end": 6495,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6251,
											"end": 6495,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 6251,
											"end": 6495,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6251,
											"end": 6495,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6251,
											"end": 6495,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 6251,
											"end": 6495,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6251,
											"end": 6495,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6251,
											"end": 6495,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6251,
											"end": 6495,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6251,
											"end": 6495,
											"name": "tag",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 6251,
											"end": 6495,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6251,
											"end": 6495,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6251,
											"end": 6495,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 6251,
											"end": 6495,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6251,
											"end": 6495,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6251,
											"end": 6495,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 6251,
											"end": 6495,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6251,
											"end": 6495,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6251,
											"end": 6495,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6251,
											"end": 6495,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6251,
											"end": 6495,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 6251,
											"end": 6495,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6251,
											"end": 6495,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6251,
											"end": 6495,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 6251,
											"end": 6495,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6251,
											"end": 6495,
											"name": "tag",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 6251,
											"end": 6495,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6251,
											"end": 6495,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 6251,
											"end": 6495,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6251,
											"end": 6495,
											"name": "tag",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 6251,
											"end": 6495,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6251,
											"end": 6495,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6251,
											"end": 6495,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6251,
											"end": 6495,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 6251,
											"end": 6495,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6251,
											"end": 6495,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6251,
											"end": 6495,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 6251,
											"end": 6495,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6251,
											"end": 6495,
											"name": "tag",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 6251,
											"end": 6495,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6251,
											"end": 6495,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6251,
											"end": 6495,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6251,
											"end": 6495,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6251,
											"end": 6495,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6251,
											"end": 6495,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6251,
											"end": 6495,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6251,
											"end": 6495,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 2406,
											"end": 2759,
											"name": "tag",
											"source": 15,
											"value": "7"
										},
										{
											"begin": 2406,
											"end": 2759,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2406,
											"end": 2759,
											"name": "CALLVALUE",
											"source": 15
										},
										{
											"begin": 2406,
											"end": 2759,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2406,
											"end": 2759,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2406,
											"end": 2759,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 2406,
											"end": 2759,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2406,
											"end": 2759,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2406,
											"end": 2759,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2406,
											"end": 2759,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 2406,
											"end": 2759,
											"name": "tag",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 2406,
											"end": 2759,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2406,
											"end": 2759,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2406,
											"end": 2759,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "65"
										},
										{
											"begin": 2406,
											"end": 2759,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 2406,
											"end": 2759,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2406,
											"end": 2759,
											"name": "CALLDATASIZE",
											"source": 15
										},
										{
											"begin": 2406,
											"end": 2759,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 2406,
											"end": 2759,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2406,
											"end": 2759,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2406,
											"end": 2759,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2406,
											"end": 2759,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "66"
										},
										{
											"begin": 2406,
											"end": 2759,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2406,
											"end": 2759,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2406,
											"end": 2759,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "67"
										},
										{
											"begin": 2406,
											"end": 2759,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2406,
											"end": 2759,
											"name": "tag",
											"source": 15,
											"value": "66"
										},
										{
											"begin": 2406,
											"end": 2759,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2406,
											"end": 2759,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "68"
										},
										{
											"begin": 2406,
											"end": 2759,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2406,
											"end": 2759,
											"name": "tag",
											"source": 15,
											"value": "65"
										},
										{
											"begin": 2406,
											"end": 2759,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2406,
											"end": 2759,
											"name": "STOP",
											"source": 15
										},
										{
											"begin": 4049,
											"end": 4131,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 4049,
											"end": 4131,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4049,
											"end": 4131,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 4049,
											"end": 4131,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4049,
											"end": 4131,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4049,
											"end": 4131,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 4049,
											"end": 4131,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4049,
											"end": 4131,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4049,
											"end": 4131,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4049,
											"end": 4131,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4049,
											"end": 4131,
											"name": "tag",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 4049,
											"end": 4131,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4049,
											"end": 4131,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4049,
											"end": 4131,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 4049,
											"end": 4131,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 4049,
											"end": 4131,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4049,
											"end": 4131,
											"name": "tag",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 4049,
											"end": 4131,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4049,
											"end": 4131,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4049,
											"end": 4131,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4049,
											"end": 4131,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 4049,
											"end": 4131,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4049,
											"end": 4131,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4049,
											"end": 4131,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 4049,
											"end": 4131,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4049,
											"end": 4131,
											"name": "tag",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 4049,
											"end": 4131,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4049,
											"end": 4131,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4049,
											"end": 4131,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4049,
											"end": 4131,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4049,
											"end": 4131,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4049,
											"end": 4131,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4049,
											"end": 4131,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4049,
											"end": 4131,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 2007,
											"end": 2252,
											"name": "tag",
											"source": 15,
											"value": "9"
										},
										{
											"begin": 2007,
											"end": 2252,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2007,
											"end": 2252,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "74"
										},
										{
											"begin": 2007,
											"end": 2252,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "75"
										},
										{
											"begin": 2007,
											"end": 2252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2007,
											"end": 2252,
											"name": "tag",
											"source": 15,
											"value": "74"
										},
										{
											"begin": 2007,
											"end": 2252,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2007,
											"end": 2252,
											"name": "STOP",
											"source": 15
										},
										{
											"begin": 931,
											"end": 1018,
											"name": "tag",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 931,
											"end": 1018,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 931,
											"end": 1018,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 931,
											"end": 1018,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 931,
											"end": 1018,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 931,
											"end": 1018,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 931,
											"end": 1018,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 931,
											"end": 1018,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 931,
											"end": 1018,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 931,
											"end": 1018,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 931,
											"end": 1018,
											"name": "tag",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 931,
											"end": 1018,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 931,
											"end": 1018,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 931,
											"end": 1018,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 931,
											"end": 1018,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 931,
											"end": 1018,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 931,
											"end": 1018,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 931,
											"end": 1018,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 931,
											"end": 1018,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 931,
											"end": 1018,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 931,
											"end": 1018,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 931,
											"end": 1018,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 931,
											"end": 1018,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 931,
											"end": 1018,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 931,
											"end": 1018,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 931,
											"end": 1018,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 931,
											"end": 1018,
											"name": "tag",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 931,
											"end": 1018,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 931,
											"end": 1018,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 931,
											"end": 1018,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 931,
											"end": 1018,
											"name": "tag",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 931,
											"end": 1018,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 931,
											"end": 1018,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 4158,
											"end": 4372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "tag",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 4158,
											"end": 4372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "tag",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "tag",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 3705,
											"end": 3839,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "tag",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 3705,
											"end": 3839,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "tag",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1889,
											"end": 1967,
											"name": "tag",
											"source": 15,
											"value": "13"
										},
										{
											"begin": 1889,
											"end": 1967,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1889,
											"end": 1967,
											"name": "CALLVALUE",
											"source": 15
										},
										{
											"begin": 1889,
											"end": 1967,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1889,
											"end": 1967,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1889,
											"end": 1967,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "89"
										},
										{
											"begin": 1889,
											"end": 1967,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1889,
											"end": 1967,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1889,
											"end": 1967,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1889,
											"end": 1967,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 1889,
											"end": 1967,
											"name": "tag",
											"source": 15,
											"value": "89"
										},
										{
											"begin": 1889,
											"end": 1967,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1889,
											"end": 1967,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1889,
											"end": 1967,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "90"
										},
										{
											"begin": 1889,
											"end": 1967,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "91"
										},
										{
											"begin": 1889,
											"end": 1967,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1889,
											"end": 1967,
											"name": "tag",
											"source": 15,
											"value": "90"
										},
										{
											"begin": 1889,
											"end": 1967,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1889,
											"end": 1967,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1889,
											"end": 1967,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 1889,
											"end": 1967,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "92"
										},
										{
											"begin": 1889,
											"end": 1967,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1889,
											"end": 1967,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1889,
											"end": 1967,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "53"
										},
										{
											"begin": 1889,
											"end": 1967,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1889,
											"end": 1967,
											"name": "tag",
											"source": 15,
											"value": "92"
										},
										{
											"begin": 1889,
											"end": 1967,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1889,
											"end": 1967,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1889,
											"end": 1967,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 1889,
											"end": 1967,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1889,
											"end": 1967,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1889,
											"end": 1967,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 1889,
											"end": 1967,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1889,
											"end": 1967,
											"name": "RETURN",
											"source": 15
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "tag",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "tag",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 4401,
											"end": 4572,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "tag",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 4401,
											"end": 4572,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "tag",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 4401,
											"end": 4572,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "tag",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 3155,
											"end": 3256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 1701,
											"end": 1862,
											"name": "tag",
											"source": 15,
											"value": "16"
										},
										{
											"begin": 1701,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1701,
											"end": 1862,
											"name": "CALLVALUE",
											"source": 15
										},
										{
											"begin": 1701,
											"end": 1862,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1701,
											"end": 1862,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1701,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "102"
										},
										{
											"begin": 1701,
											"end": 1862,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1701,
											"end": 1862,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1701,
											"end": 1862,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1701,
											"end": 1862,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 1701,
											"end": 1862,
											"name": "tag",
											"source": 15,
											"value": "102"
										},
										{
											"begin": 1701,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1701,
											"end": 1862,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1701,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "103"
										},
										{
											"begin": 1701,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "104"
										},
										{
											"begin": 1701,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1701,
											"end": 1862,
											"name": "tag",
											"source": 15,
											"value": "103"
										},
										{
											"begin": 1701,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1701,
											"end": 1862,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1701,
											"end": 1862,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 1701,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "105"
										},
										{
											"begin": 1701,
											"end": 1862,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1701,
											"end": 1862,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1701,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "41"
										},
										{
											"begin": 1701,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1701,
											"end": 1862,
											"name": "tag",
											"source": 15,
											"value": "105"
										},
										{
											"begin": 1701,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1701,
											"end": 1862,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1701,
											"end": 1862,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 1701,
											"end": 1862,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1701,
											"end": 1862,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1701,
											"end": 1862,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 1701,
											"end": 1862,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1701,
											"end": 1862,
											"name": "RETURN",
											"source": 15
										},
										{
											"begin": 1334,
											"end": 1492,
											"name": "tag",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 1334,
											"end": 1492,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1334,
											"end": 1492,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 1334,
											"end": 1492,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1334,
											"end": 1492,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1334,
											"end": 1492,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 1334,
											"end": 1492,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1334,
											"end": 1492,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1334,
											"end": 1492,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1334,
											"end": 1492,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1334,
											"end": 1492,
											"name": "tag",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 1334,
											"end": 1492,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1334,
											"end": 1492,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1334,
											"end": 1492,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 1334,
											"end": 1492,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1334,
											"end": 1492,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1334,
											"end": 1492,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1334,
											"end": 1492,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1334,
											"end": 1492,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1334,
											"end": 1492,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1334,
											"end": 1492,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1334,
											"end": 1492,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 1334,
											"end": 1492,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1334,
											"end": 1492,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1334,
											"end": 1492,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 1334,
											"end": 1492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1334,
											"end": 1492,
											"name": "tag",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 1334,
											"end": 1492,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1334,
											"end": 1492,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 1334,
											"end": 1492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1334,
											"end": 1492,
											"name": "tag",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 1334,
											"end": 1492,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1334,
											"end": 1492,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 4131,
											"end": 4383,
											"name": "tag",
											"source": 15,
											"value": "18"
										},
										{
											"begin": 4131,
											"end": 4383,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4131,
											"end": 4383,
											"name": "CALLVALUE",
											"source": 15
										},
										{
											"begin": 4131,
											"end": 4383,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4131,
											"end": 4383,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 4131,
											"end": 4383,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "110"
										},
										{
											"begin": 4131,
											"end": 4383,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 4131,
											"end": 4383,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4131,
											"end": 4383,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4131,
											"end": 4383,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 4131,
											"end": 4383,
											"name": "tag",
											"source": 15,
											"value": "110"
										},
										{
											"begin": 4131,
											"end": 4383,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4131,
											"end": 4383,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4131,
											"end": 4383,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "111"
										},
										{
											"begin": 4131,
											"end": 4383,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "112"
										},
										{
											"begin": 4131,
											"end": 4383,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4131,
											"end": 4383,
											"name": "tag",
											"source": 15,
											"value": "111"
										},
										{
											"begin": 4131,
											"end": 4383,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4131,
											"end": 4383,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 4131,
											"end": 4383,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 4131,
											"end": 4383,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "113"
										},
										{
											"begin": 4131,
											"end": 4383,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4131,
											"end": 4383,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4131,
											"end": 4383,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "53"
										},
										{
											"begin": 4131,
											"end": 4383,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4131,
											"end": 4383,
											"name": "tag",
											"source": 15,
											"value": "113"
										},
										{
											"begin": 4131,
											"end": 4383,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4131,
											"end": 4383,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 4131,
											"end": 4383,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 4131,
											"end": 4383,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4131,
											"end": 4383,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4131,
											"end": 4383,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 4131,
											"end": 4383,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4131,
											"end": 4383,
											"name": "RETURN",
											"source": 15
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 2441,
											"end": 2585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 2441,
											"end": 2585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3268,
											"end": 3416,
											"name": "tag",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3268,
											"end": 3416,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3268,
											"end": 3416,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 3268,
											"end": 3416,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3268,
											"end": 3416,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3268,
											"end": 3416,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 3268,
											"end": 3416,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3268,
											"end": 3416,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3268,
											"end": 3416,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3268,
											"end": 3416,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3268,
											"end": 3416,
											"name": "tag",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 3268,
											"end": 3416,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3268,
											"end": 3416,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3268,
											"end": 3416,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 3268,
											"end": 3416,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 3268,
											"end": 3416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3268,
											"end": 3416,
											"name": "tag",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 3268,
											"end": 3416,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3268,
											"end": 3416,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3268,
											"end": 3416,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3268,
											"end": 3416,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 3268,
											"end": 3416,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3268,
											"end": 3416,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3268,
											"end": 3416,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 3268,
											"end": 3416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3268,
											"end": 3416,
											"name": "tag",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 3268,
											"end": 3416,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3268,
											"end": 3416,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3268,
											"end": 3416,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3268,
											"end": 3416,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3268,
											"end": 3416,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3268,
											"end": 3416,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3268,
											"end": 3416,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3268,
											"end": 3416,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 4767,
											"end": 4945,
											"name": "tag",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 4767,
											"end": 4945,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4767,
											"end": 4945,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 4767,
											"end": 4945,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4767,
											"end": 4945,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4767,
											"end": 4945,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 4767,
											"end": 4945,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4767,
											"end": 4945,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4767,
											"end": 4945,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4767,
											"end": 4945,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4767,
											"end": 4945,
											"name": "tag",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 4767,
											"end": 4945,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4767,
											"end": 4945,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4767,
											"end": 4945,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 4767,
											"end": 4945,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4767,
											"end": 4945,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4767,
											"end": 4945,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4767,
											"end": 4945,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4767,
											"end": 4945,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4767,
											"end": 4945,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4767,
											"end": 4945,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4767,
											"end": 4945,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 4767,
											"end": 4945,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4767,
											"end": 4945,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4767,
											"end": 4945,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 4767,
											"end": 4945,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4767,
											"end": 4945,
											"name": "tag",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 4767,
											"end": 4945,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4767,
											"end": 4945,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 4767,
											"end": 4945,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4767,
											"end": 4945,
											"name": "tag",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 4767,
											"end": 4945,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4767,
											"end": 4945,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4767,
											"end": 4945,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4767,
											"end": 4945,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 4767,
											"end": 4945,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4767,
											"end": 4945,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4767,
											"end": 4945,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 4767,
											"end": 4945,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4767,
											"end": 4945,
											"name": "tag",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 4767,
											"end": 4945,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4767,
											"end": 4945,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4767,
											"end": 4945,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4767,
											"end": 4945,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4767,
											"end": 4945,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4767,
											"end": 4945,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4767,
											"end": 4945,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4767,
											"end": 4945,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 2943,
											"end": 3040,
											"name": "tag",
											"source": 15,
											"value": "22"
										},
										{
											"begin": 2943,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2943,
											"end": 3040,
											"name": "CALLVALUE",
											"source": 15
										},
										{
											"begin": 2943,
											"end": 3040,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2943,
											"end": 3040,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2943,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "128"
										},
										{
											"begin": 2943,
											"end": 3040,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2943,
											"end": 3040,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2943,
											"end": 3040,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2943,
											"end": 3040,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 2943,
											"end": 3040,
											"name": "tag",
											"source": 15,
											"value": "128"
										},
										{
											"begin": 2943,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2943,
											"end": 3040,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2943,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "129"
										},
										{
											"begin": 2943,
											"end": 3040,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 2943,
											"end": 3040,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2943,
											"end": 3040,
											"name": "CALLDATASIZE",
											"source": 15
										},
										{
											"begin": 2943,
											"end": 3040,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 2943,
											"end": 3040,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2943,
											"end": 3040,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2943,
											"end": 3040,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2943,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "130"
										},
										{
											"begin": 2943,
											"end": 3040,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2943,
											"end": 3040,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2943,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "45"
										},
										{
											"begin": 2943,
											"end": 3040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2943,
											"end": 3040,
											"name": "tag",
											"source": 15,
											"value": "130"
										},
										{
											"begin": 2943,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2943,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "131"
										},
										{
											"begin": 2943,
											"end": 3040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2943,
											"end": 3040,
											"name": "tag",
											"source": 15,
											"value": "129"
										},
										{
											"begin": 2943,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2943,
											"end": 3040,
											"name": "STOP",
											"source": 15
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "tag",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "tag",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 1819,
											"end": 1877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "tag",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 1819,
											"end": 1877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "tag",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3065,
											"end": 3574,
											"name": "tag",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 3065,
											"end": 3574,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3065,
											"end": 3574,
											"name": "CALLVALUE",
											"source": 15
										},
										{
											"begin": 3065,
											"end": 3574,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3065,
											"end": 3574,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 3065,
											"end": 3574,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "136"
										},
										{
											"begin": 3065,
											"end": 3574,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3065,
											"end": 3574,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3065,
											"end": 3574,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3065,
											"end": 3574,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 3065,
											"end": 3574,
											"name": "tag",
											"source": 15,
											"value": "136"
										},
										{
											"begin": 3065,
											"end": 3574,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3065,
											"end": 3574,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3065,
											"end": 3574,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "137"
										},
										{
											"begin": 3065,
											"end": 3574,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "138"
										},
										{
											"begin": 3065,
											"end": 3574,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3065,
											"end": 3574,
											"name": "tag",
											"source": 15,
											"value": "137"
										},
										{
											"begin": 3065,
											"end": 3574,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3065,
											"end": 3574,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 3065,
											"end": 3574,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 3065,
											"end": 3574,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "139"
										},
										{
											"begin": 3065,
											"end": 3574,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3065,
											"end": 3574,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3065,
											"end": 3574,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "140"
										},
										{
											"begin": 3065,
											"end": 3574,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3065,
											"end": 3574,
											"name": "tag",
											"source": 15,
											"value": "139"
										},
										{
											"begin": 3065,
											"end": 3574,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3065,
											"end": 3574,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 3065,
											"end": 3574,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 3065,
											"end": 3574,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3065,
											"end": 3574,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3065,
											"end": 3574,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 3065,
											"end": 3574,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3065,
											"end": 3574,
											"name": "RETURN",
											"source": 15
										},
										{
											"begin": 1367,
											"end": 1563,
											"name": "tag",
											"source": 15,
											"value": "25"
										},
										{
											"begin": 1367,
											"end": 1563,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1367,
											"end": 1563,
											"name": "CALLVALUE",
											"source": 15
										},
										{
											"begin": 1367,
											"end": 1563,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1367,
											"end": 1563,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1367,
											"end": 1563,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "141"
										},
										{
											"begin": 1367,
											"end": 1563,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1367,
											"end": 1563,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1367,
											"end": 1563,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1367,
											"end": 1563,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 1367,
											"end": 1563,
											"name": "tag",
											"source": 15,
											"value": "141"
										},
										{
											"begin": 1367,
											"end": 1563,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1367,
											"end": 1563,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1367,
											"end": 1563,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "142"
										},
										{
											"begin": 1367,
											"end": 1563,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 1367,
											"end": 1563,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1367,
											"end": 1563,
											"name": "CALLDATASIZE",
											"source": 15
										},
										{
											"begin": 1367,
											"end": 1563,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 1367,
											"end": 1563,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1367,
											"end": 1563,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1367,
											"end": 1563,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1367,
											"end": 1563,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "143"
										},
										{
											"begin": 1367,
											"end": 1563,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1367,
											"end": 1563,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1367,
											"end": 1563,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "96"
										},
										{
											"begin": 1367,
											"end": 1563,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1367,
											"end": 1563,
											"name": "tag",
											"source": 15,
											"value": "143"
										},
										{
											"begin": 1367,
											"end": 1563,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1367,
											"end": 1563,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "144"
										},
										{
											"begin": 1367,
											"end": 1563,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1367,
											"end": 1563,
											"name": "tag",
											"source": 15,
											"value": "142"
										},
										{
											"begin": 1367,
											"end": 1563,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1367,
											"end": 1563,
											"name": "STOP",
											"source": 15
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "tag",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "tag",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 5003,
											"end": 5198,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "tag",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 5003,
											"end": 5198,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "tag",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 5003,
											"end": 5198,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "tag",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3600,
											"end": 4102,
											"name": "tag",
											"source": 15,
											"value": "27"
										},
										{
											"begin": 3600,
											"end": 4102,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3600,
											"end": 4102,
											"name": "CALLVALUE",
											"source": 15
										},
										{
											"begin": 3600,
											"end": 4102,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3600,
											"end": 4102,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 3600,
											"end": 4102,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "151"
										},
										{
											"begin": 3600,
											"end": 4102,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3600,
											"end": 4102,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3600,
											"end": 4102,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3600,
											"end": 4102,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 3600,
											"end": 4102,
											"name": "tag",
											"source": 15,
											"value": "151"
										},
										{
											"begin": 3600,
											"end": 4102,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3600,
											"end": 4102,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3600,
											"end": 4102,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "152"
										},
										{
											"begin": 3600,
											"end": 4102,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "153"
										},
										{
											"begin": 3600,
											"end": 4102,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3600,
											"end": 4102,
											"name": "tag",
											"source": 15,
											"value": "152"
										},
										{
											"begin": 3600,
											"end": 4102,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3600,
											"end": 4102,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 3600,
											"end": 4102,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 3600,
											"end": 4102,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "154"
										},
										{
											"begin": 3600,
											"end": 4102,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3600,
											"end": 4102,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3600,
											"end": 4102,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "140"
										},
										{
											"begin": 3600,
											"end": 4102,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3600,
											"end": 4102,
											"name": "tag",
											"source": 15,
											"value": "154"
										},
										{
											"begin": 3600,
											"end": 4102,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3600,
											"end": 4102,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 3600,
											"end": 4102,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 3600,
											"end": 4102,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3600,
											"end": 4102,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3600,
											"end": 4102,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 3600,
											"end": 4102,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3600,
											"end": 4102,
											"name": "RETURN",
											"source": 15
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 3405,
											"end": 3620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 3405,
											"end": 3620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 2256,
											"end": 2402,
											"name": "tag",
											"source": 15,
											"value": "29"
										},
										{
											"begin": 2256,
											"end": 2402,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2256,
											"end": 2402,
											"name": "CALLVALUE",
											"source": 15
										},
										{
											"begin": 2256,
											"end": 2402,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2256,
											"end": 2402,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2256,
											"end": 2402,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "159"
										},
										{
											"begin": 2256,
											"end": 2402,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2256,
											"end": 2402,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2256,
											"end": 2402,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2256,
											"end": 2402,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 2256,
											"end": 2402,
											"name": "tag",
											"source": 15,
											"value": "159"
										},
										{
											"begin": 2256,
											"end": 2402,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2256,
											"end": 2402,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2256,
											"end": 2402,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "160"
										},
										{
											"begin": 2256,
											"end": 2402,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "161"
										},
										{
											"begin": 2256,
											"end": 2402,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2256,
											"end": 2402,
											"name": "tag",
											"source": 15,
											"value": "160"
										},
										{
											"begin": 2256,
											"end": 2402,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2256,
											"end": 2402,
											"name": "STOP",
											"source": 15
										},
										{
											"begin": 3011,
											"end": 3155,
											"name": "tag",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 3011,
											"end": 3155,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3056,
											"end": 3069,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 3081,
											"end": 3103,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3106,
											"end": 3124,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 3106,
											"end": 3122,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 3106,
											"end": 3124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3106,
											"end": 3124,
											"name": "tag",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 3106,
											"end": 3124,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3081,
											"end": 3124,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3081,
											"end": 3124,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3141,
											"end": 3142,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3141,
											"end": 3148,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 3141,
											"end": 3148,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 3134,
											"end": 3148,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "tag",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 3134,
											"end": 3148,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "tag",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "tag",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "tag",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "tag",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3011,
											"end": 3155,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3011,
											"end": 3155,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "tag",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5578,
											"end": 5582,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5594,
											"end": 5607,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5610,
											"end": 5622,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 5610,
											"end": 5620,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 5610,
											"end": 5622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5610,
											"end": 5622,
											"name": "tag",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 5610,
											"end": 5622,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5594,
											"end": 5622,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5594,
											"end": 5622,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5632,
											"end": 5663,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 5641,
											"end": 5646,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5648,
											"end": 5655,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5657,
											"end": 5662,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5632,
											"end": 5640,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 5632,
											"end": 5663,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5632,
											"end": 5663,
											"name": "tag",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 5632,
											"end": 5663,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5680,
											"end": 5684,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 5673,
											"end": 5684,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5673,
											"end": 5684,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5673,
											"end": 5684,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5505,
											"end": 5691,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4191,
											"end": 4343,
											"name": "tag",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 4191,
											"end": 4343,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4243,
											"end": 4250,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4262,
											"end": 4284,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4287,
											"end": 4305,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 4287,
											"end": 4303,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 4287,
											"end": 4305,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4287,
											"end": 4305,
											"name": "tag",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 4287,
											"end": 4305,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4262,
											"end": 4305,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4262,
											"end": 4305,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4322,
											"end": 4323,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4322,
											"end": 4336,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 4322,
											"end": 4336,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4322,
											"end": 4336,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4315,
											"end": 4336,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4315,
											"end": 4336,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4315,
											"end": 4336,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4191,
											"end": 4343,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4191,
											"end": 4343,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4387,
											"end": 4559,
											"name": "tag",
											"source": 15,
											"value": "56"
										},
										{
											"begin": 4387,
											"end": 4559,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4427,
											"end": 4434,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4444,
											"end": 4462,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4483,
											"end": 4491,
											"name": "PUSH",
											"source": 15,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 4470,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "179"
										},
										{
											"begin": 4470,
											"end": 4477,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "112"
										},
										{
											"begin": 4470,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4470,
											"end": 4479,
											"name": "tag",
											"source": 15,
											"value": "179"
										},
										{
											"begin": 4470,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4465,
											"end": 4491,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "180"
										},
										{
											"begin": 4465,
											"end": 4491,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4465,
											"end": 4491,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4465,
											"end": 4491,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "181"
										},
										{
											"begin": 4465,
											"end": 4491,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4465,
											"end": 4491,
											"name": "tag",
											"source": 15,
											"value": "180"
										},
										{
											"begin": 4465,
											"end": 4491,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4444,
											"end": 4491,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4444,
											"end": 4491,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4497,
											"end": 4508,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4522,
											"end": 4535,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4511,
											"end": 4519,
											"name": "PUSH",
											"source": 15,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 4511,
											"end": 4535,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "182"
										},
										{
											"begin": 4511,
											"end": 4535,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4511,
											"end": 4535,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4511,
											"end": 4535,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "181"
										},
										{
											"begin": 4511,
											"end": 4535,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4511,
											"end": 4535,
											"name": "tag",
											"source": 15,
											"value": "182"
										},
										{
											"begin": 4511,
											"end": 4535,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4497,
											"end": 4535,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4497,
											"end": 4535,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4548,
											"end": 4554,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4541,
											"end": 4554,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 4541,
											"end": 4554,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4541,
											"end": 4554,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4541,
											"end": 4554,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4387,
											"end": 4559,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4387,
											"end": 4559,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6251,
											"end": 6495,
											"name": "tag",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 6251,
											"end": 6495,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6338,
											"end": 6342,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6354,
											"end": 6369,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6372,
											"end": 6384,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 6372,
											"end": 6382,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 6372,
											"end": 6384,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6372,
											"end": 6384,
											"name": "tag",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 6372,
											"end": 6384,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6354,
											"end": 6384,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6354,
											"end": 6384,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6394,
											"end": 6431,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 6410,
											"end": 6414,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6416,
											"end": 6423,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6425,
											"end": 6430,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6394,
											"end": 6409,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 6394,
											"end": 6431,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6394,
											"end": 6431,
											"name": "tag",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 6394,
											"end": 6431,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6441,
											"end": 6467,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 6451,
											"end": 6455,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6457,
											"end": 6459,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6461,
											"end": 6466,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6441,
											"end": 6450,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 6441,
											"end": 6467,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6441,
											"end": 6467,
											"name": "tag",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 6441,
											"end": 6467,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6484,
											"end": 6488,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 6477,
											"end": 6488,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6477,
											"end": 6488,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6477,
											"end": 6488,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6251,
											"end": 6495,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 6251,
											"end": 6495,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6251,
											"end": 6495,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6251,
											"end": 6495,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6251,
											"end": 6495,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6251,
											"end": 6495,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2406,
											"end": 2759,
											"name": "tag",
											"source": 15,
											"value": "68"
										},
										{
											"begin": 2406,
											"end": 2759,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2501,
											"end": 2507,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2471,
											"end": 2485,
											"name": "PUSH",
											"source": 15,
											"value": "2"
										},
										{
											"begin": 2471,
											"end": 2497,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2486,
											"end": 2496,
											"name": "CALLER",
											"source": 15
										},
										{
											"begin": 2471,
											"end": 2497,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2471,
											"end": 2497,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 2471,
											"end": 2497,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2471,
											"end": 2497,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 2471,
											"end": 2497,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2471,
											"end": 2497,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2471,
											"end": 2497,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2471,
											"end": 2497,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2471,
											"end": 2497,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2471,
											"end": 2497,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2471,
											"end": 2497,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2471,
											"end": 2497,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2471,
											"end": 2497,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2471,
											"end": 2497,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2471,
											"end": 2497,
											"name": "KECCAK256",
											"source": 15
										},
										{
											"begin": 2471,
											"end": 2497,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 2471,
											"end": 2507,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 2471,
											"end": 2507,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2463,
											"end": 2569,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "190"
										},
										{
											"begin": 2463,
											"end": 2569,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2463,
											"end": 2569,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 2463,
											"end": 2569,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 2463,
											"end": 2569,
											"name": "PUSH",
											"source": 15,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2463,
											"end": 2569,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2463,
											"end": 2569,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2463,
											"end": 2569,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 2463,
											"end": 2569,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2463,
											"end": 2569,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "191"
										},
										{
											"begin": 2463,
											"end": 2569,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2463,
											"end": 2569,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "192"
										},
										{
											"begin": 2463,
											"end": 2569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2463,
											"end": 2569,
											"name": "tag",
											"source": 15,
											"value": "191"
										},
										{
											"begin": 2463,
											"end": 2569,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2463,
											"end": 2569,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 2463,
											"end": 2569,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 2463,
											"end": 2569,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2463,
											"end": 2569,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2463,
											"end": 2569,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 2463,
											"end": 2569,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2463,
											"end": 2569,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 2463,
											"end": 2569,
											"name": "tag",
											"source": 15,
											"value": "190"
										},
										{
											"begin": 2463,
											"end": 2569,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2605,
											"end": 2611,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2575,
											"end": 2589,
											"name": "PUSH",
											"source": 15,
											"value": "2"
										},
										{
											"begin": 2575,
											"end": 2601,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2590,
											"end": 2600,
											"name": "CALLER",
											"source": 15
										},
										{
											"begin": 2575,
											"end": 2601,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2575,
											"end": 2601,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 2575,
											"end": 2601,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2575,
											"end": 2601,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 2575,
											"end": 2601,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2575,
											"end": 2601,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2575,
											"end": 2601,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2575,
											"end": 2601,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2575,
											"end": 2601,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2575,
											"end": 2601,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2575,
											"end": 2601,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2575,
											"end": 2601,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2575,
											"end": 2601,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2575,
											"end": 2601,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2575,
											"end": 2601,
											"name": "KECCAK256",
											"source": 15
										},
										{
											"begin": 2575,
											"end": 2601,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2575,
											"end": 2611,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2575,
											"end": 2611,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2575,
											"end": 2611,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 2575,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "193"
										},
										{
											"begin": 2575,
											"end": 2611,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2575,
											"end": 2611,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2575,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "194"
										},
										{
											"begin": 2575,
											"end": 2611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2575,
											"end": 2611,
											"name": "tag",
											"source": 15,
											"value": "193"
										},
										{
											"begin": 2575,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2575,
											"end": 2611,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 2575,
											"end": 2611,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2575,
											"end": 2611,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2575,
											"end": 2611,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2575,
											"end": 2611,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2575,
											"end": 2611,
											"name": "SSTORE",
											"source": 15
										},
										{
											"begin": 2575,
											"end": 2611,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2617,
											"end": 2645,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "195"
										},
										{
											"begin": 2626,
											"end": 2636,
											"name": "CALLER",
											"source": 15
										},
										{
											"begin": 2638,
											"end": 2644,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2617,
											"end": 2625,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "131"
										},
										{
											"begin": 2617,
											"end": 2645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2617,
											"end": 2645,
											"name": "tag",
											"source": 15,
											"value": "195"
										},
										{
											"begin": 2617,
											"end": 2645,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2651,
											"end": 2671,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2695,
											"end": 2703,
											"name": "PUSH",
											"source": 15,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 2686,
											"end": 2692,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2674,
											"end": 2683,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "196"
										},
										{
											"begin": 2674,
											"end": 2681,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "56"
										},
										{
											"begin": 2674,
											"end": 2683,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2674,
											"end": 2683,
											"name": "tag",
											"source": 15,
											"value": "196"
										},
										{
											"begin": 2674,
											"end": 2683,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2674,
											"end": 2692,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "197"
										},
										{
											"begin": 2674,
											"end": 2692,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2674,
											"end": 2692,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2674,
											"end": 2692,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "198"
										},
										{
											"begin": 2674,
											"end": 2692,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2674,
											"end": 2692,
											"name": "tag",
											"source": 15,
											"value": "197"
										},
										{
											"begin": 2674,
											"end": 2692,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2674,
											"end": 2703,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "199"
										},
										{
											"begin": 2674,
											"end": 2703,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2674,
											"end": 2703,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2674,
											"end": 2703,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "181"
										},
										{
											"begin": 2674,
											"end": 2703,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2674,
											"end": 2703,
											"name": "tag",
											"source": 15,
											"value": "199"
										},
										{
											"begin": 2674,
											"end": 2703,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2651,
											"end": 2703,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2651,
											"end": 2703,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2717,
											"end": 2727,
											"name": "CALLER",
											"source": 15
										},
										{
											"begin": 2709,
											"end": 2737,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2709,
											"end": 2737,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 2709,
											"end": 2754,
											"name": "PUSH",
											"source": 15,
											"value": "8FC"
										},
										{
											"begin": 2738,
											"end": 2753,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2709,
											"end": 2754,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2709,
											"end": 2754,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2709,
											"end": 2754,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2709,
											"end": 2754,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 2709,
											"end": 2754,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2709,
											"end": 2754,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 2709,
											"end": 2754,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 2709,
											"end": 2754,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2709,
											"end": 2754,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 2709,
											"end": 2754,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 2709,
											"end": 2754,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2709,
											"end": 2754,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 2709,
											"end": 2754,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 2709,
											"end": 2754,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2709,
											"end": 2754,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 2709,
											"end": 2754,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 2709,
											"end": 2754,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 2709,
											"end": 2754,
											"name": "CALL",
											"source": 15
										},
										{
											"begin": 2709,
											"end": 2754,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 2709,
											"end": 2754,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2709,
											"end": 2754,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2709,
											"end": 2754,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2709,
											"end": 2754,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2709,
											"end": 2754,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2709,
											"end": 2754,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2709,
											"end": 2754,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2709,
											"end": 2754,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "201"
										},
										{
											"begin": 2709,
											"end": 2754,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2709,
											"end": 2754,
											"name": "RETURNDATASIZE",
											"source": 15
										},
										{
											"begin": 2709,
											"end": 2754,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2709,
											"end": 2754,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2709,
											"end": 2754,
											"name": "RETURNDATACOPY",
											"source": 15
										},
										{
											"begin": 2709,
											"end": 2754,
											"name": "RETURNDATASIZE",
											"source": 15
										},
										{
											"begin": 2709,
											"end": 2754,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2709,
											"end": 2754,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 2709,
											"end": 2754,
											"name": "tag",
											"source": 15,
											"value": "201"
										},
										{
											"begin": 2709,
											"end": 2754,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2709,
											"end": 2754,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2457,
											"end": 2759,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2406,
											"end": 2759,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2406,
											"end": 2759,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4049,
											"end": 4131,
											"name": "tag",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 4049,
											"end": 4131,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4098,
											"end": 4103,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4122,
											"end": 4124,
											"name": "PUSH",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 4115,
											"end": 4124,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4115,
											"end": 4124,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4049,
											"end": 4131,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4049,
											"end": 4131,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2007,
											"end": 2252,
											"name": "tag",
											"source": 15,
											"value": "75"
										},
										{
											"begin": 2007,
											"end": 2252,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2081,
											"end": 2082,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2069,
											"end": 2078,
											"name": "CALLVALUE",
											"source": 15
										},
										{
											"begin": 2069,
											"end": 2082,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 2061,
											"end": 2119,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "204"
										},
										{
											"begin": 2061,
											"end": 2119,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2061,
											"end": 2119,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 2061,
											"end": 2119,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 2061,
											"end": 2119,
											"name": "PUSH",
											"source": 15,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2061,
											"end": 2119,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2061,
											"end": 2119,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2061,
											"end": 2119,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 2061,
											"end": 2119,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2061,
											"end": 2119,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "205"
										},
										{
											"begin": 2061,
											"end": 2119,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2061,
											"end": 2119,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "206"
										},
										{
											"begin": 2061,
											"end": 2119,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2061,
											"end": 2119,
											"name": "tag",
											"source": 15,
											"value": "205"
										},
										{
											"begin": 2061,
											"end": 2119,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2061,
											"end": 2119,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 2061,
											"end": 2119,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 2061,
											"end": 2119,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2061,
											"end": 2119,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2061,
											"end": 2119,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 2061,
											"end": 2119,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2061,
											"end": 2119,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 2061,
											"end": 2119,
											"name": "tag",
											"source": 15,
											"value": "204"
										},
										{
											"begin": 2061,
											"end": 2119,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2125,
											"end": 2139,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2166,
											"end": 2174,
											"name": "PUSH",
											"source": 15,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 2154,
											"end": 2163,
											"name": "CALLVALUE",
											"source": 15
										},
										{
											"begin": 2142,
											"end": 2151,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "207"
										},
										{
											"begin": 2142,
											"end": 2149,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "112"
										},
										{
											"begin": 2142,
											"end": 2151,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2142,
											"end": 2151,
											"name": "tag",
											"source": 15,
											"value": "207"
										},
										{
											"begin": 2142,
											"end": 2151,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2142,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "208"
										},
										{
											"begin": 2142,
											"end": 2163,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2142,
											"end": 2163,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2142,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "198"
										},
										{
											"begin": 2142,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2142,
											"end": 2163,
											"name": "tag",
											"source": 15,
											"value": "208"
										},
										{
											"begin": 2142,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2142,
											"end": 2174,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "209"
										},
										{
											"begin": 2142,
											"end": 2174,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2142,
											"end": 2174,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2142,
											"end": 2174,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "181"
										},
										{
											"begin": 2142,
											"end": 2174,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2142,
											"end": 2174,
											"name": "tag",
											"source": 15,
											"value": "209"
										},
										{
											"begin": 2142,
											"end": 2174,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2125,
											"end": 2174,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2125,
											"end": 2174,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2180,
											"end": 2205,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "210"
										},
										{
											"begin": 2186,
											"end": 2196,
											"name": "CALLER",
											"source": 15
										},
										{
											"begin": 2198,
											"end": 2204,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2180,
											"end": 2185,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "211"
										},
										{
											"begin": 2180,
											"end": 2205,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2180,
											"end": 2205,
											"name": "tag",
											"source": 15,
											"value": "210"
										},
										{
											"begin": 2180,
											"end": 2205,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2241,
											"end": 2247,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2211,
											"end": 2225,
											"name": "PUSH",
											"source": 15,
											"value": "2"
										},
										{
											"begin": 2211,
											"end": 2237,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2226,
											"end": 2236,
											"name": "CALLER",
											"source": 15
										},
										{
											"begin": 2211,
											"end": 2237,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2211,
											"end": 2237,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 2211,
											"end": 2237,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2211,
											"end": 2237,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 2211,
											"end": 2237,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2211,
											"end": 2237,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2211,
											"end": 2237,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2211,
											"end": 2237,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2211,
											"end": 2237,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2211,
											"end": 2237,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2211,
											"end": 2237,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2211,
											"end": 2237,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2211,
											"end": 2237,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2211,
											"end": 2237,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2211,
											"end": 2237,
											"name": "KECCAK256",
											"source": 15
										},
										{
											"begin": 2211,
											"end": 2237,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2211,
											"end": 2247,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2211,
											"end": 2247,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2211,
											"end": 2247,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 2211,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "212"
										},
										{
											"begin": 2211,
											"end": 2247,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2211,
											"end": 2247,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2211,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "213"
										},
										{
											"begin": 2211,
											"end": 2247,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2211,
											"end": 2247,
											"name": "tag",
											"source": 15,
											"value": "212"
										},
										{
											"begin": 2211,
											"end": 2247,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2211,
											"end": 2247,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 2211,
											"end": 2247,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2211,
											"end": 2247,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2211,
											"end": 2247,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2211,
											"end": 2247,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2211,
											"end": 2247,
											"name": "SSTORE",
											"source": 15
										},
										{
											"begin": 2211,
											"end": 2247,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2055,
											"end": 2252,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2007,
											"end": 2252,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 931,
											"end": 1018,
											"name": "tag",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 931,
											"end": 1018,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 985,
											"end": 1011,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "215"
										},
										{
											"begin": 991,
											"end": 1003,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "216"
										},
										{
											"begin": 991,
											"end": 1001,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 991,
											"end": 1003,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 991,
											"end": 1003,
											"name": "tag",
											"source": 5,
											"value": "216"
										},
										{
											"begin": 991,
											"end": 1003,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1005,
											"end": 1010,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 985,
											"end": 990,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "217"
										},
										{
											"begin": 985,
											"end": 1011,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 985,
											"end": 1011,
											"name": "tag",
											"source": 5,
											"value": "215"
										},
										{
											"begin": 985,
											"end": 1011,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 931,
											"end": 1018,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 931,
											"end": 1018,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "tag",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2653,
											"end": 2666,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "219"
										},
										{
											"begin": 2653,
											"end": 2664,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "220"
										},
										{
											"begin": 2653,
											"end": 2666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2653,
											"end": 2666,
											"name": "tag",
											"source": 3,
											"value": "219"
										},
										{
											"begin": 2653,
											"end": 2666,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4273,
											"end": 4309,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "222"
										},
										{
											"begin": 4291,
											"end": 4308,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4273,
											"end": 4290,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "223"
										},
										{
											"begin": 4273,
											"end": 4309,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4273,
											"end": 4309,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "222"
										},
										{
											"begin": 4273,
											"end": 4309,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4319,
											"end": 4365,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "224"
										},
										{
											"begin": 4341,
											"end": 4358,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4360,
											"end": 4364,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4319,
											"end": 4340,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "225"
										},
										{
											"begin": 4319,
											"end": 4365,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4319,
											"end": 4365,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "224"
										},
										{
											"begin": 4319,
											"end": 4365,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4158,
											"end": 4372,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "tag",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3774,
											"end": 3781,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2924,
											"end": 2944,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "227"
										},
										{
											"begin": 2924,
											"end": 2942,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "228"
										},
										{
											"begin": 2924,
											"end": 2944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2924,
											"end": 2944,
											"name": "tag",
											"source": 3,
											"value": "227"
										},
										{
											"begin": 2924,
											"end": 2944,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1327,
											"end": 1393,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
										},
										{
											"begin": 3800,
											"end": 3832,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3800,
											"end": 3832,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 3793,
											"end": 3832,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3793,
											"end": 3832,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3705,
											"end": 3839,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1889,
											"end": 1967,
											"name": "tag",
											"source": 15,
											"value": "91"
										},
										{
											"begin": 1889,
											"end": 1967,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1939,
											"end": 1946,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1961,
											"end": 1962,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 1954,
											"end": 1962,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1954,
											"end": 1962,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1889,
											"end": 1967,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1889,
											"end": 1967,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "tag",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4466,
											"end": 4473,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4485,
											"end": 4507,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4510,
											"end": 4528,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "232"
										},
										{
											"begin": 4510,
											"end": 4526,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 4510,
											"end": 4528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4510,
											"end": 4528,
											"name": "tag",
											"source": 4,
											"value": "232"
										},
										{
											"begin": 4510,
											"end": 4528,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4485,
											"end": 4528,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4485,
											"end": 4528,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4545,
											"end": 4546,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4545,
											"end": 4556,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4545,
											"end": 4556,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4545,
											"end": 4565,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4557,
											"end": 4564,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4545,
											"end": 4565,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4545,
											"end": 4565,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4545,
											"end": 4565,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4545,
											"end": 4565,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4545,
											"end": 4565,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4545,
											"end": 4565,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4545,
											"end": 4565,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4545,
											"end": 4565,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4545,
											"end": 4565,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4545,
											"end": 4565,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4545,
											"end": 4565,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4545,
											"end": 4565,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4545,
											"end": 4565,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4545,
											"end": 4565,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4545,
											"end": 4565,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4545,
											"end": 4565,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4538,
											"end": 4565,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4538,
											"end": 4565,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4538,
											"end": 4565,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4401,
											"end": 4572,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3219,
											"end": 3249,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 3246,
											"end": 3247,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3219,
											"end": 3237,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 3219,
											"end": 3249,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3219,
											"end": 3249,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 3219,
											"end": 3249,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3155,
											"end": 3256,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1701,
											"end": 1862,
											"name": "tag",
											"source": 15,
											"value": "104"
										},
										{
											"begin": 1701,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1755,
											"end": 1768,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 1780,
											"end": 1857,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1780,
											"end": 1857,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 1780,
											"end": 1857,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1780,
											"end": 1857,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 1780,
											"end": 1857,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1780,
											"end": 1857,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1780,
											"end": 1857,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1780,
											"end": 1857,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1780,
											"end": 1857,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 1780,
											"end": 1857,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1780,
											"end": 1857,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1780,
											"end": 1857,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1780,
											"end": 1857,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1780,
											"end": 1857,
											"name": "PUSH data",
											"source": 15,
											"value": "665CE53E9D59C8D2AC0BA934BB50732C0BCD4AA94C46168CB289AFF831BC6A83"
										},
										{
											"begin": 1780,
											"end": 1857,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 1780,
											"end": 1857,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1780,
											"end": 1857,
											"name": "CODECOPY",
											"source": 15
										},
										{
											"begin": 1780,
											"end": 1857,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1780,
											"end": 1857,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1701,
											"end": 1862,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1701,
											"end": 1862,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1334,
											"end": 1492,
											"name": "tag",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 1334,
											"end": 1492,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1409,
											"end": 1454,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "241"
										},
										{
											"begin": 1425,
											"end": 1432,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1434,
											"end": 1446,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "242"
										},
										{
											"begin": 1434,
											"end": 1444,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 1434,
											"end": 1446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1434,
											"end": 1446,
											"name": "tag",
											"source": 5,
											"value": "242"
										},
										{
											"begin": 1434,
											"end": 1446,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1448,
											"end": 1453,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1409,
											"end": 1424,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 1409,
											"end": 1454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1409,
											"end": 1454,
											"name": "tag",
											"source": 5,
											"value": "241"
										},
										{
											"begin": 1409,
											"end": 1454,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1464,
											"end": 1485,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "243"
										},
										{
											"begin": 1470,
											"end": 1477,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1479,
											"end": 1484,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1464,
											"end": 1469,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "217"
										},
										{
											"begin": 1464,
											"end": 1485,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1464,
											"end": 1485,
											"name": "tag",
											"source": 5,
											"value": "243"
										},
										{
											"begin": 1464,
											"end": 1485,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1334,
											"end": 1492,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1334,
											"end": 1492,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1334,
											"end": 1492,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4131,
											"end": 4383,
											"name": "tag",
											"source": 15,
											"value": "112"
										},
										{
											"begin": 4131,
											"end": 4383,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4171,
											"end": 4178,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4188,
											"end": 4205,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4208,
											"end": 4229,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "245"
										},
										{
											"begin": 4208,
											"end": 4227,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "138"
										},
										{
											"begin": 4208,
											"end": 4229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4208,
											"end": 4229,
											"name": "tag",
											"source": 15,
											"value": "245"
										},
										{
											"begin": 4208,
											"end": 4229,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4188,
											"end": 4229,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4188,
											"end": 4229,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4235,
											"end": 4252,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4265,
											"end": 4286,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "246"
										},
										{
											"begin": 4265,
											"end": 4284,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "153"
										},
										{
											"begin": 4265,
											"end": 4286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4265,
											"end": 4286,
											"name": "tag",
											"source": 15,
											"value": "246"
										},
										{
											"begin": 4265,
											"end": 4286,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4255,
											"end": 4262,
											"name": "PUSH",
											"source": 15,
											"value": "5F5E100"
										},
										{
											"begin": 4255,
											"end": 4286,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "247"
										},
										{
											"begin": 4255,
											"end": 4286,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4255,
											"end": 4286,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4255,
											"end": 4286,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "248"
										},
										{
											"begin": 4255,
											"end": 4286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4255,
											"end": 4286,
											"name": "tag",
											"source": 15,
											"value": "247"
										},
										{
											"begin": 4255,
											"end": 4286,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4235,
											"end": 4286,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4235,
											"end": 4286,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4293,
											"end": 4304,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4351,
											"end": 4359,
											"name": "PUSH",
											"source": 15,
											"value": "2540BE400"
										},
										{
											"begin": 4334,
											"end": 4347,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4312,
											"end": 4325,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 4307,
											"end": 4348,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "249"
										},
										{
											"begin": 4307,
											"end": 4348,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4307,
											"end": 4348,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4307,
											"end": 4348,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "198"
										},
										{
											"begin": 4307,
											"end": 4348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4307,
											"end": 4348,
											"name": "tag",
											"source": 15,
											"value": "249"
										},
										{
											"begin": 4307,
											"end": 4348,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4307,
											"end": 4359,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "250"
										},
										{
											"begin": 4307,
											"end": 4359,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4307,
											"end": 4359,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4307,
											"end": 4359,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "198"
										},
										{
											"begin": 4307,
											"end": 4359,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4307,
											"end": 4359,
											"name": "tag",
											"source": 15,
											"value": "250"
										},
										{
											"begin": 4307,
											"end": 4359,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4293,
											"end": 4359,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4293,
											"end": 4359,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4372,
											"end": 4378,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4365,
											"end": 4378,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 4365,
											"end": 4378,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4365,
											"end": 4378,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4365,
											"end": 4378,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4365,
											"end": 4378,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4131,
											"end": 4383,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4131,
											"end": 4383,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2487,
											"end": 2494,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2506,
											"end": 2530,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2533,
											"end": 2553,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "252"
										},
										{
											"begin": 2533,
											"end": 2551,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 2533,
											"end": 2553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2533,
											"end": 2553,
											"name": "tag",
											"source": 1,
											"value": "252"
										},
										{
											"begin": 2533,
											"end": 2553,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2506,
											"end": 2553,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2506,
											"end": 2553,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2570,
											"end": 2571,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2563,
											"end": 2578,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2563,
											"end": 2578,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2563,
											"end": 2578,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2441,
											"end": 2585,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3268,
											"end": 3416,
											"name": "tag",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 3268,
											"end": 3416,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3328,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 3340,
											"end": 3362,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3365,
											"end": 3383,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "255"
										},
										{
											"begin": 3365,
											"end": 3381,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 3365,
											"end": 3383,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3365,
											"end": 3383,
											"name": "tag",
											"source": 4,
											"value": "255"
										},
										{
											"begin": 3365,
											"end": 3383,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3340,
											"end": 3383,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3340,
											"end": 3383,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3400,
											"end": 3401,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3400,
											"end": 3409,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3400,
											"end": 3409,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "256"
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 3393,
											"end": 3409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "tag",
											"source": 4,
											"value": "256"
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "257"
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 3393,
											"end": 3409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "tag",
											"source": 4,
											"value": "257"
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "258"
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "259"
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "258"
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "tag",
											"source": 4,
											"value": "259"
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "tag",
											"source": 4,
											"value": "260"
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "260"
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "tag",
											"source": 4,
											"value": "258"
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3268,
											"end": 3416,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3268,
											"end": 3416,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4767,
											"end": 4945,
											"name": "tag",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 4767,
											"end": 4945,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4836,
											"end": 4840,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4852,
											"end": 4865,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4868,
											"end": 4880,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "262"
										},
										{
											"begin": 4868,
											"end": 4878,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 4868,
											"end": 4880,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4868,
											"end": 4880,
											"name": "tag",
											"source": 4,
											"value": "262"
										},
										{
											"begin": 4868,
											"end": 4880,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4852,
											"end": 4880,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4852,
											"end": 4880,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4890,
											"end": 4917,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "263"
										},
										{
											"begin": 4900,
											"end": 4905,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4907,
											"end": 4909,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4911,
											"end": 4916,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4890,
											"end": 4899,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 4890,
											"end": 4917,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4890,
											"end": 4917,
											"name": "tag",
											"source": 4,
											"value": "263"
										},
										{
											"begin": 4890,
											"end": 4917,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4934,
											"end": 4938,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4927,
											"end": 4938,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4927,
											"end": 4938,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4927,
											"end": 4938,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4767,
											"end": 4945,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4767,
											"end": 4945,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4767,
											"end": 4945,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4767,
											"end": 4945,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4767,
											"end": 4945,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2943,
											"end": 3040,
											"name": "tag",
											"source": 15,
											"value": "131"
										},
										{
											"begin": 2943,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3011,
											"end": 3035,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "265"
										},
										{
											"begin": 3017,
											"end": 3024,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3026,
											"end": 3034,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3011,
											"end": 3016,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "217"
										},
										{
											"begin": 3011,
											"end": 3035,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3011,
											"end": 3035,
											"name": "tag",
											"source": 15,
											"value": "265"
										},
										{
											"begin": 3011,
											"end": 3035,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2943,
											"end": 3040,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2943,
											"end": 3040,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2943,
											"end": 3040,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "tag",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 3,
											"value": "352E302E30000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 1877,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3065,
											"end": 3574,
											"name": "tag",
											"source": 15,
											"value": "138"
										},
										{
											"begin": 3065,
											"end": 3574,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3117,
											"end": 3123,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3217,
											"end": 3229,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3497,
											"end": 3504,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3497,
											"end": 3504,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3497,
											"end": 3504,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 3497,
											"end": 3504,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3497,
											"end": 3504,
											"name": "PUSH",
											"source": 15,
											"value": "100"
										},
										{
											"begin": 3497,
											"end": 3504,
											"name": "EXP",
											"source": 15
										},
										{
											"begin": 3497,
											"end": 3504,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3497,
											"end": 3504,
											"name": "DIV",
											"source": 15
										},
										{
											"begin": 3497,
											"end": 3504,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3497,
											"end": 3504,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 3497,
											"end": 3520,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3497,
											"end": 3520,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 3497,
											"end": 3520,
											"name": "PUSH",
											"source": 15,
											"value": "FEAF968C"
										},
										{
											"begin": 3497,
											"end": 3522,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 3497,
											"end": 3522,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 3497,
											"end": 3522,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3497,
											"end": 3522,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3497,
											"end": 3522,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 3497,
											"end": 3522,
											"name": "PUSH",
											"source": 15,
											"value": "E0"
										},
										{
											"begin": 3497,
											"end": 3522,
											"name": "SHL",
											"source": 15
										},
										{
											"begin": 3497,
											"end": 3522,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3497,
											"end": 3522,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3497,
											"end": 3522,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 3497,
											"end": 3522,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3497,
											"end": 3522,
											"name": "PUSH",
											"source": 15,
											"value": "A0"
										},
										{
											"begin": 3497,
											"end": 3522,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 3497,
											"end": 3522,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 3497,
											"end": 3522,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3497,
											"end": 3522,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 3497,
											"end": 3522,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 3497,
											"end": 3522,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3497,
											"end": 3522,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 3497,
											"end": 3522,
											"name": "GAS",
											"source": 15
										},
										{
											"begin": 3497,
											"end": 3522,
											"name": "STATICCALL",
											"source": 15
										},
										{
											"begin": 3497,
											"end": 3522,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 3497,
											"end": 3522,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3497,
											"end": 3522,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 3497,
											"end": 3522,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "268"
										},
										{
											"begin": 3497,
											"end": 3522,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3497,
											"end": 3522,
											"name": "RETURNDATASIZE",
											"source": 15
										},
										{
											"begin": 3497,
											"end": 3522,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3497,
											"end": 3522,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3497,
											"end": 3522,
											"name": "RETURNDATACOPY",
											"source": 15
										},
										{
											"begin": 3497,
											"end": 3522,
											"name": "RETURNDATASIZE",
											"source": 15
										},
										{
											"begin": 3497,
											"end": 3522,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3497,
											"end": 3522,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 3497,
											"end": 3522,
											"name": "tag",
											"source": 15,
											"value": "268"
										},
										{
											"begin": 3497,
											"end": 3522,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3497,
											"end": 3522,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3497,
											"end": 3522,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3497,
											"end": 3522,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3497,
											"end": 3522,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3497,
											"end": 3522,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 3497,
											"end": 3522,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 3497,
											"end": 3522,
											"name": "RETURNDATASIZE",
											"source": 15
										},
										{
											"begin": 3497,
											"end": 3522,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 3497,
											"end": 3522,
											"name": "NOT",
											"source": 15
										},
										{
											"begin": 3497,
											"end": 3522,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 3497,
											"end": 3522,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3497,
											"end": 3522,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3497,
											"end": 3522,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 3497,
											"end": 3522,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3497,
											"end": 3522,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3497,
											"end": 3522,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3497,
											"end": 3522,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 3497,
											"end": 3522,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3497,
											"end": 3522,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3497,
											"end": 3522,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3497,
											"end": 3522,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3497,
											"end": 3522,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3497,
											"end": 3522,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "269"
										},
										{
											"begin": 3497,
											"end": 3522,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3497,
											"end": 3522,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3497,
											"end": 3522,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "270"
										},
										{
											"begin": 3497,
											"end": 3522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3497,
											"end": 3522,
											"name": "tag",
											"source": 15,
											"value": "269"
										},
										{
											"begin": 3497,
											"end": 3522,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3131,
											"end": 3522,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3131,
											"end": 3522,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3131,
											"end": 3522,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3131,
											"end": 3522,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3131,
											"end": 3522,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3131,
											"end": 3522,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3536,
											"end": 3541,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3529,
											"end": 3541,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3529,
											"end": 3541,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3529,
											"end": 3541,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3065,
											"end": 3574,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3065,
											"end": 3574,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1367,
											"end": 1563,
											"name": "tag",
											"source": 15,
											"value": "144"
										},
										{
											"begin": 1367,
											"end": 1563,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4158,
											"end": 4188,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4191,
											"end": 4217,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "272"
										},
										{
											"begin": 4191,
											"end": 4215,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "273"
										},
										{
											"begin": 4191,
											"end": 4217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4191,
											"end": 4217,
											"name": "tag",
											"source": 2,
											"value": "272"
										},
										{
											"begin": 4191,
											"end": 4217,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4158,
											"end": 4217,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4158,
											"end": 4217,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4279,
											"end": 4298,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4302,
											"end": 4303,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4301,
											"end": 4317,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4279,
											"end": 4317,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4279,
											"end": 4317,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4327,
											"end": 4345,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4348,
											"end": 4349,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4327,
											"end": 4362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4327,
											"end": 4362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4706,
											"end": 4723,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4741,
											"end": 4742,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4726,
											"end": 4737,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4726,
											"end": 4742,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4726,
											"end": 4742,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4726,
											"end": 4742,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "274"
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4746,
											"end": 4760,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "tag",
											"source": 2,
											"value": "274"
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4706,
											"end": 4760,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4706,
											"end": 4760,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4787,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4805,
											"end": 4806,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4790,
											"end": 4801,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "275"
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4839,
											"end": 4840,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4818,
											"end": 4822,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 4810,
											"end": 4835,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4810,
											"end": 4835,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4810,
											"end": 4835,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 4810,
											"end": 4840,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "tag",
											"source": 2,
											"value": "275"
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4840,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4840,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4856,
											"end": 4868,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4855,
											"end": 4868,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "276"
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4873,
											"end": 4885,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4872,
											"end": 4885,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "tag",
											"source": 2,
											"value": "276"
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "277"
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 2,
											"value": "F92EE8A900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "tag",
											"source": 2,
											"value": "277"
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4968,
											"end": 4969,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4951,
											"end": 4952,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4951,
											"end": 4965,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4951,
											"end": 4965,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4951,
											"end": 4965,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4983,
											"end": 4997,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "278"
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5031,
											"end": 5035,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5013,
											"end": 5014,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5013,
											"end": 5028,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5013,
											"end": 5028,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5013,
											"end": 5028,
											"name": "PUSH",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "tag",
											"source": 2,
											"value": "278"
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1434,
											"end": 1466,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "280"
										},
										{
											"begin": 1434,
											"end": 1466,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1434,
											"end": 1466,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 1434,
											"end": 1466,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1434,
											"end": 1466,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1434,
											"end": 1466,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1434,
											"end": 1466,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1434,
											"end": 1466,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1434,
											"end": 1466,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1434,
											"end": 1466,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "9"
										},
										{
											"begin": 1434,
											"end": 1466,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1434,
											"end": 1466,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1434,
											"end": 1466,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1434,
											"end": 1466,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1434,
											"end": 1466,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "43616D70546F6B656E0000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1434,
											"end": 1466,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1434,
											"end": 1466,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1434,
											"end": 1466,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1434,
											"end": 1466,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1434,
											"end": 1466,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 1434,
											"end": 1466,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1434,
											"end": 1466,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1434,
											"end": 1466,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1434,
											"end": 1466,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1434,
											"end": 1466,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1434,
											"end": 1466,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1434,
											"end": 1466,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "3"
										},
										{
											"begin": 1434,
											"end": 1466,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1434,
											"end": 1466,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1434,
											"end": 1466,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1434,
											"end": 1466,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1434,
											"end": 1466,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "43544B0000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1434,
											"end": 1466,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1434,
											"end": 1466,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1434,
											"end": 1466,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1434,
											"end": 1446,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "281"
										},
										{
											"begin": 1434,
											"end": 1466,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1434,
											"end": 1466,
											"modifierDepth": 1,
											"name": "tag",
											"source": 15,
											"value": "280"
										},
										{
											"begin": 1434,
											"end": 1466,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1472,
											"end": 1494,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "282"
										},
										{
											"begin": 1472,
											"end": 1492,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "283"
										},
										{
											"begin": 1472,
											"end": 1494,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1472,
											"end": 1494,
											"modifierDepth": 1,
											"name": "tag",
											"source": 15,
											"value": "282"
										},
										{
											"begin": 1472,
											"end": 1494,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1500,
											"end": 1528,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "284"
										},
										{
											"begin": 1515,
											"end": 1527,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 1500,
											"end": 1514,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "285"
										},
										{
											"begin": 1500,
											"end": 1528,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1500,
											"end": 1528,
											"modifierDepth": 1,
											"name": "tag",
											"source": 15,
											"value": "284"
										},
										{
											"begin": 1500,
											"end": 1528,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1534,
											"end": 1558,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "286"
										},
										{
											"begin": 1534,
											"end": 1556,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "287"
										},
										{
											"begin": 1534,
											"end": 1558,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1534,
											"end": 1558,
											"modifierDepth": 1,
											"name": "tag",
											"source": 15,
											"value": "286"
										},
										{
											"begin": 1534,
											"end": 1558,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5070,
											"end": 5084,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "288"
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5118,
											"end": 5123,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5100,
											"end": 5101,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5100,
											"end": 5115,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5100,
											"end": 5115,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5100,
											"end": 5115,
											"name": "PUSH",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH",
											"source": 2,
											"value": "C7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2"
										},
										{
											"begin": 5154,
											"end": 5155,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "289"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "290"
										},
										{
											"begin": 5142,
											"end": 5156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "tag",
											"source": 2,
											"value": "289"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "LOG1",
											"source": 2
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "tag",
											"source": 2,
											"value": "288"
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1367,
											"end": 1563,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1367,
											"end": 1563,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "tag",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5083,
											"end": 5090,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5102,
											"end": 5124,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5127,
											"end": 5145,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "292"
										},
										{
											"begin": 5127,
											"end": 5143,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 5127,
											"end": 5145,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5127,
											"end": 5145,
											"name": "tag",
											"source": 4,
											"value": "292"
										},
										{
											"begin": 5127,
											"end": 5145,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5102,
											"end": 5145,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5102,
											"end": 5145,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5162,
											"end": 5163,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5162,
											"end": 5175,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 5162,
											"end": 5175,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5162,
											"end": 5182,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5176,
											"end": 5181,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5162,
											"end": 5182,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5162,
											"end": 5182,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5162,
											"end": 5182,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5162,
											"end": 5182,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5162,
											"end": 5182,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5162,
											"end": 5182,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5162,
											"end": 5182,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5162,
											"end": 5182,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5162,
											"end": 5182,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5162,
											"end": 5182,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5162,
											"end": 5182,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5162,
											"end": 5182,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5162,
											"end": 5182,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5162,
											"end": 5182,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5162,
											"end": 5182,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 5162,
											"end": 5191,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5183,
											"end": 5190,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5162,
											"end": 5191,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5162,
											"end": 5191,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5162,
											"end": 5191,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5162,
											"end": 5191,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5162,
											"end": 5191,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5162,
											"end": 5191,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5162,
											"end": 5191,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5162,
											"end": 5191,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5162,
											"end": 5191,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5162,
											"end": 5191,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5162,
											"end": 5191,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5162,
											"end": 5191,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5162,
											"end": 5191,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5162,
											"end": 5191,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5162,
											"end": 5191,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 5162,
											"end": 5191,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5155,
											"end": 5191,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5155,
											"end": 5191,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5155,
											"end": 5191,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5003,
											"end": 5198,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3600,
											"end": 4102,
											"name": "tag",
											"source": 15,
											"value": "153"
										},
										{
											"begin": 3600,
											"end": 4102,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3652,
											"end": 3658,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3752,
											"end": 3764,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4032,
											"end": 4039,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 4032,
											"end": 4039,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4032,
											"end": 4039,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4032,
											"end": 4039,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 4032,
											"end": 4039,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4032,
											"end": 4039,
											"name": "PUSH",
											"source": 15,
											"value": "100"
										},
										{
											"begin": 4032,
											"end": 4039,
											"name": "EXP",
											"source": 15
										},
										{
											"begin": 4032,
											"end": 4039,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4032,
											"end": 4039,
											"name": "DIV",
											"source": 15
										},
										{
											"begin": 4032,
											"end": 4039,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4032,
											"end": 4039,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 4032,
											"end": 4055,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4032,
											"end": 4055,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 4032,
											"end": 4055,
											"name": "PUSH",
											"source": 15,
											"value": "FEAF968C"
										},
										{
											"begin": 4032,
											"end": 4057,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 4032,
											"end": 4057,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 4032,
											"end": 4057,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4032,
											"end": 4057,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4032,
											"end": 4057,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 4032,
											"end": 4057,
											"name": "PUSH",
											"source": 15,
											"value": "E0"
										},
										{
											"begin": 4032,
											"end": 4057,
											"name": "SHL",
											"source": 15
										},
										{
											"begin": 4032,
											"end": 4057,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4032,
											"end": 4057,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 4032,
											"end": 4057,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 4032,
											"end": 4057,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4032,
											"end": 4057,
											"name": "PUSH",
											"source": 15,
											"value": "A0"
										},
										{
											"begin": 4032,
											"end": 4057,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 4032,
											"end": 4057,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 4032,
											"end": 4057,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4032,
											"end": 4057,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 4032,
											"end": 4057,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 4032,
											"end": 4057,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4032,
											"end": 4057,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 4032,
											"end": 4057,
											"name": "GAS",
											"source": 15
										},
										{
											"begin": 4032,
											"end": 4057,
											"name": "STATICCALL",
											"source": 15
										},
										{
											"begin": 4032,
											"end": 4057,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 4032,
											"end": 4057,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4032,
											"end": 4057,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 4032,
											"end": 4057,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "295"
										},
										{
											"begin": 4032,
											"end": 4057,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 4032,
											"end": 4057,
											"name": "RETURNDATASIZE",
											"source": 15
										},
										{
											"begin": 4032,
											"end": 4057,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4032,
											"end": 4057,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4032,
											"end": 4057,
											"name": "RETURNDATACOPY",
											"source": 15
										},
										{
											"begin": 4032,
											"end": 4057,
											"name": "RETURNDATASIZE",
											"source": 15
										},
										{
											"begin": 4032,
											"end": 4057,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4032,
											"end": 4057,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 4032,
											"end": 4057,
											"name": "tag",
											"source": 15,
											"value": "295"
										},
										{
											"begin": 4032,
											"end": 4057,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4032,
											"end": 4057,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4032,
											"end": 4057,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4032,
											"end": 4057,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4032,
											"end": 4057,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4032,
											"end": 4057,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 4032,
											"end": 4057,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 4032,
											"end": 4057,
											"name": "RETURNDATASIZE",
											"source": 15
										},
										{
											"begin": 4032,
											"end": 4057,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 4032,
											"end": 4057,
											"name": "NOT",
											"source": 15
										},
										{
											"begin": 4032,
											"end": 4057,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 4032,
											"end": 4057,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4032,
											"end": 4057,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4032,
											"end": 4057,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 4032,
											"end": 4057,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4032,
											"end": 4057,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4032,
											"end": 4057,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4032,
											"end": 4057,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 4032,
											"end": 4057,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 4032,
											"end": 4057,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4032,
											"end": 4057,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4032,
											"end": 4057,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4032,
											"end": 4057,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4032,
											"end": 4057,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "296"
										},
										{
											"begin": 4032,
											"end": 4057,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4032,
											"end": 4057,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4032,
											"end": 4057,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "270"
										},
										{
											"begin": 4032,
											"end": 4057,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4032,
											"end": 4057,
											"name": "tag",
											"source": 15,
											"value": "296"
										},
										{
											"begin": 4032,
											"end": 4057,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3666,
											"end": 4057,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3666,
											"end": 4057,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3666,
											"end": 4057,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3666,
											"end": 4057,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3666,
											"end": 4057,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3666,
											"end": 4057,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4070,
											"end": 4075,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4063,
											"end": 4075,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4063,
											"end": 4075,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4063,
											"end": 4075,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3600,
											"end": 4102,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3600,
											"end": 4102,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3510,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3489,
											"end": 3511,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3489,
											"end": 3511,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3489,
											"end": 3497,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3489,
											"end": 3511,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3489,
											"end": 3511,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3489,
											"end": 3511,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "300"
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3562,
											"end": 3563,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "301"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 3534,
											"end": 3565,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "301"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "300"
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3585,
											"end": 3613,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "302"
										},
										{
											"begin": 3604,
											"end": 3612,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3585,
											"end": 3603,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 3585,
											"end": 3613,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3585,
											"end": 3613,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "302"
										},
										{
											"begin": 3585,
											"end": 3613,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3405,
											"end": 3620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2256,
											"end": 2402,
											"name": "tag",
											"source": 15,
											"value": "161"
										},
										{
											"begin": 2256,
											"end": 2402,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2293,
											"end": 2307,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2310,
											"end": 2324,
											"name": "PUSH",
											"source": 15,
											"value": "1B1AE4D6E2EF500000"
										},
										{
											"begin": 2293,
											"end": 2324,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2293,
											"end": 2324,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2330,
											"end": 2355,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "304"
										},
										{
											"begin": 2336,
											"end": 2346,
											"name": "CALLER",
											"source": 15
										},
										{
											"begin": 2348,
											"end": 2354,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2330,
											"end": 2335,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "211"
										},
										{
											"begin": 2330,
											"end": 2355,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2330,
											"end": 2355,
											"name": "tag",
											"source": 15,
											"value": "304"
										},
										{
											"begin": 2330,
											"end": 2355,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2391,
											"end": 2397,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2361,
											"end": 2375,
											"name": "PUSH",
											"source": 15,
											"value": "2"
										},
										{
											"begin": 2361,
											"end": 2387,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2376,
											"end": 2386,
											"name": "CALLER",
											"source": 15
										},
										{
											"begin": 2361,
											"end": 2387,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2361,
											"end": 2387,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 2361,
											"end": 2387,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2361,
											"end": 2387,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 2361,
											"end": 2387,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2361,
											"end": 2387,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2361,
											"end": 2387,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2361,
											"end": 2387,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2361,
											"end": 2387,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2361,
											"end": 2387,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2361,
											"end": 2387,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2361,
											"end": 2387,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2361,
											"end": 2387,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2361,
											"end": 2387,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2361,
											"end": 2387,
											"name": "KECCAK256",
											"source": 15
										},
										{
											"begin": 2361,
											"end": 2387,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2361,
											"end": 2397,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2361,
											"end": 2397,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2361,
											"end": 2397,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 2361,
											"end": 2397,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "305"
										},
										{
											"begin": 2361,
											"end": 2397,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2361,
											"end": 2397,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2361,
											"end": 2397,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "213"
										},
										{
											"begin": 2361,
											"end": 2397,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2361,
											"end": 2397,
											"name": "tag",
											"source": 15,
											"value": "305"
										},
										{
											"begin": 2361,
											"end": 2397,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2361,
											"end": 2397,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 2361,
											"end": 2397,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2361,
											"end": 2397,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2361,
											"end": 2397,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2361,
											"end": 2397,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2361,
											"end": 2397,
											"name": "SSTORE",
											"source": 15
										},
										{
											"begin": 2361,
											"end": 2397,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2287,
											"end": 2402,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2256,
											"end": 2402,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2242,
											"end": 2395,
											"name": "tag",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 2242,
											"end": 2395,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2292,
											"end": 2314,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2359,
											"end": 2379,
											"name": "PUSH",
											"source": 4,
											"value": "52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00"
										},
										{
											"begin": 2349,
											"end": 2379,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2349,
											"end": 2379,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2242,
											"end": 2395,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2242,
											"end": 2395,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 887,
											"end": 983,
											"name": "tag",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 887,
											"end": 983,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 940,
											"end": 947,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 959,
											"end": 976,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 959,
											"end": 976,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 887,
											"end": 983,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 887,
											"end": 983,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10264,
											"end": 10392,
											"name": "tag",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 10264,
											"end": 10392,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10348,
											"end": 10385,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "309"
										},
										{
											"begin": 10357,
											"end": 10362,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10364,
											"end": 10371,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10373,
											"end": 10378,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10380,
											"end": 10384,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 10348,
											"end": 10356,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "310"
										},
										{
											"begin": 10348,
											"end": 10385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10348,
											"end": 10385,
											"name": "tag",
											"source": 4,
											"value": "309"
										},
										{
											"begin": 10348,
											"end": 10385,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10264,
											"end": 10392,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10264,
											"end": 10392,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10264,
											"end": 10392,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10264,
											"end": 10392,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11993,
											"end": 12470,
											"name": "tag",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 11993,
											"end": 12470,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12092,
											"end": 12116,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12119,
											"end": 12144,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "312"
										},
										{
											"begin": 12129,
											"end": 12134,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 12136,
											"end": 12143,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 12119,
											"end": 12128,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 12119,
											"end": 12144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12119,
											"end": 12144,
											"name": "tag",
											"source": 4,
											"value": "312"
										},
										{
											"begin": 12119,
											"end": 12144,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12092,
											"end": 12144,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12092,
											"end": 12144,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12178,
											"end": 12195,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12158,
											"end": 12174,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12158,
											"end": 12195,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 12154,
											"end": 12464,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "313"
										},
										{
											"begin": 12154,
											"end": 12464,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 12234,
											"end": 12239,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12215,
											"end": 12231,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12215,
											"end": 12239,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 12211,
											"end": 12341,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 12211,
											"end": 12341,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "314"
										},
										{
											"begin": 12211,
											"end": 12341,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 12293,
											"end": 12300,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12302,
											"end": 12318,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12320,
											"end": 12325,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 12266,
											"end": 12326,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 12266,
											"end": 12326,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 12266,
											"end": 12326,
											"name": "PUSH",
											"source": 4,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12266,
											"end": 12326,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12266,
											"end": 12326,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 12266,
											"end": 12326,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 12266,
											"end": 12326,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12266,
											"end": 12326,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "315"
										},
										{
											"begin": 12266,
											"end": 12326,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 12266,
											"end": 12326,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 12266,
											"end": 12326,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 12266,
											"end": 12326,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12266,
											"end": 12326,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "316"
										},
										{
											"begin": 12266,
											"end": 12326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12266,
											"end": 12326,
											"name": "tag",
											"source": 4,
											"value": "315"
										},
										{
											"begin": 12266,
											"end": 12326,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12266,
											"end": 12326,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 12266,
											"end": 12326,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 12266,
											"end": 12326,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 12266,
											"end": 12326,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 12266,
											"end": 12326,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 12266,
											"end": 12326,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12266,
											"end": 12326,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 12211,
											"end": 12341,
											"name": "tag",
											"source": 4,
											"value": "314"
										},
										{
											"begin": 12211,
											"end": 12341,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12382,
											"end": 12439,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "317"
										},
										{
											"begin": 12391,
											"end": 12396,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 12398,
											"end": 12405,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 12426,
											"end": 12431,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 12407,
											"end": 12423,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 12407,
											"end": 12431,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 12433,
											"end": 12438,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12382,
											"end": 12390,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "310"
										},
										{
											"begin": 12382,
											"end": 12439,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12382,
											"end": 12439,
											"name": "tag",
											"source": 4,
											"value": "317"
										},
										{
											"begin": 12382,
											"end": 12439,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12154,
											"end": 12464,
											"name": "tag",
											"source": 4,
											"value": "313"
										},
										{
											"begin": 12154,
											"end": 12464,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12082,
											"end": 12470,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11993,
											"end": 12470,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11993,
											"end": 12470,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11993,
											"end": 12470,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11993,
											"end": 12470,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6868,
											"end": 7168,
											"name": "tag",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 6868,
											"end": 7168,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6967,
											"end": 6968,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6951,
											"end": 6969,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6951,
											"end": 6969,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6951,
											"end": 6955,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6951,
											"end": 6969,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6951,
											"end": 6969,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6951,
											"end": 6969,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6947,
											"end": 7033,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "319"
										},
										{
											"begin": 6947,
											"end": 7033,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7019,
											"end": 7020,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6992,
											"end": 7022,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6992,
											"end": 7022,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6992,
											"end": 7022,
											"name": "PUSH",
											"source": 4,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6992,
											"end": 7022,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6992,
											"end": 7022,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6992,
											"end": 7022,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6992,
											"end": 7022,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6992,
											"end": 7022,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "320"
										},
										{
											"begin": 6992,
											"end": 7022,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6992,
											"end": 7022,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6992,
											"end": 7022,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 6992,
											"end": 7022,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6992,
											"end": 7022,
											"name": "tag",
											"source": 4,
											"value": "320"
										},
										{
											"begin": 6992,
											"end": 7022,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6992,
											"end": 7022,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6992,
											"end": 7022,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6992,
											"end": 7022,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6992,
											"end": 7022,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6992,
											"end": 7022,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6992,
											"end": 7022,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6992,
											"end": 7022,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6947,
											"end": 7033,
											"name": "tag",
											"source": 4,
											"value": "319"
										},
										{
											"begin": 6947,
											"end": 7033,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7060,
											"end": 7061,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7046,
											"end": 7062,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7046,
											"end": 7062,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7046,
											"end": 7048,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7046,
											"end": 7062,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7046,
											"end": 7062,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7046,
											"end": 7062,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7042,
											"end": 7128,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "321"
										},
										{
											"begin": 7042,
											"end": 7128,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7114,
											"end": 7115,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7085,
											"end": 7117,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7085,
											"end": 7117,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7085,
											"end": 7117,
											"name": "PUSH",
											"source": 4,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7085,
											"end": 7117,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7085,
											"end": 7117,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7085,
											"end": 7117,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7085,
											"end": 7117,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7085,
											"end": 7117,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "322"
										},
										{
											"begin": 7085,
											"end": 7117,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7085,
											"end": 7117,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7085,
											"end": 7117,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 7085,
											"end": 7117,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7085,
											"end": 7117,
											"name": "tag",
											"source": 4,
											"value": "322"
										},
										{
											"begin": 7085,
											"end": 7117,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7085,
											"end": 7117,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7085,
											"end": 7117,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7085,
											"end": 7117,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7085,
											"end": 7117,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7085,
											"end": 7117,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7085,
											"end": 7117,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7085,
											"end": 7117,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7042,
											"end": 7128,
											"name": "tag",
											"source": 4,
											"value": "321"
										},
										{
											"begin": 7042,
											"end": 7128,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7137,
											"end": 7161,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "323"
										},
										{
											"begin": 7145,
											"end": 7149,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7151,
											"end": 7153,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7155,
											"end": 7160,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7137,
											"end": 7144,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "324"
										},
										{
											"begin": 7137,
											"end": 7161,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7137,
											"end": 7161,
											"name": "tag",
											"source": 4,
											"value": "323"
										},
										{
											"begin": 7137,
											"end": 7161,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6868,
											"end": 7168,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6868,
											"end": 7168,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6868,
											"end": 7168,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6868,
											"end": 7168,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8996,
											"end": 9204,
											"name": "tag",
											"source": 4,
											"value": "211"
										},
										{
											"begin": 8996,
											"end": 9204,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9085,
											"end": 9086,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9066,
											"end": 9087,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9066,
											"end": 9087,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9066,
											"end": 9073,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9066,
											"end": 9087,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9066,
											"end": 9087,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9066,
											"end": 9087,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9062,
											"end": 9153,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "326"
										},
										{
											"begin": 9062,
											"end": 9153,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9139,
											"end": 9140,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9110,
											"end": 9142,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9110,
											"end": 9142,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9110,
											"end": 9142,
											"name": "PUSH",
											"source": 4,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9110,
											"end": 9142,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9110,
											"end": 9142,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9110,
											"end": 9142,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 9110,
											"end": 9142,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9110,
											"end": 9142,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "327"
										},
										{
											"begin": 9110,
											"end": 9142,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9110,
											"end": 9142,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9110,
											"end": 9142,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 9110,
											"end": 9142,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9110,
											"end": 9142,
											"name": "tag",
											"source": 4,
											"value": "327"
										},
										{
											"begin": 9110,
											"end": 9142,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9110,
											"end": 9142,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9110,
											"end": 9142,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9110,
											"end": 9142,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9110,
											"end": 9142,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9110,
											"end": 9142,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9110,
											"end": 9142,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9110,
											"end": 9142,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 9062,
											"end": 9153,
											"name": "tag",
											"source": 4,
											"value": "326"
										},
										{
											"begin": 9062,
											"end": 9153,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9162,
											"end": 9197,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "328"
										},
										{
											"begin": 9178,
											"end": 9179,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9182,
											"end": 9189,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9191,
											"end": 9196,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9162,
											"end": 9169,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "324"
										},
										{
											"begin": 9162,
											"end": 9197,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9162,
											"end": 9197,
											"name": "tag",
											"source": 4,
											"value": "328"
										},
										{
											"begin": 9162,
											"end": 9197,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8996,
											"end": 9204,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8996,
											"end": 9204,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8996,
											"end": 9204,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9522,
											"end": 9728,
											"name": "tag",
											"source": 4,
											"value": "217"
										},
										{
											"begin": 9522,
											"end": 9728,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9611,
											"end": 9612,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9592,
											"end": 9613,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9592,
											"end": 9613,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9592,
											"end": 9599,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9592,
											"end": 9613,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9592,
											"end": 9613,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9592,
											"end": 9613,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9588,
											"end": 9677,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "330"
										},
										{
											"begin": 9588,
											"end": 9677,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9663,
											"end": 9664,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9636,
											"end": 9666,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9636,
											"end": 9666,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9636,
											"end": 9666,
											"name": "PUSH",
											"source": 4,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9636,
											"end": 9666,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9636,
											"end": 9666,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9636,
											"end": 9666,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 9636,
											"end": 9666,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9636,
											"end": 9666,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "331"
										},
										{
											"begin": 9636,
											"end": 9666,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9636,
											"end": 9666,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9636,
											"end": 9666,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 9636,
											"end": 9666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9636,
											"end": 9666,
											"name": "tag",
											"source": 4,
											"value": "331"
										},
										{
											"begin": 9636,
											"end": 9666,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9636,
											"end": 9666,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9636,
											"end": 9666,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9636,
											"end": 9666,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9636,
											"end": 9666,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9636,
											"end": 9666,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9636,
											"end": 9666,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9636,
											"end": 9666,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 9588,
											"end": 9677,
											"name": "tag",
											"source": 4,
											"value": "330"
										},
										{
											"begin": 9588,
											"end": 9677,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9686,
											"end": 9721,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "332"
										},
										{
											"begin": 9694,
											"end": 9701,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9711,
											"end": 9712,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9715,
											"end": 9720,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9686,
											"end": 9693,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "324"
										},
										{
											"begin": 9686,
											"end": 9721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9686,
											"end": 9721,
											"name": "tag",
											"source": 4,
											"value": "332"
										},
										{
											"begin": 9686,
											"end": 9721,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9522,
											"end": 9728,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9522,
											"end": 9728,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9522,
											"end": 9728,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4599,
											"end": 4911,
											"name": "tag",
											"source": 3,
											"value": "220"
										},
										{
											"begin": 4599,
											"end": 4911,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4688,
											"end": 4694,
											"name": "PUSHIMMUTABLE",
											"source": 3,
											"value": "514"
										},
										{
											"begin": 4671,
											"end": 4694,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4671,
											"end": 4694,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4679,
											"end": 4683,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 4671,
											"end": 4694,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4671,
											"end": 4694,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4671,
											"end": 4694,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 4671,
											"end": 4791,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4671,
											"end": 4791,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "334"
										},
										{
											"begin": 4671,
											"end": 4791,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4671,
											"end": 4791,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4785,
											"end": 4791,
											"name": "PUSHIMMUTABLE",
											"source": 3,
											"value": "514"
										},
										{
											"begin": 4749,
											"end": 4791,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4749,
											"end": 4791,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4749,
											"end": 4781,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "335"
										},
										{
											"begin": 4749,
											"end": 4779,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "336"
										},
										{
											"begin": 4749,
											"end": 4781,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4749,
											"end": 4781,
											"name": "tag",
											"source": 3,
											"value": "335"
										},
										{
											"begin": 4749,
											"end": 4781,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4749,
											"end": 4791,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4749,
											"end": 4791,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4749,
											"end": 4791,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 4749,
											"end": 4791,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4671,
											"end": 4791,
											"name": "tag",
											"source": 3,
											"value": "334"
										},
										{
											"begin": 4671,
											"end": 4791,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4654,
											"end": 4905,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4654,
											"end": 4905,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "337"
										},
										{
											"begin": 4654,
											"end": 4905,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "PUSH",
											"source": 3,
											"value": "E07C8DBA00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4654,
											"end": 4905,
											"name": "tag",
											"source": 3,
											"value": "337"
										},
										{
											"begin": 4654,
											"end": 4905,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4599,
											"end": 4911,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1567,
											"end": 1671,
											"name": "tag",
											"source": 15,
											"value": "223"
										},
										{
											"begin": 1567,
											"end": 1671,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "339"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 1,
											"value": "339"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1567,
											"end": 1671,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1567,
											"end": 1671,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6052,
											"end": 6590,
											"name": "tag",
											"source": 3,
											"value": "225"
										},
										{
											"begin": 6052,
											"end": 6590,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6169,
											"end": 6186,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6151,
											"end": 6201,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6151,
											"end": 6201,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6151,
											"end": 6201,
											"name": "PUSH",
											"source": 3,
											"value": "52D1902D"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "STATICCALL",
											"source": 3
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "342"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "343"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "344"
										},
										{
											"begin": 6151,
											"end": 6203,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "tag",
											"source": 3,
											"value": "343"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "tag",
											"source": 3,
											"value": "342"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6147,
											"end": 6584,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "345"
										},
										{
											"begin": 6147,
											"end": 6584,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6555,
											"end": 6572,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "PUSH",
											"source": 3,
											"value": "4C9C8CE300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "349"
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 6513,
											"end": 6573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "tag",
											"source": 3,
											"value": "349"
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6147,
											"end": 6584,
											"name": "tag",
											"source": 3,
											"value": "345"
										},
										{
											"begin": 6147,
											"end": 6584,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1327,
											"end": 1393,
											"name": "PUSH",
											"source": 9,
											"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
										},
										{
											"begin": 6253,
											"end": 6285,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6253,
											"end": 6285,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 6245,
											"end": 6249,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6245,
											"end": 6285,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 6241,
											"end": 6361,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "351"
										},
										{
											"begin": 6241,
											"end": 6361,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6341,
											"end": 6345,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "PUSH",
											"source": 3,
											"value": "AA1D49A400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "352"
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 6312,
											"end": 6346,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "tag",
											"source": 3,
											"value": "352"
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6241,
											"end": 6361,
											"name": "tag",
											"source": 3,
											"value": "351"
										},
										{
											"begin": 6241,
											"end": 6361,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6374,
											"end": 6428,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "353"
										},
										{
											"begin": 6404,
											"end": 6421,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6423,
											"end": 6427,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6374,
											"end": 6403,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "354"
										},
										{
											"begin": 6374,
											"end": 6428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6374,
											"end": 6428,
											"name": "tag",
											"source": 3,
											"value": "353"
										},
										{
											"begin": 6374,
											"end": 6428,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6204,
											"end": 6439,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6052,
											"end": 6590,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6052,
											"end": 6590,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6052,
											"end": 6590,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5028,
											"end": 5241,
											"name": "tag",
											"source": 3,
											"value": "228"
										},
										{
											"begin": 5028,
											"end": 5241,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5111,
											"end": 5117,
											"name": "PUSHIMMUTABLE",
											"source": 3,
											"value": "514"
										},
										{
											"begin": 5094,
											"end": 5117,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5094,
											"end": 5117,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5102,
											"end": 5106,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 5094,
											"end": 5117,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5094,
											"end": 5117,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5094,
											"end": 5117,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 5090,
											"end": 5235,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "356"
										},
										{
											"begin": 5090,
											"end": 5235,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "PUSH",
											"source": 3,
											"value": "E07C8DBA00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5090,
											"end": 5235,
											"name": "tag",
											"source": 3,
											"value": "356"
										},
										{
											"begin": 5090,
											"end": 5235,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5028,
											"end": 5241,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2658,
											"end": 2820,
											"name": "tag",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 2658,
											"end": 2820,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2728,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "358"
										},
										{
											"begin": 2728,
											"end": 2738,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 2728,
											"end": 2740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2728,
											"end": 2740,
											"name": "tag",
											"source": 1,
											"value": "358"
										},
										{
											"begin": 2728,
											"end": 2740,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2717,
											"end": 2724,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "359"
										},
										{
											"begin": 2717,
											"end": 2722,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 2717,
											"end": 2724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2717,
											"end": 2724,
											"name": "tag",
											"source": 1,
											"value": "359"
										},
										{
											"begin": 2717,
											"end": 2724,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "360"
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2790,
											"end": 2802,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "361"
										},
										{
											"begin": 2790,
											"end": 2800,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 2790,
											"end": 2802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2790,
											"end": 2802,
											"name": "tag",
											"source": 1,
											"value": "361"
										},
										{
											"begin": 2790,
											"end": 2802,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH",
											"source": 1,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "362"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 2763,
											"end": 2803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "tag",
											"source": 1,
											"value": "362"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "tag",
											"source": 1,
											"value": "360"
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2658,
											"end": 2820,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3774,
											"end": 4022,
											"name": "tag",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 3774,
											"end": 4022,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3847,
											"end": 3871,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3874,
											"end": 3894,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "364"
										},
										{
											"begin": 3874,
											"end": 3892,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 3874,
											"end": 3894,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3874,
											"end": 3894,
											"name": "tag",
											"source": 1,
											"value": "364"
										},
										{
											"begin": 3874,
											"end": 3894,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3847,
											"end": 3894,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3847,
											"end": 3894,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3904,
											"end": 3920,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3923,
											"end": 3924,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3904,
											"end": 3931,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3904,
											"end": 3931,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3960,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3941,
											"end": 3942,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3941,
											"end": 3949,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3941,
											"end": 3949,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3941,
											"end": 3949,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4006,
											"end": 4014,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3996,
											"end": 4004,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 1,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 3837,
											"end": 4022,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3837,
											"end": 4022,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3774,
											"end": 4022,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3774,
											"end": 4022,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1192,
											"end": 1351,
											"name": "tag",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 1192,
											"end": 1351,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1313,
											"end": 1335,
											"name": "PUSH",
											"source": 1,
											"value": "9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300"
										},
										{
											"begin": 1303,
											"end": 1335,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1303,
											"end": 1335,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1192,
											"end": 1351,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1192,
											"end": 1351,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8737,
											"end": 8907,
											"name": "tag",
											"source": 2,
											"value": "273"
										},
										{
											"begin": 8737,
											"end": 8907,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8795,
											"end": 8825,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8870,
											"end": 8891,
											"name": "PUSH",
											"source": 2,
											"value": "F0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00"
										},
										{
											"begin": 8860,
											"end": 8891,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8860,
											"end": 8891,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8737,
											"end": 8907,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8737,
											"end": 8907,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2577,
											"end": 2724,
											"name": "tag",
											"source": 4,
											"value": "281"
										},
										{
											"begin": 2577,
											"end": 2724,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "368"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "369"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "tag",
											"source": 2,
											"value": "368"
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2679,
											"end": 2717,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "371"
										},
										{
											"begin": 2702,
											"end": 2707,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2709,
											"end": 2716,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2679,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "372"
										},
										{
											"begin": 2679,
											"end": 2717,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2679,
											"end": 2717,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "371"
										},
										{
											"begin": 2679,
											"end": 2717,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2577,
											"end": 2724,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2577,
											"end": 2724,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2577,
											"end": 2724,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 666,
											"end": 731,
											"name": "tag",
											"source": 5,
											"value": "283"
										},
										{
											"begin": 666,
											"end": 731,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "374"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "369"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "tag",
											"source": 2,
											"value": "374"
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 666,
											"end": 731,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1847,
											"end": 1974,
											"name": "tag",
											"source": 1,
											"value": "285"
										},
										{
											"begin": 1847,
											"end": 1974,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "377"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "369"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "tag",
											"source": 2,
											"value": "377"
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1929,
											"end": 1967,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "379"
										},
										{
											"begin": 1954,
											"end": 1966,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1929,
											"end": 1953,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "380"
										},
										{
											"begin": 1929,
											"end": 1967,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1929,
											"end": 1967,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "379"
										},
										{
											"begin": 1929,
											"end": 1967,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1847,
											"end": 1974,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1847,
											"end": 1974,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2968,
											"end": 3035,
											"name": "tag",
											"source": 3,
											"value": "287"
										},
										{
											"begin": 2968,
											"end": 3035,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "382"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "369"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "tag",
											"source": 2,
											"value": "382"
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2968,
											"end": 3035,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11224,
											"end": 11711,
											"name": "tag",
											"source": 4,
											"value": "310"
										},
										{
											"begin": 11224,
											"end": 11711,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11332,
											"end": 11354,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11357,
											"end": 11375,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "385"
										},
										{
											"begin": 11357,
											"end": 11373,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 11357,
											"end": 11375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11357,
											"end": 11375,
											"name": "tag",
											"source": 4,
											"value": "385"
										},
										{
											"begin": 11357,
											"end": 11375,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11332,
											"end": 11375,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11332,
											"end": 11375,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11406,
											"end": 11407,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11389,
											"end": 11408,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11389,
											"end": 11408,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11389,
											"end": 11394,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 11389,
											"end": 11408,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11389,
											"end": 11408,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11389,
											"end": 11408,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 11385,
											"end": 11474,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "386"
										},
										{
											"begin": 11385,
											"end": 11474,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 11460,
											"end": 11461,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11431,
											"end": 11463,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11431,
											"end": 11463,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 11431,
											"end": 11463,
											"name": "PUSH",
											"source": 4,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11431,
											"end": 11463,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11431,
											"end": 11463,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11431,
											"end": 11463,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 11431,
											"end": 11463,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11431,
											"end": 11463,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "387"
										},
										{
											"begin": 11431,
											"end": 11463,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11431,
											"end": 11463,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11431,
											"end": 11463,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 11431,
											"end": 11463,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11431,
											"end": 11463,
											"name": "tag",
											"source": 4,
											"value": "387"
										},
										{
											"begin": 11431,
											"end": 11463,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11431,
											"end": 11463,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11431,
											"end": 11463,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 11431,
											"end": 11463,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11431,
											"end": 11463,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11431,
											"end": 11463,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 11431,
											"end": 11463,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11431,
											"end": 11463,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 11385,
											"end": 11474,
											"name": "tag",
											"source": 4,
											"value": "386"
										},
										{
											"begin": 11385,
											"end": 11474,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11506,
											"end": 11507,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11487,
											"end": 11508,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11487,
											"end": 11508,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11487,
											"end": 11494,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11487,
											"end": 11508,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11487,
											"end": 11508,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11487,
											"end": 11508,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 11483,
											"end": 11573,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "388"
										},
										{
											"begin": 11483,
											"end": 11573,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 11559,
											"end": 11560,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11531,
											"end": 11562,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11531,
											"end": 11562,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 11531,
											"end": 11562,
											"name": "PUSH",
											"source": 4,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11531,
											"end": 11562,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11531,
											"end": 11562,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11531,
											"end": 11562,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 11531,
											"end": 11562,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11531,
											"end": 11562,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "389"
										},
										{
											"begin": 11531,
											"end": 11562,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11531,
											"end": 11562,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11531,
											"end": 11562,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 11531,
											"end": 11562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11531,
											"end": 11562,
											"name": "tag",
											"source": 4,
											"value": "389"
										},
										{
											"begin": 11531,
											"end": 11562,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11531,
											"end": 11562,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11531,
											"end": 11562,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 11531,
											"end": 11562,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11531,
											"end": 11562,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11531,
											"end": 11562,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 11531,
											"end": 11562,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11531,
											"end": 11562,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 11483,
											"end": 11573,
											"name": "tag",
											"source": 4,
											"value": "388"
										},
										{
											"begin": 11483,
											"end": 11573,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11614,
											"end": 11619,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11582,
											"end": 11583,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11582,
											"end": 11595,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 11582,
											"end": 11595,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11582,
											"end": 11602,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11596,
											"end": 11601,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 11582,
											"end": 11602,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11582,
											"end": 11602,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11582,
											"end": 11602,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11582,
											"end": 11602,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11582,
											"end": 11602,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11582,
											"end": 11602,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11582,
											"end": 11602,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 11582,
											"end": 11602,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11582,
											"end": 11602,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11582,
											"end": 11602,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11582,
											"end": 11602,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11582,
											"end": 11602,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 11582,
											"end": 11602,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11582,
											"end": 11602,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11582,
											"end": 11602,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 11582,
											"end": 11611,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11603,
											"end": 11610,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 11582,
											"end": 11611,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11582,
											"end": 11611,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11582,
											"end": 11611,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11582,
											"end": 11611,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11582,
											"end": 11611,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11582,
											"end": 11611,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11582,
											"end": 11611,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 11582,
											"end": 11611,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11582,
											"end": 11611,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11582,
											"end": 11611,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11582,
											"end": 11611,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11582,
											"end": 11611,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 11582,
											"end": 11611,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11582,
											"end": 11611,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11582,
											"end": 11611,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 11582,
											"end": 11619,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11582,
											"end": 11619,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11582,
											"end": 11619,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 11582,
											"end": 11619,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11633,
											"end": 11642,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11629,
											"end": 11705,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 11629,
											"end": 11705,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "390"
										},
										{
											"begin": 11629,
											"end": 11705,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 11679,
											"end": 11686,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11663,
											"end": 11694,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11663,
											"end": 11694,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11672,
											"end": 11677,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 11663,
											"end": 11694,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11663,
											"end": 11694,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11663,
											"end": 11694,
											"name": "PUSH",
											"source": 4,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 11688,
											"end": 11693,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 11663,
											"end": 11694,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11663,
											"end": 11694,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 11663,
											"end": 11694,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "391"
										},
										{
											"begin": 11663,
											"end": 11694,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11663,
											"end": 11694,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11663,
											"end": 11694,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 11663,
											"end": 11694,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11663,
											"end": 11694,
											"name": "tag",
											"source": 4,
											"value": "391"
										},
										{
											"begin": 11663,
											"end": 11694,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11663,
											"end": 11694,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11663,
											"end": 11694,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 11663,
											"end": 11694,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11663,
											"end": 11694,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11663,
											"end": 11694,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 11663,
											"end": 11694,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11663,
											"end": 11694,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 11629,
											"end": 11705,
											"name": "tag",
											"source": 4,
											"value": "390"
										},
										{
											"begin": 11629,
											"end": 11705,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11322,
											"end": 11711,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11224,
											"end": 11711,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11224,
											"end": 11711,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11224,
											"end": 11711,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11224,
											"end": 11711,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11224,
											"end": 11711,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7483,
											"end": 8653,
											"name": "tag",
											"source": 4,
											"value": "324"
										},
										{
											"begin": 7483,
											"end": 8653,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7568,
											"end": 7590,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7593,
											"end": 7611,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "393"
										},
										{
											"begin": 7593,
											"end": 7609,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 7593,
											"end": 7611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7593,
											"end": 7611,
											"name": "tag",
											"source": 4,
											"value": "393"
										},
										{
											"begin": 7593,
											"end": 7611,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7568,
											"end": 7611,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7568,
											"end": 7611,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7641,
											"end": 7642,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7625,
											"end": 7643,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7625,
											"end": 7643,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7625,
											"end": 7629,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7625,
											"end": 7643,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7625,
											"end": 7643,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7625,
											"end": 7643,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7621,
											"end": 8167,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "394"
										},
										{
											"begin": 7621,
											"end": 8167,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7779,
											"end": 7784,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7761,
											"end": 7762,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7761,
											"end": 7775,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 7761,
											"end": 7775,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7761,
											"end": 7775,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7761,
											"end": 7784,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7761,
											"end": 7784,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7761,
											"end": 7784,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7761,
											"end": 7784,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "395"
										},
										{
											"begin": 7761,
											"end": 7784,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7761,
											"end": 7784,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7761,
											"end": 7784,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "213"
										},
										{
											"begin": 7761,
											"end": 7784,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7761,
											"end": 7784,
											"name": "tag",
											"source": 4,
											"value": "395"
										},
										{
											"begin": 7761,
											"end": 7784,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7761,
											"end": 7784,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7761,
											"end": 7784,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7761,
											"end": 7784,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7761,
											"end": 7784,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7761,
											"end": 7784,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7761,
											"end": 7784,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 7761,
											"end": 7784,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7621,
											"end": 8167,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "396"
										},
										{
											"begin": 7621,
											"end": 8167,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7621,
											"end": 8167,
											"name": "tag",
											"source": 4,
											"value": "394"
										},
										{
											"begin": 7621,
											"end": 8167,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7815,
											"end": 7834,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7837,
											"end": 7838,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7837,
											"end": 7848,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7837,
											"end": 7848,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7837,
											"end": 7854,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7849,
											"end": 7853,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 7837,
											"end": 7854,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7837,
											"end": 7854,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7837,
											"end": 7854,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7837,
											"end": 7854,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7837,
											"end": 7854,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7837,
											"end": 7854,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7837,
											"end": 7854,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7837,
											"end": 7854,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7837,
											"end": 7854,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7837,
											"end": 7854,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7837,
											"end": 7854,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7837,
											"end": 7854,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7837,
											"end": 7854,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7837,
											"end": 7854,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7837,
											"end": 7854,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 7837,
											"end": 7854,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7815,
											"end": 7854,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7815,
											"end": 7854,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7886,
											"end": 7891,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7872,
											"end": 7883,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7872,
											"end": 7891,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 7868,
											"end": 7983,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7868,
											"end": 7983,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "397"
										},
										{
											"begin": 7868,
											"end": 7983,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7943,
											"end": 7947,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7949,
											"end": 7960,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7962,
											"end": 7967,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7918,
											"end": 7968,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7918,
											"end": 7968,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7918,
											"end": 7968,
											"name": "PUSH",
											"source": 4,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7918,
											"end": 7968,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7918,
											"end": 7968,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7918,
											"end": 7968,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7918,
											"end": 7968,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7918,
											"end": 7968,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "398"
										},
										{
											"begin": 7918,
											"end": 7968,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 7918,
											"end": 7968,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7918,
											"end": 7968,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7918,
											"end": 7968,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7918,
											"end": 7968,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "316"
										},
										{
											"begin": 7918,
											"end": 7968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7918,
											"end": 7968,
											"name": "tag",
											"source": 4,
											"value": "398"
										},
										{
											"begin": 7918,
											"end": 7968,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7918,
											"end": 7968,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7918,
											"end": 7968,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7918,
											"end": 7968,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7918,
											"end": 7968,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7918,
											"end": 7968,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7918,
											"end": 7968,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7918,
											"end": 7968,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7868,
											"end": 7983,
											"name": "tag",
											"source": 4,
											"value": "397"
										},
										{
											"begin": 7868,
											"end": 7983,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8137,
											"end": 8142,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8123,
											"end": 8134,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8123,
											"end": 8142,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8103,
											"end": 8104,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8103,
											"end": 8114,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8103,
											"end": 8114,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8103,
											"end": 8120,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8115,
											"end": 8119,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 8103,
											"end": 8120,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8103,
											"end": 8120,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8103,
											"end": 8120,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8103,
											"end": 8120,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8103,
											"end": 8120,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8103,
											"end": 8120,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8103,
											"end": 8120,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8103,
											"end": 8120,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8103,
											"end": 8120,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8103,
											"end": 8120,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8103,
											"end": 8120,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8103,
											"end": 8120,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8103,
											"end": 8120,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8103,
											"end": 8120,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8103,
											"end": 8120,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 8103,
											"end": 8142,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8103,
											"end": 8142,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8103,
											"end": 8142,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 8103,
											"end": 8142,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7801,
											"end": 8167,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7621,
											"end": 8167,
											"name": "tag",
											"source": 4,
											"value": "396"
										},
										{
											"begin": 7621,
											"end": 8167,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8195,
											"end": 8196,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8181,
											"end": 8197,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8181,
											"end": 8197,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8181,
											"end": 8183,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8181,
											"end": 8197,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8181,
											"end": 8197,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8181,
											"end": 8197,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8177,
											"end": 8606,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "399"
										},
										{
											"begin": 8177,
											"end": 8606,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8362,
											"end": 8367,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8344,
											"end": 8345,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8344,
											"end": 8358,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 8344,
											"end": 8358,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8344,
											"end": 8358,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8344,
											"end": 8367,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8344,
											"end": 8367,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8344,
											"end": 8367,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 8344,
											"end": 8367,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8344,
											"end": 8367,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 8344,
											"end": 8367,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8344,
											"end": 8367,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8344,
											"end": 8367,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8344,
											"end": 8367,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8344,
											"end": 8367,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 8344,
											"end": 8367,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8177,
											"end": 8606,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "400"
										},
										{
											"begin": 8177,
											"end": 8606,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8177,
											"end": 8606,
											"name": "tag",
											"source": 4,
											"value": "399"
										},
										{
											"begin": 8177,
											"end": 8606,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8576,
											"end": 8581,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8557,
											"end": 8558,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8557,
											"end": 8568,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8557,
											"end": 8568,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8557,
											"end": 8572,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8569,
											"end": 8571,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 8557,
											"end": 8572,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8557,
											"end": 8572,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8557,
											"end": 8572,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8557,
											"end": 8572,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8557,
											"end": 8572,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8557,
											"end": 8572,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8557,
											"end": 8572,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8557,
											"end": 8572,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8557,
											"end": 8572,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8557,
											"end": 8572,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8557,
											"end": 8572,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8557,
											"end": 8572,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8557,
											"end": 8572,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8557,
											"end": 8572,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8557,
											"end": 8572,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 8557,
											"end": 8572,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8557,
											"end": 8581,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8557,
											"end": 8581,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8557,
											"end": 8581,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 8557,
											"end": 8581,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8557,
											"end": 8581,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 8557,
											"end": 8581,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8557,
											"end": 8581,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8557,
											"end": 8581,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8557,
											"end": 8581,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8557,
											"end": 8581,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 8557,
											"end": 8581,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8177,
											"end": 8606,
											"name": "tag",
											"source": 4,
											"value": "400"
										},
										{
											"begin": 8177,
											"end": 8606,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8636,
											"end": 8638,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8621,
											"end": 8646,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8621,
											"end": 8646,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8630,
											"end": 8634,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8621,
											"end": 8646,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8621,
											"end": 8646,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8621,
											"end": 8646,
											"name": "PUSH",
											"source": 4,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8640,
											"end": 8645,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8621,
											"end": 8646,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8621,
											"end": 8646,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8621,
											"end": 8646,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "401"
										},
										{
											"begin": 8621,
											"end": 8646,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8621,
											"end": 8646,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8621,
											"end": 8646,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 8621,
											"end": 8646,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8621,
											"end": 8646,
											"name": "tag",
											"source": 4,
											"value": "401"
										},
										{
											"begin": 8621,
											"end": 8646,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8621,
											"end": 8646,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8621,
											"end": 8646,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8621,
											"end": 8646,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8621,
											"end": 8646,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8621,
											"end": 8646,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8621,
											"end": 8646,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8621,
											"end": 8646,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 7558,
											"end": 8653,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7483,
											"end": 8653,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7483,
											"end": 8653,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7483,
											"end": 8653,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7483,
											"end": 8653,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1957,
											"end": 2095,
											"name": "tag",
											"source": 9,
											"value": "336"
										},
										{
											"begin": 1957,
											"end": 2095,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2009,
											"end": 2016,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2035,
											"end": 2082,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "403"
										},
										{
											"begin": 1327,
											"end": 1393,
											"name": "PUSH",
											"source": 9,
											"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
										},
										{
											"begin": 2062,
											"end": 2081,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2062,
											"end": 2081,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 2035,
											"end": 2061,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "404"
										},
										{
											"begin": 2035,
											"end": 2082,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2035,
											"end": 2082,
											"name": "tag",
											"source": 9,
											"value": "403"
										},
										{
											"begin": 2035,
											"end": 2082,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2035,
											"end": 2088,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2035,
											"end": 2088,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2035,
											"end": 2088,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2035,
											"end": 2088,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2035,
											"end": 2088,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2035,
											"end": 2088,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2035,
											"end": 2088,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 2035,
											"end": 2088,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 2035,
											"end": 2088,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2035,
											"end": 2088,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 2035,
											"end": 2088,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2035,
											"end": 2088,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2028,
											"end": 2088,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2028,
											"end": 2088,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1957,
											"end": 2095,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1957,
											"end": 2095,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2779,
											"end": 3114,
											"name": "tag",
											"source": 9,
											"value": "354"
										},
										{
											"begin": 2779,
											"end": 3114,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2870,
											"end": 2907,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "406"
										},
										{
											"begin": 2889,
											"end": 2906,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2870,
											"end": 2888,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "407"
										},
										{
											"begin": 2870,
											"end": 2907,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2870,
											"end": 2907,
											"name": "tag",
											"source": 9,
											"value": "406"
										},
										{
											"begin": 2870,
											"end": 2907,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2931,
											"end": 2948,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "PUSH",
											"source": 9,
											"value": "BC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B"
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "LOG2",
											"source": 9
										},
										{
											"begin": 2978,
											"end": 2979,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2964,
											"end": 2968,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2964,
											"end": 2975,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2964,
											"end": 2979,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 2960,
											"end": 3108,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2960,
											"end": 3108,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "408"
										},
										{
											"begin": 2960,
											"end": 3108,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2995,
											"end": 3048,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "409"
										},
										{
											"begin": 3024,
											"end": 3041,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3043,
											"end": 3047,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2995,
											"end": 3023,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "410"
										},
										{
											"begin": 2995,
											"end": 3048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2995,
											"end": 3048,
											"name": "tag",
											"source": 9,
											"value": "409"
										},
										{
											"begin": 2995,
											"end": 3048,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2995,
											"end": 3048,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2960,
											"end": 3108,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "411"
										},
										{
											"begin": 2960,
											"end": 3108,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2960,
											"end": 3108,
											"name": "tag",
											"source": 9,
											"value": "408"
										},
										{
											"begin": 2960,
											"end": 3108,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3079,
											"end": 3097,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "412"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "413"
										},
										{
											"begin": 3079,
											"end": 3097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3079,
											"end": 3097,
											"name": "tag",
											"source": 9,
											"value": "412"
										},
										{
											"begin": 3079,
											"end": 3097,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2960,
											"end": 3108,
											"name": "tag",
											"source": 9,
											"value": "411"
										},
										{
											"begin": 2960,
											"end": 3108,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2779,
											"end": 3114,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2779,
											"end": 3114,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2779,
											"end": 3114,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7084,
											"end": 7225,
											"name": "tag",
											"source": 2,
											"value": "369"
										},
										{
											"begin": 7084,
											"end": 7225,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7151,
											"end": 7168,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "415"
										},
										{
											"begin": 7151,
											"end": 7166,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "416"
										},
										{
											"begin": 7151,
											"end": 7168,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7151,
											"end": 7168,
											"name": "tag",
											"source": 2,
											"value": "415"
										},
										{
											"begin": 7151,
											"end": 7168,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7146,
											"end": 7219,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "417"
										},
										{
											"begin": 7146,
											"end": 7219,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 2,
											"value": "D7E6BCF800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7146,
											"end": 7219,
											"name": "tag",
											"source": 2,
											"value": "417"
										},
										{
											"begin": 7146,
											"end": 7219,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7084,
											"end": 7225,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2730,
											"end": 2946,
											"name": "tag",
											"source": 4,
											"value": "372"
										},
										{
											"begin": 2730,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "419"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "369"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "tag",
											"source": 2,
											"value": "419"
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2842,
											"end": 2864,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2867,
											"end": 2885,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "421"
										},
										{
											"begin": 2867,
											"end": 2883,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 2867,
											"end": 2885,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2867,
											"end": 2885,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "421"
										},
										{
											"begin": 2867,
											"end": 2885,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2842,
											"end": 2885,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2842,
											"end": 2885,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2905,
											"end": 2910,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2895,
											"end": 2896,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2895,
											"end": 2902,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 2895,
											"end": 2902,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2895,
											"end": 2910,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2895,
											"end": 2910,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2895,
											"end": 2910,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "422"
										},
										{
											"begin": 2895,
											"end": 2910,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2895,
											"end": 2910,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2895,
											"end": 2910,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "423"
										},
										{
											"begin": 2895,
											"end": 2910,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2895,
											"end": 2910,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "422"
										},
										{
											"begin": 2895,
											"end": 2910,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2895,
											"end": 2910,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2932,
											"end": 2939,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2920,
											"end": 2921,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2920,
											"end": 2929,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2920,
											"end": 2929,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2920,
											"end": 2939,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2920,
											"end": 2939,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2920,
											"end": 2939,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "424"
										},
										{
											"begin": 2920,
											"end": 2939,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2920,
											"end": 2939,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2920,
											"end": 2939,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "423"
										},
										{
											"begin": 2920,
											"end": 2939,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2920,
											"end": 2939,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "424"
										},
										{
											"begin": 2920,
											"end": 2939,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2920,
											"end": 2939,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2832,
											"end": 2946,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2730,
											"end": 2946,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2730,
											"end": 2946,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2730,
											"end": 2946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1980,
											"end": 2215,
											"name": "tag",
											"source": 1,
											"value": "380"
										},
										{
											"begin": 1980,
											"end": 2215,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "426"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "369"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "tag",
											"source": 2,
											"value": "426"
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2100,
											"end": 2101,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2076,
											"end": 2102,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2076,
											"end": 2102,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2076,
											"end": 2088,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2076,
											"end": 2102,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2076,
											"end": 2102,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2076,
											"end": 2102,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2072,
											"end": 2167,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "428"
										},
										{
											"begin": 2072,
											"end": 2167,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2154,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "429"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 2125,
											"end": 2156,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "429"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2072,
											"end": 2167,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "428"
										},
										{
											"begin": 2072,
											"end": 2167,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2176,
											"end": 2208,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "430"
										},
										{
											"begin": 2195,
											"end": 2207,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2176,
											"end": 2194,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 2176,
											"end": 2208,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2176,
											"end": 2208,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "430"
										},
										{
											"begin": 2176,
											"end": 2208,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1980,
											"end": 2215,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1980,
											"end": 2215,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1684,
											"end": 1874,
											"name": "tag",
											"source": 14,
											"value": "404"
										},
										{
											"begin": 1684,
											"end": 1874,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1745,
											"end": 1766,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1854,
											"end": 1858,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1844,
											"end": 1858,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1844,
											"end": 1858,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1684,
											"end": 1874,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1684,
											"end": 1874,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1684,
											"end": 1874,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1684,
											"end": 1874,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2186,
											"end": 2467,
											"name": "tag",
											"source": 9,
											"value": "407"
										},
										{
											"begin": 2186,
											"end": 2467,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2296,
											"end": 2297,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2263,
											"end": 2280,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2263,
											"end": 2292,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2263,
											"end": 2292,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2263,
											"end": 2292,
											"name": "EXTCODESIZE",
											"source": 9
										},
										{
											"begin": 2263,
											"end": 2297,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2259,
											"end": 2378,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "433"
										},
										{
											"begin": 2259,
											"end": 2378,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2349,
											"end": 2366,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "PUSH",
											"source": 9,
											"value": "4C9C8CE300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "434"
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "118"
										},
										{
											"begin": 2320,
											"end": 2367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "tag",
											"source": 9,
											"value": "434"
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2259,
											"end": 2378,
											"name": "tag",
											"source": 9,
											"value": "433"
										},
										{
											"begin": 2259,
											"end": 2378,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2443,
											"end": 2460,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2387,
											"end": 2434,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "435"
										},
										{
											"begin": 1327,
											"end": 1393,
											"name": "PUSH",
											"source": 9,
											"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
										},
										{
											"begin": 2414,
											"end": 2433,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2414,
											"end": 2433,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 2387,
											"end": 2413,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "404"
										},
										{
											"begin": 2387,
											"end": 2434,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2387,
											"end": 2434,
											"name": "tag",
											"source": 9,
											"value": "435"
										},
										{
											"begin": 2387,
											"end": 2434,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2387,
											"end": 2440,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2387,
											"end": 2440,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2387,
											"end": 2440,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2186,
											"end": 2467,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2186,
											"end": 2467,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4106,
											"end": 4359,
											"name": "tag",
											"source": 13,
											"value": "410"
										},
										{
											"begin": 4106,
											"end": 4359,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4189,
											"end": 4201,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 4214,
											"end": 4226,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4228,
											"end": 4251,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4255,
											"end": 4261,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4255,
											"end": 4274,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4255,
											"end": 4274,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4275,
											"end": 4279,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "437"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "438"
										},
										{
											"begin": 4255,
											"end": 4280,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "tag",
											"source": 13,
											"value": "437"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "GAS",
											"source": 13
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DELEGATECALL",
											"source": 13
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "441"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 13,
											"value": "3F"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "RETURNDATACOPY",
											"source": 13
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "440"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "tag",
											"source": 13,
											"value": "441"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "tag",
											"source": 13,
											"value": "440"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4213,
											"end": 4280,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4213,
											"end": 4280,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4213,
											"end": 4280,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4213,
											"end": 4280,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4297,
											"end": 4352,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "442"
										},
										{
											"begin": 4324,
											"end": 4330,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 4332,
											"end": 4339,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4341,
											"end": 4351,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4297,
											"end": 4323,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "443"
										},
										{
											"begin": 4297,
											"end": 4352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4297,
											"end": 4352,
											"name": "tag",
											"source": 13,
											"value": "442"
										},
										{
											"begin": 4297,
											"end": 4352,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4290,
											"end": 4352,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4290,
											"end": 4352,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4290,
											"end": 4352,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4290,
											"end": 4352,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4106,
											"end": 4359,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4106,
											"end": 4359,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4106,
											"end": 4359,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4106,
											"end": 4359,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4106,
											"end": 4359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6598,
											"end": 6720,
											"name": "tag",
											"source": 9,
											"value": "413"
										},
										{
											"begin": 6598,
											"end": 6720,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6660,
											"end": 6661,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6648,
											"end": 6657,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 6648,
											"end": 6661,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 6644,
											"end": 6714,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6644,
											"end": 6714,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "445"
										},
										{
											"begin": 6644,
											"end": 6714,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "PUSH",
											"source": 9,
											"value": "B398979F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 6644,
											"end": 6714,
											"name": "tag",
											"source": 9,
											"value": "445"
										},
										{
											"begin": 6644,
											"end": 6714,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6598,
											"end": 6720,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8487,
											"end": 8607,
											"name": "tag",
											"source": 2,
											"value": "416"
										},
										{
											"begin": 8487,
											"end": 8607,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8537,
											"end": 8541,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8560,
											"end": 8586,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "447"
										},
										{
											"begin": 8560,
											"end": 8584,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "273"
										},
										{
											"begin": 8560,
											"end": 8586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8560,
											"end": 8586,
											"name": "tag",
											"source": 2,
											"value": "447"
										},
										{
											"begin": 8560,
											"end": 8586,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "PUSH",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8553,
											"end": 8600,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8553,
											"end": 8600,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8487,
											"end": 8607,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8487,
											"end": 8607,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "tag",
											"source": 13,
											"value": "443"
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4769,
											"end": 4781,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 4798,
											"end": 4805,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "449"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "450"
										},
										{
											"begin": 4829,
											"end": 4839,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4821,
											"end": 4828,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "451"
										},
										{
											"begin": 4821,
											"end": 4840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "tag",
											"source": 13,
											"value": "450"
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "452"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "tag",
											"source": 13,
											"value": "449"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5066,
											"end": 5067,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5045,
											"end": 5055,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5045,
											"end": 5062,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5045,
											"end": 5067,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "453"
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5093,
											"end": 5094,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5071,
											"end": 5077,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "EXTCODESIZE",
											"source": 13
										},
										{
											"begin": 5071,
											"end": 5094,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "tag",
											"source": 13,
											"value": "453"
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "454"
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5138,
											"end": 5144,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 13,
											"value": "9996B31500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "455"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "118"
										},
										{
											"begin": 5121,
											"end": 5145,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "tag",
											"source": 13,
											"value": "455"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "tag",
											"source": 13,
											"value": "454"
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5180,
											"end": 5190,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "448"
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "tag",
											"source": 13,
											"value": "452"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "tag",
											"source": 13,
											"value": "448"
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4625,
											"end": 5207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5743,
											"end": 6259,
											"name": "tag",
											"source": 13,
											"value": "451"
										},
										{
											"begin": 5743,
											"end": 6259,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5894,
											"end": 5895,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5874,
											"end": 5884,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5874,
											"end": 5891,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5874,
											"end": 5895,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "457"
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6102,
											"end": 6112,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6096,
											"end": 6113,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6158,
											"end": 6173,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6145,
											"end": 6155,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6141,
											"end": 6143,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6137,
											"end": 6156,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6130,
											"end": 6174,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "tag",
											"source": 13,
											"value": "457"
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 13,
											"value": "1425EA4200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 16,
											"value": "459"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 16,
											"value": "460"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 287,
											"end": 426,
											"name": "tag",
											"source": 16,
											"value": "461"
										},
										{
											"begin": 287,
											"end": 426,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 376,
											"end": 382,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 371,
											"end": 374,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 366,
											"end": 369,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 360,
											"end": 383,
											"name": "MCOPY",
											"source": 16
										},
										{
											"begin": 417,
											"end": 418,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 408,
											"end": 414,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 403,
											"end": 406,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 399,
											"end": 415,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 392,
											"end": 419,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 287,
											"end": 426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 432,
											"end": 534,
											"name": "tag",
											"source": 16,
											"value": "462"
										},
										{
											"begin": 432,
											"end": 534,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 473,
											"end": 479,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 524,
											"end": 526,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 520,
											"end": 527,
											"name": "NOT",
											"source": 16
										},
										{
											"begin": 515,
											"end": 517,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 504,
											"end": 518,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 500,
											"end": 528,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 490,
											"end": 528,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 490,
											"end": 528,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 432,
											"end": 534,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 432,
											"end": 534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 540,
											"end": 917,
											"name": "tag",
											"source": 16,
											"value": "463"
										},
										{
											"begin": 540,
											"end": 917,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 628,
											"end": 631,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "536"
										},
										{
											"begin": 689,
											"end": 694,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "459"
										},
										{
											"begin": 656,
											"end": 695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 656,
											"end": 695,
											"name": "tag",
											"source": 16,
											"value": "536"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "537"
										},
										{
											"begin": 775,
											"end": 781,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 770,
											"end": 773,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "460"
										},
										{
											"begin": 711,
											"end": 782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 711,
											"end": 782,
											"name": "tag",
											"source": 16,
											"value": "537"
										},
										{
											"begin": 711,
											"end": 782,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 704,
											"end": 782,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 704,
											"end": 782,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "538"
										},
										{
											"begin": 849,
											"end": 855,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 844,
											"end": 847,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 837,
											"end": 841,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 830,
											"end": 835,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 826,
											"end": 842,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "461"
										},
										{
											"begin": 791,
											"end": 856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 791,
											"end": 856,
											"name": "tag",
											"source": 16,
											"value": "538"
										},
										{
											"begin": 791,
											"end": 856,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "539"
										},
										{
											"begin": 903,
											"end": 909,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "462"
										},
										{
											"begin": 881,
											"end": 910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 881,
											"end": 910,
											"name": "tag",
											"source": 16,
											"value": "539"
										},
										{
											"begin": 881,
											"end": 910,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 876,
											"end": 879,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 872,
											"end": 911,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 865,
											"end": 911,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 865,
											"end": 911,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 632,
											"end": 917,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 540,
											"end": 917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "tag",
											"source": 16,
											"value": "41"
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1036,
											"end": 1040,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1074,
											"end": 1076,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 1063,
											"end": 1072,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1059,
											"end": 1077,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1123,
											"end": 1132,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1117,
											"end": 1121,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1113,
											"end": 1133,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 1109,
											"end": 1110,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1098,
											"end": 1107,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 1094,
											"end": 1111,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1087,
											"end": 1134,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "541"
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "463"
										},
										{
											"begin": 1151,
											"end": 1229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "tag",
											"source": 16,
											"value": "541"
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 923,
											"end": 1236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1242,
											"end": 1317,
											"name": "tag",
											"source": 16,
											"value": "464"
										},
										{
											"begin": 1242,
											"end": 1317,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1275,
											"end": 1281,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1308,
											"end": 1310,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1302,
											"end": 1311,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1292,
											"end": 1311,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1292,
											"end": 1311,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1242,
											"end": 1317,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1242,
											"end": 1317,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "tag",
											"source": 16,
											"value": "465"
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1432,
											"end": 1433,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1429,
											"end": 1430,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1422,
											"end": 1434,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 1446,
											"end": 1563,
											"name": "tag",
											"source": 16,
											"value": "466"
										},
										{
											"begin": 1446,
											"end": 1563,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1555,
											"end": 1556,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1552,
											"end": 1553,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1545,
											"end": 1557,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "tag",
											"source": 16,
											"value": "467"
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1606,
											"end": 1613,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1646,
											"end": 1688,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1639,
											"end": 1644,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1635,
											"end": 1689,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1569,
											"end": 1695,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "tag",
											"source": 16,
											"value": "468"
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1738,
											"end": 1745,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "547"
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "467"
										},
										{
											"begin": 1767,
											"end": 1791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "tag",
											"source": 16,
											"value": "547"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1701,
											"end": 1797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "tag",
											"source": 16,
											"value": "469"
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "549"
										},
										{
											"begin": 1894,
											"end": 1899,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "468"
										},
										{
											"begin": 1876,
											"end": 1900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "tag",
											"source": 16,
											"value": "549"
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1869,
											"end": 1874,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1866,
											"end": 1901,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "550"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 1915,
											"end": 1916,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1912,
											"end": 1913,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1905,
											"end": 1917,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "tag",
											"source": 16,
											"value": "550"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1803,
											"end": 1925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "tag",
											"source": 16,
											"value": "470"
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1977,
											"end": 1982,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2015,
											"end": 2021,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2002,
											"end": 2022,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "552"
										},
										{
											"begin": 2058,
											"end": 2063,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "469"
										},
										{
											"begin": 2031,
											"end": 2064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "tag",
											"source": 16,
											"value": "552"
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1931,
											"end": 2070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "tag",
											"source": 16,
											"value": "471"
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2113,
											"end": 2120,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2147,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2076,
											"end": 2153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "tag",
											"source": 16,
											"value": "472"
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "555"
										},
										{
											"begin": 2250,
											"end": 2255,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "471"
										},
										{
											"begin": 2232,
											"end": 2256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "tag",
											"source": 16,
											"value": "555"
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2225,
											"end": 2230,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2222,
											"end": 2257,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "556"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 2271,
											"end": 2272,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2268,
											"end": 2269,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2261,
											"end": 2273,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "tag",
											"source": 16,
											"value": "556"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2159,
											"end": 2281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "tag",
											"source": 16,
											"value": "473"
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2333,
											"end": 2338,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2371,
											"end": 2377,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2358,
											"end": 2378,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "558"
										},
										{
											"begin": 2414,
											"end": 2419,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "472"
										},
										{
											"begin": 2387,
											"end": 2420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "tag",
											"source": 16,
											"value": "558"
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2287,
											"end": 2426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "tag",
											"source": 16,
											"value": "45"
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2500,
											"end": 2506,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2508,
											"end": 2514,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2557,
											"end": 2559,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 2545,
											"end": 2554,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 2536,
											"end": 2543,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 2532,
											"end": 2555,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 2528,
											"end": 2560,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "560"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "561"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "465"
										},
										{
											"begin": 2563,
											"end": 2642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "tag",
											"source": 16,
											"value": "561"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "tag",
											"source": 16,
											"value": "560"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2683,
											"end": 2684,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "562"
										},
										{
											"begin": 2753,
											"end": 2760,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 2744,
											"end": 2750,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 2733,
											"end": 2742,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 2729,
											"end": 2751,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "470"
										},
										{
											"begin": 2708,
											"end": 2761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "tag",
											"source": 16,
											"value": "562"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2654,
											"end": 2771,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2810,
											"end": 2812,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "563"
										},
										{
											"begin": 2881,
											"end": 2888,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 2872,
											"end": 2878,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 2861,
											"end": 2870,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 2857,
											"end": 2879,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "473"
										},
										{
											"begin": 2836,
											"end": 2889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "tag",
											"source": 16,
											"value": "563"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2781,
											"end": 2899,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2432,
											"end": 2906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "tag",
											"source": 16,
											"value": "474"
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2946,
											"end": 2953,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2989,
											"end": 2994,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2982,
											"end": 2995,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 2975,
											"end": 2996,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2912,
											"end": 3002,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "tag",
											"source": 16,
											"value": "475"
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "566"
										},
										{
											"begin": 3104,
											"end": 3109,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "474"
										},
										{
											"begin": 3089,
											"end": 3110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "tag",
											"source": 16,
											"value": "566"
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3084,
											"end": 3087,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3077,
											"end": 3111,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3008,
											"end": 3117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "tag",
											"source": 16,
											"value": "48"
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3210,
											"end": 3214,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3248,
											"end": 3250,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 3237,
											"end": 3246,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3233,
											"end": 3251,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "568"
										},
										{
											"begin": 3323,
											"end": 3324,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 3308,
											"end": 3325,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3299,
											"end": 3305,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "475"
										},
										{
											"begin": 3261,
											"end": 3326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "tag",
											"source": 16,
											"value": "568"
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3123,
											"end": 3333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "tag",
											"source": 16,
											"value": "476"
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "570"
										},
										{
											"begin": 3444,
											"end": 3449,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "471"
										},
										{
											"begin": 3426,
											"end": 3450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "tag",
											"source": 16,
											"value": "570"
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3421,
											"end": 3424,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3414,
											"end": 3451,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3339,
											"end": 3457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "tag",
											"source": 16,
											"value": "53"
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3556,
											"end": 3560,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3594,
											"end": 3596,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 3583,
											"end": 3592,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3579,
											"end": 3597,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "572"
										},
										{
											"begin": 3675,
											"end": 3676,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3664,
											"end": 3673,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 3660,
											"end": 3677,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3651,
											"end": 3657,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "476"
										},
										{
											"begin": 3607,
											"end": 3678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "tag",
											"source": 16,
											"value": "572"
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3463,
											"end": 3685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "tag",
											"source": 16,
											"value": "61"
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3768,
											"end": 3774,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3776,
											"end": 3782,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 3784,
											"end": 3790,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3833,
											"end": 3835,
											"name": "PUSH",
											"source": 16,
											"value": "60"
										},
										{
											"begin": 3821,
											"end": 3830,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 3812,
											"end": 3819,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 3808,
											"end": 3831,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 3804,
											"end": 3836,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "574"
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "575"
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "465"
										},
										{
											"begin": 3839,
											"end": 3918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "tag",
											"source": 16,
											"value": "575"
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "tag",
											"source": 16,
											"value": "574"
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3959,
											"end": 3960,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "576"
										},
										{
											"begin": 4029,
											"end": 4036,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 4020,
											"end": 4026,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 4009,
											"end": 4018,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 4005,
											"end": 4027,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "470"
										},
										{
											"begin": 3984,
											"end": 4037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "tag",
											"source": 16,
											"value": "576"
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3974,
											"end": 4037,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 3974,
											"end": 4037,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3930,
											"end": 4047,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4086,
											"end": 4088,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "577"
										},
										{
											"begin": 4157,
											"end": 4164,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 4148,
											"end": 4154,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 4137,
											"end": 4146,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 4133,
											"end": 4155,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "470"
										},
										{
											"begin": 4112,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "tag",
											"source": 16,
											"value": "577"
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4102,
											"end": 4165,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 4102,
											"end": 4165,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4057,
											"end": 4175,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4214,
											"end": 4216,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "578"
										},
										{
											"begin": 4285,
											"end": 4292,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 4276,
											"end": 4282,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 4265,
											"end": 4274,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 4261,
											"end": 4283,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "473"
										},
										{
											"begin": 4240,
											"end": 4293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "tag",
											"source": 16,
											"value": "578"
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4185,
											"end": 4303,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 3691,
											"end": 4310,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4316,
											"end": 4645,
											"name": "tag",
											"source": 16,
											"value": "67"
										},
										{
											"begin": 4316,
											"end": 4645,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4375,
											"end": 4381,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4424,
											"end": 4426,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 4412,
											"end": 4421,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 4403,
											"end": 4410,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 4399,
											"end": 4422,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 4395,
											"end": 4427,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 4392,
											"end": 4511,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 4392,
											"end": 4511,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "580"
										},
										{
											"begin": 4392,
											"end": 4511,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 4430,
											"end": 4509,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "581"
										},
										{
											"begin": 4430,
											"end": 4509,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "465"
										},
										{
											"begin": 4430,
											"end": 4509,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4430,
											"end": 4509,
											"name": "tag",
											"source": 16,
											"value": "581"
										},
										{
											"begin": 4430,
											"end": 4509,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4392,
											"end": 4511,
											"name": "tag",
											"source": 16,
											"value": "580"
										},
										{
											"begin": 4392,
											"end": 4511,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4550,
											"end": 4551,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4575,
											"end": 4628,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "582"
										},
										{
											"begin": 4620,
											"end": 4627,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 4611,
											"end": 4617,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 4600,
											"end": 4609,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 4596,
											"end": 4618,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4575,
											"end": 4628,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "473"
										},
										{
											"begin": 4575,
											"end": 4628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4575,
											"end": 4628,
											"name": "tag",
											"source": 16,
											"value": "582"
										},
										{
											"begin": 4575,
											"end": 4628,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4565,
											"end": 4628,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 4565,
											"end": 4628,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4521,
											"end": 4638,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4316,
											"end": 4645,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 4316,
											"end": 4645,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 4316,
											"end": 4645,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4316,
											"end": 4645,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4316,
											"end": 4645,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4651,
											"end": 4737,
											"name": "tag",
											"source": 16,
											"value": "477"
										},
										{
											"begin": 4651,
											"end": 4737,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4686,
											"end": 4693,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4726,
											"end": 4730,
											"name": "PUSH",
											"source": 16,
											"value": "FF"
										},
										{
											"begin": 4719,
											"end": 4724,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 4715,
											"end": 4731,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 4704,
											"end": 4731,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4704,
											"end": 4731,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4651,
											"end": 4737,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 4651,
											"end": 4737,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4651,
											"end": 4737,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4651,
											"end": 4737,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4743,
											"end": 4855,
											"name": "tag",
											"source": 16,
											"value": "478"
										},
										{
											"begin": 4743,
											"end": 4855,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4826,
											"end": 4848,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "585"
										},
										{
											"begin": 4842,
											"end": 4847,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 4826,
											"end": 4848,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "477"
										},
										{
											"begin": 4826,
											"end": 4848,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4826,
											"end": 4848,
											"name": "tag",
											"source": 16,
											"value": "585"
										},
										{
											"begin": 4826,
											"end": 4848,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4821,
											"end": 4824,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 4814,
											"end": 4849,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 4743,
											"end": 4855,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4743,
											"end": 4855,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4743,
											"end": 4855,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4861,
											"end": 5075,
											"name": "tag",
											"source": 16,
											"value": "73"
										},
										{
											"begin": 4861,
											"end": 5075,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4950,
											"end": 4954,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4988,
											"end": 4990,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 4977,
											"end": 4986,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 4973,
											"end": 4991,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4965,
											"end": 4991,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4965,
											"end": 4991,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5001,
											"end": 5068,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "587"
										},
										{
											"begin": 5065,
											"end": 5066,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 5054,
											"end": 5063,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 5050,
											"end": 5067,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5041,
											"end": 5047,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 5001,
											"end": 5068,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "478"
										},
										{
											"begin": 5001,
											"end": 5068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5001,
											"end": 5068,
											"name": "tag",
											"source": 16,
											"value": "587"
										},
										{
											"begin": 5001,
											"end": 5068,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4861,
											"end": 5075,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 4861,
											"end": 5075,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 4861,
											"end": 5075,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4861,
											"end": 5075,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4861,
											"end": 5075,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5081,
											"end": 5198,
											"name": "tag",
											"source": 16,
											"value": "479"
										},
										{
											"begin": 5081,
											"end": 5198,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5190,
											"end": 5191,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 5187,
											"end": 5188,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 5180,
											"end": 5192,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 5204,
											"end": 5321,
											"name": "tag",
											"source": 16,
											"value": "480"
										},
										{
											"begin": 5204,
											"end": 5321,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5313,
											"end": 5314,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 5310,
											"end": 5311,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 5303,
											"end": 5315,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 5327,
											"end": 5507,
											"name": "tag",
											"source": 16,
											"value": "481"
										},
										{
											"begin": 5327,
											"end": 5507,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5375,
											"end": 5452,
											"name": "PUSH",
											"source": 16,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5372,
											"end": 5373,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 5365,
											"end": 5453,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 5472,
											"end": 5476,
											"name": "PUSH",
											"source": 16,
											"value": "41"
										},
										{
											"begin": 5469,
											"end": 5470,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 5462,
											"end": 5477,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 5496,
											"end": 5500,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 5493,
											"end": 5494,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 5486,
											"end": 5501,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 5513,
											"end": 5794,
											"name": "tag",
											"source": 16,
											"value": "482"
										},
										{
											"begin": 5513,
											"end": 5794,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5596,
											"end": 5623,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "592"
										},
										{
											"begin": 5618,
											"end": 5622,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5596,
											"end": 5623,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "462"
										},
										{
											"begin": 5596,
											"end": 5623,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5596,
											"end": 5623,
											"name": "tag",
											"source": 16,
											"value": "592"
										},
										{
											"begin": 5596,
											"end": 5623,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5588,
											"end": 5594,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 5584,
											"end": 5624,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5726,
											"end": 5732,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 5714,
											"end": 5724,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 5711,
											"end": 5733,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 5690,
											"end": 5708,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5678,
											"end": 5688,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5675,
											"end": 5709,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 5672,
											"end": 5734,
											"name": "OR",
											"source": 16
										},
										{
											"begin": 5669,
											"end": 5757,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 5669,
											"end": 5757,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "593"
										},
										{
											"begin": 5669,
											"end": 5757,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 5737,
											"end": 5755,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "594"
										},
										{
											"begin": 5737,
											"end": 5755,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "481"
										},
										{
											"begin": 5737,
											"end": 5755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5737,
											"end": 5755,
											"name": "tag",
											"source": 16,
											"value": "594"
										},
										{
											"begin": 5737,
											"end": 5755,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5669,
											"end": 5757,
											"name": "tag",
											"source": 16,
											"value": "593"
										},
										{
											"begin": 5669,
											"end": 5757,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5777,
											"end": 5787,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 5773,
											"end": 5775,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 5766,
											"end": 5788,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 5556,
											"end": 5794,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5513,
											"end": 5794,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5513,
											"end": 5794,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5513,
											"end": 5794,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5800,
											"end": 5929,
											"name": "tag",
											"source": 16,
											"value": "483"
										},
										{
											"begin": 5800,
											"end": 5929,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5834,
											"end": 5840,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 5861,
											"end": 5881,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "596"
										},
										{
											"begin": 5861,
											"end": 5881,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "464"
										},
										{
											"begin": 5861,
											"end": 5881,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5861,
											"end": 5881,
											"name": "tag",
											"source": 16,
											"value": "596"
										},
										{
											"begin": 5861,
											"end": 5881,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5851,
											"end": 5881,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5851,
											"end": 5881,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5890,
											"end": 5923,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "597"
										},
										{
											"begin": 5918,
											"end": 5922,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5910,
											"end": 5916,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5890,
											"end": 5923,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "482"
										},
										{
											"begin": 5890,
											"end": 5923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5890,
											"end": 5923,
											"name": "tag",
											"source": 16,
											"value": "597"
										},
										{
											"begin": 5890,
											"end": 5923,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5800,
											"end": 5929,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 5800,
											"end": 5929,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5800,
											"end": 5929,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5800,
											"end": 5929,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5935,
											"end": 6242,
											"name": "tag",
											"source": 16,
											"value": "484"
										},
										{
											"begin": 5935,
											"end": 6242,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5996,
											"end": 6000,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 6086,
											"end": 6104,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6078,
											"end": 6084,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 6075,
											"end": 6105,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 6072,
											"end": 6128,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 6072,
											"end": 6128,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "599"
										},
										{
											"begin": 6072,
											"end": 6128,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 6108,
											"end": 6126,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "600"
										},
										{
											"begin": 6108,
											"end": 6126,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "481"
										},
										{
											"begin": 6108,
											"end": 6126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6108,
											"end": 6126,
											"name": "tag",
											"source": 16,
											"value": "600"
										},
										{
											"begin": 6108,
											"end": 6126,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6072,
											"end": 6128,
											"name": "tag",
											"source": 16,
											"value": "599"
										},
										{
											"begin": 6072,
											"end": 6128,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6146,
											"end": 6175,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "601"
										},
										{
											"begin": 6168,
											"end": 6174,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 6146,
											"end": 6175,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "462"
										},
										{
											"begin": 6146,
											"end": 6175,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6146,
											"end": 6175,
											"name": "tag",
											"source": 16,
											"value": "601"
										},
										{
											"begin": 6146,
											"end": 6175,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6138,
											"end": 6175,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 6138,
											"end": 6175,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6230,
											"end": 6234,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 6224,
											"end": 6228,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 6220,
											"end": 6235,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 6212,
											"end": 6235,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 6212,
											"end": 6235,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5935,
											"end": 6242,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 5935,
											"end": 6242,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5935,
											"end": 6242,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5935,
											"end": 6242,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6248,
											"end": 6396,
											"name": "tag",
											"source": 16,
											"value": "485"
										},
										{
											"begin": 6248,
											"end": 6396,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6346,
											"end": 6352,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 6341,
											"end": 6344,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 6336,
											"end": 6339,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 6323,
											"end": 6353,
											"name": "CALLDATACOPY",
											"source": 16
										},
										{
											"begin": 6387,
											"end": 6388,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 6378,
											"end": 6384,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 6373,
											"end": 6376,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 6369,
											"end": 6385,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 6362,
											"end": 6389,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 6248,
											"end": 6396,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6248,
											"end": 6396,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6248,
											"end": 6396,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6248,
											"end": 6396,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6402,
											"end": 6825,
											"name": "tag",
											"source": 16,
											"value": "486"
										},
										{
											"begin": 6402,
											"end": 6825,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6479,
											"end": 6484,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 6504,
											"end": 6569,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "604"
										},
										{
											"begin": 6520,
											"end": 6568,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "605"
										},
										{
											"begin": 6561,
											"end": 6567,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 6520,
											"end": 6568,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "484"
										},
										{
											"begin": 6520,
											"end": 6568,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6520,
											"end": 6568,
											"name": "tag",
											"source": 16,
											"value": "605"
										},
										{
											"begin": 6520,
											"end": 6568,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6504,
											"end": 6569,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "483"
										},
										{
											"begin": 6504,
											"end": 6569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6504,
											"end": 6569,
											"name": "tag",
											"source": 16,
											"value": "604"
										},
										{
											"begin": 6504,
											"end": 6569,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6495,
											"end": 6569,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 6495,
											"end": 6569,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6592,
											"end": 6598,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 6585,
											"end": 6590,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 6578,
											"end": 6599,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 6630,
											"end": 6634,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 6623,
											"end": 6628,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 6619,
											"end": 6635,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 6668,
											"end": 6671,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 6659,
											"end": 6665,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 6654,
											"end": 6657,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 6650,
											"end": 6666,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 6647,
											"end": 6672,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 6644,
											"end": 6756,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 6644,
											"end": 6756,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "606"
										},
										{
											"begin": 6644,
											"end": 6756,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 6675,
											"end": 6754,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "607"
										},
										{
											"begin": 6675,
											"end": 6754,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "480"
										},
										{
											"begin": 6675,
											"end": 6754,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6675,
											"end": 6754,
											"name": "tag",
											"source": 16,
											"value": "607"
										},
										{
											"begin": 6675,
											"end": 6754,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6644,
											"end": 6756,
											"name": "tag",
											"source": 16,
											"value": "606"
										},
										{
											"begin": 6644,
											"end": 6756,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6765,
											"end": 6819,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "608"
										},
										{
											"begin": 6812,
											"end": 6818,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 6807,
											"end": 6810,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 6802,
											"end": 6805,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 6765,
											"end": 6819,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "485"
										},
										{
											"begin": 6765,
											"end": 6819,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6765,
											"end": 6819,
											"name": "tag",
											"source": 16,
											"value": "608"
										},
										{
											"begin": 6765,
											"end": 6819,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6485,
											"end": 6825,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6402,
											"end": 6825,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 6402,
											"end": 6825,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 6402,
											"end": 6825,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6402,
											"end": 6825,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6402,
											"end": 6825,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6402,
											"end": 6825,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6844,
											"end": 7182,
											"name": "tag",
											"source": 16,
											"value": "487"
										},
										{
											"begin": 6844,
											"end": 7182,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6899,
											"end": 6904,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 6948,
											"end": 6951,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 6941,
											"end": 6945,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 6933,
											"end": 6939,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 6929,
											"end": 6946,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 6925,
											"end": 6952,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 6915,
											"end": 7037,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "610"
										},
										{
											"begin": 6915,
											"end": 7037,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 6956,
											"end": 7035,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "611"
										},
										{
											"begin": 6956,
											"end": 7035,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "479"
										},
										{
											"begin": 6956,
											"end": 7035,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6956,
											"end": 7035,
											"name": "tag",
											"source": 16,
											"value": "611"
										},
										{
											"begin": 6956,
											"end": 7035,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6915,
											"end": 7037,
											"name": "tag",
											"source": 16,
											"value": "610"
										},
										{
											"begin": 6915,
											"end": 7037,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7073,
											"end": 7079,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 7060,
											"end": 7080,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 7098,
											"end": 7176,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "612"
										},
										{
											"begin": 7172,
											"end": 7175,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 7164,
											"end": 7170,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 7157,
											"end": 7161,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 7149,
											"end": 7155,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 7145,
											"end": 7162,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 7098,
											"end": 7176,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "486"
										},
										{
											"begin": 7098,
											"end": 7176,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7098,
											"end": 7176,
											"name": "tag",
											"source": 16,
											"value": "612"
										},
										{
											"begin": 7098,
											"end": 7176,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7089,
											"end": 7176,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 7089,
											"end": 7176,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6905,
											"end": 7182,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6844,
											"end": 7182,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 6844,
											"end": 7182,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 6844,
											"end": 7182,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6844,
											"end": 7182,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6844,
											"end": 7182,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7188,
											"end": 7840,
											"name": "tag",
											"source": 16,
											"value": "82"
										},
										{
											"begin": 7188,
											"end": 7840,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7265,
											"end": 7271,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 7273,
											"end": 7279,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 7322,
											"end": 7324,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 7310,
											"end": 7319,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 7301,
											"end": 7308,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 7297,
											"end": 7320,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 7293,
											"end": 7325,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 7290,
											"end": 7409,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 7290,
											"end": 7409,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "614"
										},
										{
											"begin": 7290,
											"end": 7409,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 7328,
											"end": 7407,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "615"
										},
										{
											"begin": 7328,
											"end": 7407,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "465"
										},
										{
											"begin": 7328,
											"end": 7407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7328,
											"end": 7407,
											"name": "tag",
											"source": 16,
											"value": "615"
										},
										{
											"begin": 7328,
											"end": 7407,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7290,
											"end": 7409,
											"name": "tag",
											"source": 16,
											"value": "614"
										},
										{
											"begin": 7290,
											"end": 7409,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7448,
											"end": 7449,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 7473,
											"end": 7526,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "616"
										},
										{
											"begin": 7518,
											"end": 7525,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 7509,
											"end": 7515,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 7498,
											"end": 7507,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 7494,
											"end": 7516,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 7473,
											"end": 7526,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "470"
										},
										{
											"begin": 7473,
											"end": 7526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7473,
											"end": 7526,
											"name": "tag",
											"source": 16,
											"value": "616"
										},
										{
											"begin": 7473,
											"end": 7526,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7463,
											"end": 7526,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 7463,
											"end": 7526,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7419,
											"end": 7536,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7603,
											"end": 7605,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 7592,
											"end": 7601,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 7588,
											"end": 7606,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 7575,
											"end": 7607,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 7634,
											"end": 7652,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7626,
											"end": 7632,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 7623,
											"end": 7653,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 7620,
											"end": 7737,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 7620,
											"end": 7737,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "617"
										},
										{
											"begin": 7620,
											"end": 7737,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 7656,
											"end": 7735,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "618"
										},
										{
											"begin": 7656,
											"end": 7735,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "466"
										},
										{
											"begin": 7656,
											"end": 7735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7656,
											"end": 7735,
											"name": "tag",
											"source": 16,
											"value": "618"
										},
										{
											"begin": 7656,
											"end": 7735,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7620,
											"end": 7737,
											"name": "tag",
											"source": 16,
											"value": "617"
										},
										{
											"begin": 7620,
											"end": 7737,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7761,
											"end": 7823,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "619"
										},
										{
											"begin": 7815,
											"end": 7822,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 7806,
											"end": 7812,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 7795,
											"end": 7804,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 7791,
											"end": 7813,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 7761,
											"end": 7823,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "487"
										},
										{
											"begin": 7761,
											"end": 7823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7761,
											"end": 7823,
											"name": "tag",
											"source": 16,
											"value": "619"
										},
										{
											"begin": 7761,
											"end": 7823,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7751,
											"end": 7823,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 7751,
											"end": 7823,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7546,
											"end": 7833,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7188,
											"end": 7840,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 7188,
											"end": 7840,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7188,
											"end": 7840,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 7188,
											"end": 7840,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 7188,
											"end": 7840,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7188,
											"end": 7840,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7846,
											"end": 7923,
											"name": "tag",
											"source": 16,
											"value": "488"
										},
										{
											"begin": 7846,
											"end": 7923,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7883,
											"end": 7890,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 7912,
											"end": 7917,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 7901,
											"end": 7917,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 7901,
											"end": 7917,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7846,
											"end": 7923,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 7846,
											"end": 7923,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 7846,
											"end": 7923,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7846,
											"end": 7923,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7929,
											"end": 8047,
											"name": "tag",
											"source": 16,
											"value": "489"
										},
										{
											"begin": 7929,
											"end": 8047,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8016,
											"end": 8040,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "622"
										},
										{
											"begin": 8034,
											"end": 8039,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 8016,
											"end": 8040,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "488"
										},
										{
											"begin": 8016,
											"end": 8040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8016,
											"end": 8040,
											"name": "tag",
											"source": 16,
											"value": "622"
										},
										{
											"begin": 8016,
											"end": 8040,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8011,
											"end": 8014,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 8004,
											"end": 8041,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 7929,
											"end": 8047,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7929,
											"end": 8047,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7929,
											"end": 8047,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8053,
											"end": 8275,
											"name": "tag",
											"source": 16,
											"value": "88"
										},
										{
											"begin": 8053,
											"end": 8275,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8146,
											"end": 8150,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 8184,
											"end": 8186,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 8173,
											"end": 8182,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 8169,
											"end": 8187,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 8161,
											"end": 8187,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 8161,
											"end": 8187,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8197,
											"end": 8268,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "624"
										},
										{
											"begin": 8265,
											"end": 8266,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 8254,
											"end": 8263,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 8250,
											"end": 8267,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 8241,
											"end": 8247,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 8197,
											"end": 8268,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "489"
										},
										{
											"begin": 8197,
											"end": 8268,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8197,
											"end": 8268,
											"name": "tag",
											"source": 16,
											"value": "624"
										},
										{
											"begin": 8197,
											"end": 8268,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8053,
											"end": 8275,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 8053,
											"end": 8275,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 8053,
											"end": 8275,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8053,
											"end": 8275,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8053,
											"end": 8275,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8281,
											"end": 8610,
											"name": "tag",
											"source": 16,
											"value": "96"
										},
										{
											"begin": 8281,
											"end": 8610,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8340,
											"end": 8346,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 8389,
											"end": 8391,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 8377,
											"end": 8386,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 8368,
											"end": 8375,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 8364,
											"end": 8387,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 8360,
											"end": 8392,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 8357,
											"end": 8476,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 8357,
											"end": 8476,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "626"
										},
										{
											"begin": 8357,
											"end": 8476,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 8395,
											"end": 8474,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "627"
										},
										{
											"begin": 8395,
											"end": 8474,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "465"
										},
										{
											"begin": 8395,
											"end": 8474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8395,
											"end": 8474,
											"name": "tag",
											"source": 16,
											"value": "627"
										},
										{
											"begin": 8395,
											"end": 8474,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8357,
											"end": 8476,
											"name": "tag",
											"source": 16,
											"value": "626"
										},
										{
											"begin": 8357,
											"end": 8476,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8515,
											"end": 8516,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 8540,
											"end": 8593,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "628"
										},
										{
											"begin": 8585,
											"end": 8592,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 8576,
											"end": 8582,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 8565,
											"end": 8574,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 8561,
											"end": 8583,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 8540,
											"end": 8593,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "470"
										},
										{
											"begin": 8540,
											"end": 8593,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8540,
											"end": 8593,
											"name": "tag",
											"source": 16,
											"value": "628"
										},
										{
											"begin": 8540,
											"end": 8593,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8530,
											"end": 8593,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 8530,
											"end": 8593,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8486,
											"end": 8603,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8281,
											"end": 8610,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 8281,
											"end": 8610,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 8281,
											"end": 8610,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8281,
											"end": 8610,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8281,
											"end": 8610,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8616,
											"end": 8734,
											"name": "tag",
											"source": 16,
											"value": "490"
										},
										{
											"begin": 8616,
											"end": 8734,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8703,
											"end": 8727,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "630"
										},
										{
											"begin": 8721,
											"end": 8726,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 8703,
											"end": 8727,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "468"
										},
										{
											"begin": 8703,
											"end": 8727,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8703,
											"end": 8727,
											"name": "tag",
											"source": 16,
											"value": "630"
										},
										{
											"begin": 8703,
											"end": 8727,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8698,
											"end": 8701,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 8691,
											"end": 8728,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 8616,
											"end": 8734,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8616,
											"end": 8734,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8616,
											"end": 8734,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8740,
											"end": 8962,
											"name": "tag",
											"source": 16,
											"value": "118"
										},
										{
											"begin": 8740,
											"end": 8962,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8833,
											"end": 8837,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 8871,
											"end": 8873,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 8860,
											"end": 8869,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 8856,
											"end": 8874,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 8848,
											"end": 8874,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 8848,
											"end": 8874,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8884,
											"end": 8955,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "632"
										},
										{
											"begin": 8952,
											"end": 8953,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 8941,
											"end": 8950,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 8937,
											"end": 8954,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 8928,
											"end": 8934,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 8884,
											"end": 8955,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "490"
										},
										{
											"begin": 8884,
											"end": 8955,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8884,
											"end": 8955,
											"name": "tag",
											"source": 16,
											"value": "632"
										},
										{
											"begin": 8884,
											"end": 8955,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8740,
											"end": 8962,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 8740,
											"end": 8962,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 8740,
											"end": 8962,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8740,
											"end": 8962,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8740,
											"end": 8962,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8968,
											"end": 9044,
											"name": "tag",
											"source": 16,
											"value": "491"
										},
										{
											"begin": 8968,
											"end": 9044,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9004,
											"end": 9011,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 9033,
											"end": 9038,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 9022,
											"end": 9038,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 9022,
											"end": 9038,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8968,
											"end": 9044,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 8968,
											"end": 9044,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 8968,
											"end": 9044,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8968,
											"end": 9044,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 9050,
											"end": 9165,
											"name": "tag",
											"source": 16,
											"value": "492"
										},
										{
											"begin": 9050,
											"end": 9165,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9135,
											"end": 9158,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "635"
										},
										{
											"begin": 9152,
											"end": 9157,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 9135,
											"end": 9158,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "491"
										},
										{
											"begin": 9135,
											"end": 9158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 9135,
											"end": 9158,
											"name": "tag",
											"source": 16,
											"value": "635"
										},
										{
											"begin": 9135,
											"end": 9158,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9130,
											"end": 9133,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 9123,
											"end": 9159,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 9050,
											"end": 9165,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 9050,
											"end": 9165,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 9050,
											"end": 9165,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 9171,
											"end": 9389,
											"name": "tag",
											"source": 16,
											"value": "140"
										},
										{
											"begin": 9171,
											"end": 9389,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9262,
											"end": 9266,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 9300,
											"end": 9302,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 9289,
											"end": 9298,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 9285,
											"end": 9303,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 9277,
											"end": 9303,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 9277,
											"end": 9303,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 9313,
											"end": 9382,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "637"
										},
										{
											"begin": 9379,
											"end": 9380,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 9368,
											"end": 9377,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 9364,
											"end": 9381,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 9355,
											"end": 9361,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 9313,
											"end": 9382,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "492"
										},
										{
											"begin": 9313,
											"end": 9382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 9313,
											"end": 9382,
											"name": "tag",
											"source": 16,
											"value": "637"
										},
										{
											"begin": 9313,
											"end": 9382,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9171,
											"end": 9389,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 9171,
											"end": 9389,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 9171,
											"end": 9389,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 9171,
											"end": 9389,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 9171,
											"end": 9389,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 9395,
											"end": 9869,
											"name": "tag",
											"source": 16,
											"value": "148"
										},
										{
											"begin": 9395,
											"end": 9869,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9463,
											"end": 9469,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 9471,
											"end": 9477,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 9520,
											"end": 9522,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 9508,
											"end": 9517,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 9499,
											"end": 9506,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 9495,
											"end": 9518,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 9491,
											"end": 9523,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 9488,
											"end": 9607,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 9488,
											"end": 9607,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "639"
										},
										{
											"begin": 9488,
											"end": 9607,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 9526,
											"end": 9605,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "640"
										},
										{
											"begin": 9526,
											"end": 9605,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "465"
										},
										{
											"begin": 9526,
											"end": 9605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 9526,
											"end": 9605,
											"name": "tag",
											"source": 16,
											"value": "640"
										},
										{
											"begin": 9526,
											"end": 9605,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9488,
											"end": 9607,
											"name": "tag",
											"source": 16,
											"value": "639"
										},
										{
											"begin": 9488,
											"end": 9607,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9646,
											"end": 9647,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 9671,
											"end": 9724,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "641"
										},
										{
											"begin": 9716,
											"end": 9723,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 9707,
											"end": 9713,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 9696,
											"end": 9705,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 9692,
											"end": 9714,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 9671,
											"end": 9724,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "470"
										},
										{
											"begin": 9671,
											"end": 9724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 9671,
											"end": 9724,
											"name": "tag",
											"source": 16,
											"value": "641"
										},
										{
											"begin": 9671,
											"end": 9724,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9661,
											"end": 9724,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 9661,
											"end": 9724,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 9617,
											"end": 9734,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 9773,
											"end": 9775,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 9799,
											"end": 9852,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "642"
										},
										{
											"begin": 9844,
											"end": 9851,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 9835,
											"end": 9841,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 9824,
											"end": 9833,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 9820,
											"end": 9842,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 9799,
											"end": 9852,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "470"
										},
										{
											"begin": 9799,
											"end": 9852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 9799,
											"end": 9852,
											"name": "tag",
											"source": 16,
											"value": "642"
										},
										{
											"begin": 9799,
											"end": 9852,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9789,
											"end": 9852,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 9789,
											"end": 9852,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 9744,
											"end": 9862,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 9395,
											"end": 9869,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 9395,
											"end": 9869,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 9395,
											"end": 9869,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 9395,
											"end": 9869,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 9395,
											"end": 9869,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 9395,
											"end": 9869,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 9875,
											"end": 10055,
											"name": "tag",
											"source": 16,
											"value": "493"
										},
										{
											"begin": 9875,
											"end": 10055,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9923,
											"end": 10000,
											"name": "PUSH",
											"source": 16,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9920,
											"end": 9921,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 9913,
											"end": 10001,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 10020,
											"end": 10024,
											"name": "PUSH",
											"source": 16,
											"value": "22"
										},
										{
											"begin": 10017,
											"end": 10018,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 10010,
											"end": 10025,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 10044,
											"end": 10048,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 10041,
											"end": 10042,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 10034,
											"end": 10049,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 10061,
											"end": 10381,
											"name": "tag",
											"source": 16,
											"value": "166"
										},
										{
											"begin": 10061,
											"end": 10381,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10105,
											"end": 10111,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 10142,
											"end": 10143,
											"name": "PUSH",
											"source": 16,
											"value": "2"
										},
										{
											"begin": 10136,
											"end": 10140,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 10132,
											"end": 10144,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 10122,
											"end": 10144,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 10122,
											"end": 10144,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10189,
											"end": 10190,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 10183,
											"end": 10187,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 10179,
											"end": 10191,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 10210,
											"end": 10228,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 10200,
											"end": 10281,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "645"
										},
										{
											"begin": 10200,
											"end": 10281,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 10266,
											"end": 10270,
											"name": "PUSH",
											"source": 16,
											"value": "7F"
										},
										{
											"begin": 10258,
											"end": 10264,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 10254,
											"end": 10271,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 10244,
											"end": 10271,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 10244,
											"end": 10271,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10200,
											"end": 10281,
											"name": "tag",
											"source": 16,
											"value": "645"
										},
										{
											"begin": 10200,
											"end": 10281,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10328,
											"end": 10330,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 10320,
											"end": 10326,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 10317,
											"end": 10331,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 10297,
											"end": 10315,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 10294,
											"end": 10332,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 10291,
											"end": 10375,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "646"
										},
										{
											"begin": 10291,
											"end": 10375,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 10347,
											"end": 10365,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "647"
										},
										{
											"begin": 10347,
											"end": 10365,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "493"
										},
										{
											"begin": 10347,
											"end": 10365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10347,
											"end": 10365,
											"name": "tag",
											"source": 16,
											"value": "647"
										},
										{
											"begin": 10347,
											"end": 10365,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10291,
											"end": 10375,
											"name": "tag",
											"source": 16,
											"value": "646"
										},
										{
											"begin": 10291,
											"end": 10375,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10112,
											"end": 10381,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10061,
											"end": 10381,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 10061,
											"end": 10381,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 10061,
											"end": 10381,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10061,
											"end": 10381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10387,
											"end": 10567,
											"name": "tag",
											"source": 16,
											"value": "494"
										},
										{
											"begin": 10387,
											"end": 10567,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10435,
											"end": 10512,
											"name": "PUSH",
											"source": 16,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10432,
											"end": 10433,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 10425,
											"end": 10513,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 10532,
											"end": 10536,
											"name": "PUSH",
											"source": 16,
											"value": "12"
										},
										{
											"begin": 10529,
											"end": 10530,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 10522,
											"end": 10537,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 10556,
											"end": 10560,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 10553,
											"end": 10554,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 10546,
											"end": 10561,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 10573,
											"end": 10753,
											"name": "tag",
											"source": 16,
											"value": "495"
										},
										{
											"begin": 10573,
											"end": 10753,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10621,
											"end": 10698,
											"name": "PUSH",
											"source": 16,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10618,
											"end": 10619,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 10611,
											"end": 10699,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 10718,
											"end": 10722,
											"name": "PUSH",
											"source": 16,
											"value": "11"
										},
										{
											"begin": 10715,
											"end": 10716,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 10708,
											"end": 10723,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 10742,
											"end": 10746,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 10739,
											"end": 10740,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 10732,
											"end": 10747,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 10759,
											"end": 10944,
											"name": "tag",
											"source": 16,
											"value": "181"
										},
										{
											"begin": 10759,
											"end": 10944,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10799,
											"end": 10800,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 10816,
											"end": 10836,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "651"
										},
										{
											"begin": 10834,
											"end": 10835,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 10816,
											"end": 10836,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "471"
										},
										{
											"begin": 10816,
											"end": 10836,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10816,
											"end": 10836,
											"name": "tag",
											"source": 16,
											"value": "651"
										},
										{
											"begin": 10816,
											"end": 10836,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10811,
											"end": 10836,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 10811,
											"end": 10836,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10850,
											"end": 10870,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "652"
										},
										{
											"begin": 10868,
											"end": 10869,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 10850,
											"end": 10870,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "471"
										},
										{
											"begin": 10850,
											"end": 10870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10850,
											"end": 10870,
											"name": "tag",
											"source": 16,
											"value": "652"
										},
										{
											"begin": 10850,
											"end": 10870,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10845,
											"end": 10870,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 10845,
											"end": 10870,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10889,
											"end": 10890,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 10879,
											"end": 10914,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "653"
										},
										{
											"begin": 10879,
											"end": 10914,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 10894,
											"end": 10912,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "654"
										},
										{
											"begin": 10894,
											"end": 10912,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "494"
										},
										{
											"begin": 10894,
											"end": 10912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10894,
											"end": 10912,
											"name": "tag",
											"source": 16,
											"value": "654"
										},
										{
											"begin": 10894,
											"end": 10912,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10879,
											"end": 10914,
											"name": "tag",
											"source": 16,
											"value": "653"
										},
										{
											"begin": 10879,
											"end": 10914,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10936,
											"end": 10937,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 10933,
											"end": 10934,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 10929,
											"end": 10938,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 10924,
											"end": 10938,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 10924,
											"end": 10938,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10759,
											"end": 10944,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 10759,
											"end": 10944,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 10759,
											"end": 10944,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10759,
											"end": 10944,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10759,
											"end": 10944,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10950,
											"end": 11194,
											"name": "tag",
											"source": 16,
											"value": "496"
										},
										{
											"begin": 10950,
											"end": 11194,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11090,
											"end": 11124,
											"name": "PUSH",
											"source": 16,
											"value": "416D6F756E74206D75737420616C77617973206265206C657373207468616E20"
										},
										{
											"begin": 11086,
											"end": 11087,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 11078,
											"end": 11084,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 11074,
											"end": 11088,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 11067,
											"end": 11125,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 11159,
											"end": 11186,
											"name": "PUSH",
											"source": 16,
											"value": "746865206E756D626572206F6620706F7373657373696F6E7300000000000000"
										},
										{
											"begin": 11154,
											"end": 11156,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 11146,
											"end": 11152,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 11142,
											"end": 11157,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 11135,
											"end": 11187,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 10950,
											"end": 11194,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10950,
											"end": 11194,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 11200,
											"end": 11566,
											"name": "tag",
											"source": 16,
											"value": "497"
										},
										{
											"begin": 11200,
											"end": 11566,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11342,
											"end": 11345,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 11363,
											"end": 11430,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "657"
										},
										{
											"begin": 11427,
											"end": 11429,
											"name": "PUSH",
											"source": 16,
											"value": "39"
										},
										{
											"begin": 11422,
											"end": 11425,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 11363,
											"end": 11430,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "460"
										},
										{
											"begin": 11363,
											"end": 11430,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 11363,
											"end": 11430,
											"name": "tag",
											"source": 16,
											"value": "657"
										},
										{
											"begin": 11363,
											"end": 11430,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11356,
											"end": 11430,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 11356,
											"end": 11430,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 11439,
											"end": 11532,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "658"
										},
										{
											"begin": 11528,
											"end": 11531,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 11439,
											"end": 11532,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "496"
										},
										{
											"begin": 11439,
											"end": 11532,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 11439,
											"end": 11532,
											"name": "tag",
											"source": 16,
											"value": "658"
										},
										{
											"begin": 11439,
											"end": 11532,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11557,
											"end": 11559,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 11552,
											"end": 11555,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 11548,
											"end": 11560,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 11541,
											"end": 11560,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 11541,
											"end": 11560,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 11200,
											"end": 11566,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 11200,
											"end": 11566,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 11200,
											"end": 11566,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 11200,
											"end": 11566,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 11572,
											"end": 11991,
											"name": "tag",
											"source": 16,
											"value": "192"
										},
										{
											"begin": 11572,
											"end": 11991,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11738,
											"end": 11742,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 11776,
											"end": 11778,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 11765,
											"end": 11774,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 11761,
											"end": 11779,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 11753,
											"end": 11779,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 11753,
											"end": 11779,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 11825,
											"end": 11834,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 11819,
											"end": 11823,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 11815,
											"end": 11835,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 11811,
											"end": 11812,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 11800,
											"end": 11809,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 11796,
											"end": 11813,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 11789,
											"end": 11836,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 11853,
											"end": 11984,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "660"
										},
										{
											"begin": 11979,
											"end": 11983,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 11853,
											"end": 11984,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "497"
										},
										{
											"begin": 11853,
											"end": 11984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 11853,
											"end": 11984,
											"name": "tag",
											"source": 16,
											"value": "660"
										},
										{
											"begin": 11853,
											"end": 11984,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11845,
											"end": 11984,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 11845,
											"end": 11984,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 11572,
											"end": 11991,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 11572,
											"end": 11991,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 11572,
											"end": 11991,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 11572,
											"end": 11991,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 11997,
											"end": 12191,
											"name": "tag",
											"source": 16,
											"value": "194"
										},
										{
											"begin": 11997,
											"end": 12191,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12037,
											"end": 12041,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 12057,
											"end": 12077,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "662"
										},
										{
											"begin": 12075,
											"end": 12076,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 12057,
											"end": 12077,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "471"
										},
										{
											"begin": 12057,
											"end": 12077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12057,
											"end": 12077,
											"name": "tag",
											"source": 16,
											"value": "662"
										},
										{
											"begin": 12057,
											"end": 12077,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12052,
											"end": 12077,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 12052,
											"end": 12077,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12091,
											"end": 12111,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "663"
										},
										{
											"begin": 12109,
											"end": 12110,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 12091,
											"end": 12111,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "471"
										},
										{
											"begin": 12091,
											"end": 12111,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12091,
											"end": 12111,
											"name": "tag",
											"source": 16,
											"value": "663"
										},
										{
											"begin": 12091,
											"end": 12111,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12086,
											"end": 12111,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 12086,
											"end": 12111,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12135,
											"end": 12136,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 12132,
											"end": 12133,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 12128,
											"end": 12137,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 12120,
											"end": 12137,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 12120,
											"end": 12137,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12159,
											"end": 12160,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 12153,
											"end": 12157,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 12150,
											"end": 12161,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 12147,
											"end": 12184,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 12147,
											"end": 12184,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "664"
										},
										{
											"begin": 12147,
											"end": 12184,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 12164,
											"end": 12182,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "665"
										},
										{
											"begin": 12164,
											"end": 12182,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "495"
										},
										{
											"begin": 12164,
											"end": 12182,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12164,
											"end": 12182,
											"name": "tag",
											"source": 16,
											"value": "665"
										},
										{
											"begin": 12164,
											"end": 12182,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12147,
											"end": 12184,
											"name": "tag",
											"source": 16,
											"value": "664"
										},
										{
											"begin": 12147,
											"end": 12184,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11997,
											"end": 12191,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 11997,
											"end": 12191,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 11997,
											"end": 12191,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 11997,
											"end": 12191,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 11997,
											"end": 12191,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12197,
											"end": 12607,
											"name": "tag",
											"source": 16,
											"value": "198"
										},
										{
											"begin": 12197,
											"end": 12607,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12237,
											"end": 12244,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 12260,
											"end": 12280,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "667"
										},
										{
											"begin": 12278,
											"end": 12279,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 12260,
											"end": 12280,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "471"
										},
										{
											"begin": 12260,
											"end": 12280,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12260,
											"end": 12280,
											"name": "tag",
											"source": 16,
											"value": "667"
										},
										{
											"begin": 12260,
											"end": 12280,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12255,
											"end": 12280,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 12255,
											"end": 12280,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12294,
											"end": 12314,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "668"
										},
										{
											"begin": 12312,
											"end": 12313,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 12294,
											"end": 12314,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "471"
										},
										{
											"begin": 12294,
											"end": 12314,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12294,
											"end": 12314,
											"name": "tag",
											"source": 16,
											"value": "668"
										},
										{
											"begin": 12294,
											"end": 12314,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12289,
											"end": 12314,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 12289,
											"end": 12314,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12349,
											"end": 12350,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 12346,
											"end": 12347,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 12342,
											"end": 12351,
											"name": "MUL",
											"source": 16
										},
										{
											"begin": 12371,
											"end": 12401,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "669"
										},
										{
											"begin": 12389,
											"end": 12400,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 12371,
											"end": 12401,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "471"
										},
										{
											"begin": 12371,
											"end": 12401,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12371,
											"end": 12401,
											"name": "tag",
											"source": 16,
											"value": "669"
										},
										{
											"begin": 12371,
											"end": 12401,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12360,
											"end": 12401,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 12360,
											"end": 12401,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12550,
											"end": 12551,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 12541,
											"end": 12548,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 12537,
											"end": 12552,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 12534,
											"end": 12535,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 12531,
											"end": 12553,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 12511,
											"end": 12512,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 12504,
											"end": 12513,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 12484,
											"end": 12567,
											"name": "OR",
											"source": 16
										},
										{
											"begin": 12461,
											"end": 12600,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "670"
										},
										{
											"begin": 12461,
											"end": 12600,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 12580,
											"end": 12598,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "671"
										},
										{
											"begin": 12580,
											"end": 12598,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "495"
										},
										{
											"begin": 12580,
											"end": 12598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12580,
											"end": 12598,
											"name": "tag",
											"source": 16,
											"value": "671"
										},
										{
											"begin": 12580,
											"end": 12598,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12461,
											"end": 12600,
											"name": "tag",
											"source": 16,
											"value": "670"
										},
										{
											"begin": 12461,
											"end": 12600,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12245,
											"end": 12607,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12197,
											"end": 12607,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 12197,
											"end": 12607,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 12197,
											"end": 12607,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12197,
											"end": 12607,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12197,
											"end": 12607,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12613,
											"end": 12795,
											"name": "tag",
											"source": 16,
											"value": "498"
										},
										{
											"begin": 12613,
											"end": 12795,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12753,
											"end": 12787,
											"name": "PUSH",
											"source": 16,
											"value": "416D6F756E74206D7573742062652067726561746572207468616E207A65726F"
										},
										{
											"begin": 12749,
											"end": 12750,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 12741,
											"end": 12747,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 12737,
											"end": 12751,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 12730,
											"end": 12788,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 12613,
											"end": 12795,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12613,
											"end": 12795,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12801,
											"end": 13167,
											"name": "tag",
											"source": 16,
											"value": "499"
										},
										{
											"begin": 12801,
											"end": 13167,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12943,
											"end": 12946,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 12964,
											"end": 13031,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "674"
										},
										{
											"begin": 13028,
											"end": 13030,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 13023,
											"end": 13026,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 12964,
											"end": 13031,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "460"
										},
										{
											"begin": 12964,
											"end": 13031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12964,
											"end": 13031,
											"name": "tag",
											"source": 16,
											"value": "674"
										},
										{
											"begin": 12964,
											"end": 13031,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12957,
											"end": 13031,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 12957,
											"end": 13031,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13040,
											"end": 13133,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "675"
										},
										{
											"begin": 13129,
											"end": 13132,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 13040,
											"end": 13133,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "498"
										},
										{
											"begin": 13040,
											"end": 13133,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 13040,
											"end": 13133,
											"name": "tag",
											"source": 16,
											"value": "675"
										},
										{
											"begin": 13040,
											"end": 13133,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13158,
											"end": 13160,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 13153,
											"end": 13156,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 13149,
											"end": 13161,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 13142,
											"end": 13161,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 13142,
											"end": 13161,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12801,
											"end": 13167,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 12801,
											"end": 13167,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 12801,
											"end": 13167,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12801,
											"end": 13167,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 13173,
											"end": 13592,
											"name": "tag",
											"source": 16,
											"value": "206"
										},
										{
											"begin": 13173,
											"end": 13592,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13339,
											"end": 13343,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 13377,
											"end": 13379,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 13366,
											"end": 13375,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 13362,
											"end": 13380,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 13354,
											"end": 13380,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 13354,
											"end": 13380,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13426,
											"end": 13435,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 13420,
											"end": 13424,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 13416,
											"end": 13436,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 13412,
											"end": 13413,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 13401,
											"end": 13410,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 13397,
											"end": 13414,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 13390,
											"end": 13437,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 13454,
											"end": 13585,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "677"
										},
										{
											"begin": 13580,
											"end": 13584,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 13454,
											"end": 13585,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "499"
										},
										{
											"begin": 13454,
											"end": 13585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 13454,
											"end": 13585,
											"name": "tag",
											"source": 16,
											"value": "677"
										},
										{
											"begin": 13454,
											"end": 13585,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13446,
											"end": 13585,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 13446,
											"end": 13585,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13173,
											"end": 13592,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 13173,
											"end": 13592,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 13173,
											"end": 13592,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13173,
											"end": 13592,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 13598,
											"end": 13789,
											"name": "tag",
											"source": 16,
											"value": "213"
										},
										{
											"begin": 13598,
											"end": 13789,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13638,
											"end": 13641,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 13657,
											"end": 13677,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "679"
										},
										{
											"begin": 13675,
											"end": 13676,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 13657,
											"end": 13677,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "471"
										},
										{
											"begin": 13657,
											"end": 13677,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 13657,
											"end": 13677,
											"name": "tag",
											"source": 16,
											"value": "679"
										},
										{
											"begin": 13657,
											"end": 13677,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13652,
											"end": 13677,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 13652,
											"end": 13677,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13691,
											"end": 13711,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "680"
										},
										{
											"begin": 13709,
											"end": 13710,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 13691,
											"end": 13711,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "471"
										},
										{
											"begin": 13691,
											"end": 13711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 13691,
											"end": 13711,
											"name": "tag",
											"source": 16,
											"value": "680"
										},
										{
											"begin": 13691,
											"end": 13711,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13686,
											"end": 13711,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 13686,
											"end": 13711,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13734,
											"end": 13735,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 13731,
											"end": 13732,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 13727,
											"end": 13736,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 13720,
											"end": 13736,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 13720,
											"end": 13736,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13755,
											"end": 13758,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 13752,
											"end": 13753,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 13749,
											"end": 13759,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 13746,
											"end": 13782,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 13746,
											"end": 13782,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "681"
										},
										{
											"begin": 13746,
											"end": 13782,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 13762,
											"end": 13780,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "682"
										},
										{
											"begin": 13762,
											"end": 13780,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "495"
										},
										{
											"begin": 13762,
											"end": 13780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 13762,
											"end": 13780,
											"name": "tag",
											"source": 16,
											"value": "682"
										},
										{
											"begin": 13762,
											"end": 13780,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13746,
											"end": 13782,
											"name": "tag",
											"source": 16,
											"value": "681"
										},
										{
											"begin": 13746,
											"end": 13782,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13598,
											"end": 13789,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 13598,
											"end": 13789,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 13598,
											"end": 13789,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13598,
											"end": 13789,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13598,
											"end": 13789,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 13795,
											"end": 14180,
											"name": "tag",
											"source": 16,
											"value": "248"
										},
										{
											"begin": 13795,
											"end": 14180,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13834,
											"end": 13835,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 13851,
											"end": 13870,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "684"
										},
										{
											"begin": 13868,
											"end": 13869,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 13851,
											"end": 13870,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "491"
										},
										{
											"begin": 13851,
											"end": 13870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 13851,
											"end": 13870,
											"name": "tag",
											"source": 16,
											"value": "684"
										},
										{
											"begin": 13851,
											"end": 13870,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13846,
											"end": 13870,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 13846,
											"end": 13870,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13884,
											"end": 13903,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "685"
										},
										{
											"begin": 13901,
											"end": 13902,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 13884,
											"end": 13903,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "491"
										},
										{
											"begin": 13884,
											"end": 13903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 13884,
											"end": 13903,
											"name": "tag",
											"source": 16,
											"value": "685"
										},
										{
											"begin": 13884,
											"end": 13903,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13879,
											"end": 13903,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 13879,
											"end": 13903,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13922,
											"end": 13923,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 13912,
											"end": 13947,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "686"
										},
										{
											"begin": 13912,
											"end": 13947,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 13927,
											"end": 13945,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "687"
										},
										{
											"begin": 13927,
											"end": 13945,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "494"
										},
										{
											"begin": 13927,
											"end": 13945,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 13927,
											"end": 13945,
											"name": "tag",
											"source": 16,
											"value": "687"
										},
										{
											"begin": 13927,
											"end": 13945,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13912,
											"end": 13947,
											"name": "tag",
											"source": 16,
											"value": "686"
										},
										{
											"begin": 13912,
											"end": 13947,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 14113,
											"end": 14114,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 14110,
											"end": 14111,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 14106,
											"end": 14115,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 14103,
											"end": 14104,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 14100,
											"end": 14116,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 14019,
											"end": 14085,
											"name": "PUSH",
											"source": 16,
											"value": "8000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14016,
											"end": 14017,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 14013,
											"end": 14086,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 13996,
											"end": 14126,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 13993,
											"end": 14149,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 13993,
											"end": 14149,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "688"
										},
										{
											"begin": 13993,
											"end": 14149,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 14129,
											"end": 14147,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "689"
										},
										{
											"begin": 14129,
											"end": 14147,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "495"
										},
										{
											"begin": 14129,
											"end": 14147,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 14129,
											"end": 14147,
											"name": "tag",
											"source": 16,
											"value": "689"
										},
										{
											"begin": 14129,
											"end": 14147,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13993,
											"end": 14149,
											"name": "tag",
											"source": 16,
											"value": "688"
										},
										{
											"begin": 13993,
											"end": 14149,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 14172,
											"end": 14173,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 14169,
											"end": 14170,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 14164,
											"end": 14174,
											"name": "SDIV",
											"source": 16
										},
										{
											"begin": 14159,
											"end": 14174,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 14159,
											"end": 14174,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13795,
											"end": 14180,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 13795,
											"end": 14180,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 13795,
											"end": 14180,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13795,
											"end": 14180,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13795,
											"end": 14180,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 14186,
											"end": 14291,
											"name": "tag",
											"source": 16,
											"value": "500"
										},
										{
											"begin": 14186,
											"end": 14291,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 14222,
											"end": 14229,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 14262,
											"end": 14284,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14255,
											"end": 14260,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 14251,
											"end": 14285,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 14240,
											"end": 14285,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 14240,
											"end": 14285,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14186,
											"end": 14291,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 14186,
											"end": 14291,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 14186,
											"end": 14291,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14186,
											"end": 14291,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 14297,
											"end": 14417,
											"name": "tag",
											"source": 16,
											"value": "501"
										},
										{
											"begin": 14297,
											"end": 14417,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 14369,
											"end": 14392,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "692"
										},
										{
											"begin": 14386,
											"end": 14391,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 14369,
											"end": 14392,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "500"
										},
										{
											"begin": 14369,
											"end": 14392,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 14369,
											"end": 14392,
											"name": "tag",
											"source": 16,
											"value": "692"
										},
										{
											"begin": 14369,
											"end": 14392,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 14362,
											"end": 14367,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 14359,
											"end": 14393,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 14349,
											"end": 14411,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "693"
										},
										{
											"begin": 14349,
											"end": 14411,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 14407,
											"end": 14408,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 14404,
											"end": 14405,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 14397,
											"end": 14409,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 14349,
											"end": 14411,
											"name": "tag",
											"source": 16,
											"value": "693"
										},
										{
											"begin": 14349,
											"end": 14411,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 14297,
											"end": 14417,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14297,
											"end": 14417,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 14423,
											"end": 14564,
											"name": "tag",
											"source": 16,
											"value": "502"
										},
										{
											"begin": 14423,
											"end": 14564,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 14479,
											"end": 14484,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 14510,
											"end": 14516,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 14504,
											"end": 14517,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 14495,
											"end": 14517,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 14495,
											"end": 14517,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14526,
											"end": 14558,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "695"
										},
										{
											"begin": 14552,
											"end": 14557,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 14526,
											"end": 14558,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "501"
										},
										{
											"begin": 14526,
											"end": 14558,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 14526,
											"end": 14558,
											"name": "tag",
											"source": 16,
											"value": "695"
										},
										{
											"begin": 14526,
											"end": 14558,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 14423,
											"end": 14564,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 14423,
											"end": 14564,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 14423,
											"end": 14564,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14423,
											"end": 14564,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14423,
											"end": 14564,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 14570,
											"end": 14690,
											"name": "tag",
											"source": 16,
											"value": "503"
										},
										{
											"begin": 14570,
											"end": 14690,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 14642,
											"end": 14665,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "697"
										},
										{
											"begin": 14659,
											"end": 14664,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 14642,
											"end": 14665,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "491"
										},
										{
											"begin": 14642,
											"end": 14665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 14642,
											"end": 14665,
											"name": "tag",
											"source": 16,
											"value": "697"
										},
										{
											"begin": 14642,
											"end": 14665,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 14635,
											"end": 14640,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 14632,
											"end": 14666,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 14622,
											"end": 14684,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "698"
										},
										{
											"begin": 14622,
											"end": 14684,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 14680,
											"end": 14681,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 14677,
											"end": 14678,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 14670,
											"end": 14682,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 14622,
											"end": 14684,
											"name": "tag",
											"source": 16,
											"value": "698"
										},
										{
											"begin": 14622,
											"end": 14684,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 14570,
											"end": 14690,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14570,
											"end": 14690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 14696,
											"end": 14837,
											"name": "tag",
											"source": 16,
											"value": "504"
										},
										{
											"begin": 14696,
											"end": 14837,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 14752,
											"end": 14757,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 14783,
											"end": 14789,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 14777,
											"end": 14790,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 14768,
											"end": 14790,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 14768,
											"end": 14790,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14799,
											"end": 14831,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "700"
										},
										{
											"begin": 14825,
											"end": 14830,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 14799,
											"end": 14831,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "503"
										},
										{
											"begin": 14799,
											"end": 14831,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 14799,
											"end": 14831,
											"name": "tag",
											"source": 16,
											"value": "700"
										},
										{
											"begin": 14799,
											"end": 14831,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 14696,
											"end": 14837,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 14696,
											"end": 14837,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 14696,
											"end": 14837,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14696,
											"end": 14837,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14696,
											"end": 14837,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 14843,
											"end": 14986,
											"name": "tag",
											"source": 16,
											"value": "505"
										},
										{
											"begin": 14843,
											"end": 14986,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 14900,
											"end": 14905,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 14931,
											"end": 14937,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 14925,
											"end": 14938,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 14916,
											"end": 14938,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 14916,
											"end": 14938,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14947,
											"end": 14980,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "702"
										},
										{
											"begin": 14974,
											"end": 14979,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 14947,
											"end": 14980,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "472"
										},
										{
											"begin": 14947,
											"end": 14980,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 14947,
											"end": 14980,
											"name": "tag",
											"source": 16,
											"value": "702"
										},
										{
											"begin": 14947,
											"end": 14980,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 14843,
											"end": 14986,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 14843,
											"end": 14986,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 14843,
											"end": 14986,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14843,
											"end": 14986,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14843,
											"end": 14986,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 14992,
											"end": 15963,
											"name": "tag",
											"source": 16,
											"value": "270"
										},
										{
											"begin": 14992,
											"end": 15963,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 15095,
											"end": 15101,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 15103,
											"end": 15109,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 15111,
											"end": 15117,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 15119,
											"end": 15125,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 15127,
											"end": 15133,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 15176,
											"end": 15179,
											"name": "PUSH",
											"source": 16,
											"value": "A0"
										},
										{
											"begin": 15164,
											"end": 15173,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 15155,
											"end": 15162,
											"name": "DUP9",
											"source": 16
										},
										{
											"begin": 15151,
											"end": 15174,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 15147,
											"end": 15180,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 15144,
											"end": 15264,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 15144,
											"end": 15264,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "704"
										},
										{
											"begin": 15144,
											"end": 15264,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 15183,
											"end": 15262,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "705"
										},
										{
											"begin": 15183,
											"end": 15262,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "465"
										},
										{
											"begin": 15183,
											"end": 15262,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 15183,
											"end": 15262,
											"name": "tag",
											"source": 16,
											"value": "705"
										},
										{
											"begin": 15183,
											"end": 15262,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 15144,
											"end": 15264,
											"name": "tag",
											"source": 16,
											"value": "704"
										},
										{
											"begin": 15144,
											"end": 15264,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 15303,
											"end": 15304,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 15328,
											"end": 15391,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "706"
										},
										{
											"begin": 15383,
											"end": 15390,
											"name": "DUP9",
											"source": 16
										},
										{
											"begin": 15374,
											"end": 15380,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 15363,
											"end": 15372,
											"name": "DUP10",
											"source": 16
										},
										{
											"begin": 15359,
											"end": 15381,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 15328,
											"end": 15391,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "502"
										},
										{
											"begin": 15328,
											"end": 15391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 15328,
											"end": 15391,
											"name": "tag",
											"source": 16,
											"value": "706"
										},
										{
											"begin": 15328,
											"end": 15391,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 15318,
											"end": 15391,
											"name": "SWAP6",
											"source": 16
										},
										{
											"begin": 15318,
											"end": 15391,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15274,
											"end": 15401,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15440,
											"end": 15442,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 15466,
											"end": 15529,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "707"
										},
										{
											"begin": 15521,
											"end": 15528,
											"name": "DUP9",
											"source": 16
										},
										{
											"begin": 15512,
											"end": 15518,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 15501,
											"end": 15510,
											"name": "DUP10",
											"source": 16
										},
										{
											"begin": 15497,
											"end": 15519,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 15466,
											"end": 15529,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "504"
										},
										{
											"begin": 15466,
											"end": 15529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 15466,
											"end": 15529,
											"name": "tag",
											"source": 16,
											"value": "707"
										},
										{
											"begin": 15466,
											"end": 15529,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 15456,
											"end": 15529,
											"name": "SWAP5",
											"source": 16
										},
										{
											"begin": 15456,
											"end": 15529,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15411,
											"end": 15539,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15578,
											"end": 15580,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 15604,
											"end": 15668,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "708"
										},
										{
											"begin": 15660,
											"end": 15667,
											"name": "DUP9",
											"source": 16
										},
										{
											"begin": 15651,
											"end": 15657,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 15640,
											"end": 15649,
											"name": "DUP10",
											"source": 16
										},
										{
											"begin": 15636,
											"end": 15658,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 15604,
											"end": 15668,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "505"
										},
										{
											"begin": 15604,
											"end": 15668,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 15604,
											"end": 15668,
											"name": "tag",
											"source": 16,
											"value": "708"
										},
										{
											"begin": 15604,
											"end": 15668,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 15594,
											"end": 15668,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 15594,
											"end": 15668,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15549,
											"end": 15678,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15717,
											"end": 15719,
											"name": "PUSH",
											"source": 16,
											"value": "60"
										},
										{
											"begin": 15743,
											"end": 15807,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "709"
										},
										{
											"begin": 15799,
											"end": 15806,
											"name": "DUP9",
											"source": 16
										},
										{
											"begin": 15790,
											"end": 15796,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 15779,
											"end": 15788,
											"name": "DUP10",
											"source": 16
										},
										{
											"begin": 15775,
											"end": 15797,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 15743,
											"end": 15807,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "505"
										},
										{
											"begin": 15743,
											"end": 15807,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 15743,
											"end": 15807,
											"name": "tag",
											"source": 16,
											"value": "709"
										},
										{
											"begin": 15743,
											"end": 15807,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 15733,
											"end": 15807,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 15733,
											"end": 15807,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15688,
											"end": 15817,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15856,
											"end": 15859,
											"name": "PUSH",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 15883,
											"end": 15946,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "710"
										},
										{
											"begin": 15938,
											"end": 15945,
											"name": "DUP9",
											"source": 16
										},
										{
											"begin": 15929,
											"end": 15935,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 15918,
											"end": 15927,
											"name": "DUP10",
											"source": 16
										},
										{
											"begin": 15914,
											"end": 15936,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 15883,
											"end": 15946,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "502"
										},
										{
											"begin": 15883,
											"end": 15946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 15883,
											"end": 15946,
											"name": "tag",
											"source": 16,
											"value": "710"
										},
										{
											"begin": 15883,
											"end": 15946,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 15873,
											"end": 15946,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 15873,
											"end": 15946,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15827,
											"end": 15956,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14992,
											"end": 15963,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 14992,
											"end": 15963,
											"name": "SWAP6",
											"source": 16
										},
										{
											"begin": 14992,
											"end": 15963,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14992,
											"end": 15963,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 14992,
											"end": 15963,
											"name": "SWAP6",
											"source": 16
										},
										{
											"begin": 14992,
											"end": 15963,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 14992,
											"end": 15963,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 14992,
											"end": 15963,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14992,
											"end": 15963,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 15969,
											"end": 16054,
											"name": "tag",
											"source": 16,
											"value": "506"
										},
										{
											"begin": 15969,
											"end": 16054,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 16014,
											"end": 16021,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 16043,
											"end": 16048,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 16032,
											"end": 16048,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 16032,
											"end": 16048,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15969,
											"end": 16054,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 15969,
											"end": 16054,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 15969,
											"end": 16054,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15969,
											"end": 16054,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 16060,
											"end": 16161,
											"name": "tag",
											"source": 16,
											"value": "507"
										},
										{
											"begin": 16060,
											"end": 16161,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 16096,
											"end": 16103,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 16136,
											"end": 16154,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16129,
											"end": 16134,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 16125,
											"end": 16155,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 16114,
											"end": 16155,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 16114,
											"end": 16155,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16060,
											"end": 16161,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 16060,
											"end": 16161,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 16060,
											"end": 16161,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16060,
											"end": 16161,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 16167,
											"end": 16227,
											"name": "tag",
											"source": 16,
											"value": "508"
										},
										{
											"begin": 16167,
											"end": 16227,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 16195,
											"end": 16198,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 16216,
											"end": 16221,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 16209,
											"end": 16221,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 16209,
											"end": 16221,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16167,
											"end": 16227,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 16167,
											"end": 16227,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 16167,
											"end": 16227,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16167,
											"end": 16227,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 16233,
											"end": 16389,
											"name": "tag",
											"source": 16,
											"value": "509"
										},
										{
											"begin": 16233,
											"end": 16389,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 16290,
											"end": 16299,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 16323,
											"end": 16383,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "715"
										},
										{
											"begin": 16340,
											"end": 16382,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "716"
										},
										{
											"begin": 16349,
											"end": 16381,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "717"
										},
										{
											"begin": 16375,
											"end": 16380,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 16349,
											"end": 16381,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "506"
										},
										{
											"begin": 16349,
											"end": 16381,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 16349,
											"end": 16381,
											"name": "tag",
											"source": 16,
											"value": "717"
										},
										{
											"begin": 16349,
											"end": 16381,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 16340,
											"end": 16382,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "508"
										},
										{
											"begin": 16340,
											"end": 16382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 16340,
											"end": 16382,
											"name": "tag",
											"source": 16,
											"value": "716"
										},
										{
											"begin": 16340,
											"end": 16382,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 16323,
											"end": 16383,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "507"
										},
										{
											"begin": 16323,
											"end": 16383,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 16323,
											"end": 16383,
											"name": "tag",
											"source": 16,
											"value": "715"
										},
										{
											"begin": 16323,
											"end": 16383,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 16310,
											"end": 16383,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 16310,
											"end": 16383,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16233,
											"end": 16389,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 16233,
											"end": 16389,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 16233,
											"end": 16389,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16233,
											"end": 16389,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 16395,
											"end": 16540,
											"name": "tag",
											"source": 16,
											"value": "510"
										},
										{
											"begin": 16395,
											"end": 16540,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 16489,
											"end": 16533,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "719"
										},
										{
											"begin": 16527,
											"end": 16532,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 16489,
											"end": 16533,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "509"
										},
										{
											"begin": 16489,
											"end": 16533,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 16489,
											"end": 16533,
											"name": "tag",
											"source": 16,
											"value": "719"
										},
										{
											"begin": 16489,
											"end": 16533,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 16484,
											"end": 16487,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 16477,
											"end": 16534,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 16395,
											"end": 16540,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16395,
											"end": 16540,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16395,
											"end": 16540,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 16546,
											"end": 16782,
											"name": "tag",
											"source": 16,
											"value": "290"
										},
										{
											"begin": 16546,
											"end": 16782,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 16646,
											"end": 16650,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 16684,
											"end": 16686,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 16673,
											"end": 16682,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 16669,
											"end": 16687,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 16661,
											"end": 16687,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 16661,
											"end": 16687,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16697,
											"end": 16775,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "721"
										},
										{
											"begin": 16772,
											"end": 16773,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 16761,
											"end": 16770,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 16757,
											"end": 16774,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 16748,
											"end": 16754,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 16697,
											"end": 16775,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "510"
										},
										{
											"begin": 16697,
											"end": 16775,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 16697,
											"end": 16775,
											"name": "tag",
											"source": 16,
											"value": "721"
										},
										{
											"begin": 16697,
											"end": 16775,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 16546,
											"end": 16782,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 16546,
											"end": 16782,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 16546,
											"end": 16782,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16546,
											"end": 16782,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16546,
											"end": 16782,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 16788,
											"end": 17230,
											"name": "tag",
											"source": 16,
											"value": "316"
										},
										{
											"begin": 16788,
											"end": 17230,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 16937,
											"end": 16941,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 16975,
											"end": 16977,
											"name": "PUSH",
											"source": 16,
											"value": "60"
										},
										{
											"begin": 16964,
											"end": 16973,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 16960,
											"end": 16978,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 16952,
											"end": 16978,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 16952,
											"end": 16978,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16988,
											"end": 17059,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "723"
										},
										{
											"begin": 17056,
											"end": 17057,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 17045,
											"end": 17054,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 17041,
											"end": 17058,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 17032,
											"end": 17038,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 16988,
											"end": 17059,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "490"
										},
										{
											"begin": 16988,
											"end": 17059,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 16988,
											"end": 17059,
											"name": "tag",
											"source": 16,
											"value": "723"
										},
										{
											"begin": 16988,
											"end": 17059,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 17069,
											"end": 17141,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "724"
										},
										{
											"begin": 17137,
											"end": 17139,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 17126,
											"end": 17135,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 17122,
											"end": 17140,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 17113,
											"end": 17119,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 17069,
											"end": 17141,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "476"
										},
										{
											"begin": 17069,
											"end": 17141,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 17069,
											"end": 17141,
											"name": "tag",
											"source": 16,
											"value": "724"
										},
										{
											"begin": 17069,
											"end": 17141,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 17151,
											"end": 17223,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "725"
										},
										{
											"begin": 17219,
											"end": 17221,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 17208,
											"end": 17217,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 17204,
											"end": 17222,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 17195,
											"end": 17201,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 17151,
											"end": 17223,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "476"
										},
										{
											"begin": 17151,
											"end": 17223,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 17151,
											"end": 17223,
											"name": "tag",
											"source": 16,
											"value": "725"
										},
										{
											"begin": 17151,
											"end": 17223,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 16788,
											"end": 17230,
											"name": "SWAP5",
											"source": 16
										},
										{
											"begin": 16788,
											"end": 17230,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 16788,
											"end": 17230,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16788,
											"end": 17230,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16788,
											"end": 17230,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16788,
											"end": 17230,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16788,
											"end": 17230,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 17236,
											"end": 17358,
											"name": "tag",
											"source": 16,
											"value": "511"
										},
										{
											"begin": 17236,
											"end": 17358,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 17309,
											"end": 17333,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "727"
										},
										{
											"begin": 17327,
											"end": 17332,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 17309,
											"end": 17333,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "488"
										},
										{
											"begin": 17309,
											"end": 17333,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 17309,
											"end": 17333,
											"name": "tag",
											"source": 16,
											"value": "727"
										},
										{
											"begin": 17309,
											"end": 17333,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 17302,
											"end": 17307,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 17299,
											"end": 17334,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 17289,
											"end": 17352,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "728"
										},
										{
											"begin": 17289,
											"end": 17352,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 17348,
											"end": 17349,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 17345,
											"end": 17346,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 17338,
											"end": 17350,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 17289,
											"end": 17352,
											"name": "tag",
											"source": 16,
											"value": "728"
										},
										{
											"begin": 17289,
											"end": 17352,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 17236,
											"end": 17358,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17236,
											"end": 17358,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 17364,
											"end": 17507,
											"name": "tag",
											"source": 16,
											"value": "512"
										},
										{
											"begin": 17364,
											"end": 17507,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 17421,
											"end": 17426,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 17452,
											"end": 17458,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 17446,
											"end": 17459,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 17437,
											"end": 17459,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 17437,
											"end": 17459,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17468,
											"end": 17501,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "730"
										},
										{
											"begin": 17495,
											"end": 17500,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 17468,
											"end": 17501,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "511"
										},
										{
											"begin": 17468,
											"end": 17501,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 17468,
											"end": 17501,
											"name": "tag",
											"source": 16,
											"value": "730"
										},
										{
											"begin": 17468,
											"end": 17501,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 17364,
											"end": 17507,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 17364,
											"end": 17507,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 17364,
											"end": 17507,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17364,
											"end": 17507,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17364,
											"end": 17507,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 17513,
											"end": 17864,
											"name": "tag",
											"source": 16,
											"value": "344"
										},
										{
											"begin": 17513,
											"end": 17864,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 17583,
											"end": 17589,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 17632,
											"end": 17634,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 17620,
											"end": 17629,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 17611,
											"end": 17618,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 17607,
											"end": 17630,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 17603,
											"end": 17635,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 17600,
											"end": 17719,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 17600,
											"end": 17719,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "732"
										},
										{
											"begin": 17600,
											"end": 17719,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 17638,
											"end": 17717,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "733"
										},
										{
											"begin": 17638,
											"end": 17717,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "465"
										},
										{
											"begin": 17638,
											"end": 17717,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 17638,
											"end": 17717,
											"name": "tag",
											"source": 16,
											"value": "733"
										},
										{
											"begin": 17638,
											"end": 17717,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 17600,
											"end": 17719,
											"name": "tag",
											"source": 16,
											"value": "732"
										},
										{
											"begin": 17600,
											"end": 17719,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 17758,
											"end": 17759,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 17783,
											"end": 17847,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "734"
										},
										{
											"begin": 17839,
											"end": 17846,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 17830,
											"end": 17836,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 17819,
											"end": 17828,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 17815,
											"end": 17837,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 17783,
											"end": 17847,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "512"
										},
										{
											"begin": 17783,
											"end": 17847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 17783,
											"end": 17847,
											"name": "tag",
											"source": 16,
											"value": "734"
										},
										{
											"begin": 17783,
											"end": 17847,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 17773,
											"end": 17847,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 17773,
											"end": 17847,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17729,
											"end": 17857,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17513,
											"end": 17864,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 17513,
											"end": 17864,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 17513,
											"end": 17864,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17513,
											"end": 17864,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17513,
											"end": 17864,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 17870,
											"end": 18011,
											"name": "tag",
											"source": 16,
											"value": "513"
										},
										{
											"begin": 17870,
											"end": 18011,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 17919,
											"end": 17923,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 17942,
											"end": 17945,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 17934,
											"end": 17945,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 17934,
											"end": 17945,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17965,
											"end": 17968,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 17962,
											"end": 17963,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 17955,
											"end": 17969,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 17999,
											"end": 18003,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 17996,
											"end": 17997,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 17986,
											"end": 18004,
											"name": "KECCAK256",
											"source": 16
										},
										{
											"begin": 17978,
											"end": 18004,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 17978,
											"end": 18004,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17870,
											"end": 18011,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 17870,
											"end": 18011,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 17870,
											"end": 18011,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17870,
											"end": 18011,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 18017,
											"end": 18110,
											"name": "tag",
											"source": 16,
											"value": "514"
										},
										{
											"begin": 18017,
											"end": 18110,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 18054,
											"end": 18060,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 18101,
											"end": 18103,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 18096,
											"end": 18098,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 18089,
											"end": 18094,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 18085,
											"end": 18099,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 18081,
											"end": 18104,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 18071,
											"end": 18104,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 18071,
											"end": 18104,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18017,
											"end": 18110,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 18017,
											"end": 18110,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 18017,
											"end": 18110,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18017,
											"end": 18110,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 18116,
											"end": 18223,
											"name": "tag",
											"source": 16,
											"value": "515"
										},
										{
											"begin": 18116,
											"end": 18223,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 18160,
											"end": 18168,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 18210,
											"end": 18215,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 18204,
											"end": 18208,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 18200,
											"end": 18216,
											"name": "SHL",
											"source": 16
										},
										{
											"begin": 18179,
											"end": 18216,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 18179,
											"end": 18216,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18116,
											"end": 18223,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 18116,
											"end": 18223,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 18116,
											"end": 18223,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18116,
											"end": 18223,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18116,
											"end": 18223,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 18229,
											"end": 18622,
											"name": "tag",
											"source": 16,
											"value": "516"
										},
										{
											"begin": 18229,
											"end": 18622,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 18298,
											"end": 18304,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 18348,
											"end": 18349,
											"name": "PUSH",
											"source": 16,
											"value": "8"
										},
										{
											"begin": 18336,
											"end": 18346,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 18332,
											"end": 18350,
											"name": "MUL",
											"source": 16
										},
										{
											"begin": 18371,
											"end": 18468,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "739"
										},
										{
											"begin": 18401,
											"end": 18467,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18390,
											"end": 18399,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 18371,
											"end": 18468,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "515"
										},
										{
											"begin": 18371,
											"end": 18468,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 18371,
											"end": 18468,
											"name": "tag",
											"source": 16,
											"value": "739"
										},
										{
											"begin": 18371,
											"end": 18468,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 18489,
											"end": 18528,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "740"
										},
										{
											"begin": 18519,
											"end": 18527,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 18508,
											"end": 18517,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 18489,
											"end": 18528,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "515"
										},
										{
											"begin": 18489,
											"end": 18528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 18489,
											"end": 18528,
											"name": "tag",
											"source": 16,
											"value": "740"
										},
										{
											"begin": 18489,
											"end": 18528,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 18477,
											"end": 18528,
											"name": "SWAP6",
											"source": 16
										},
										{
											"begin": 18477,
											"end": 18528,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18561,
											"end": 18565,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 18557,
											"end": 18566,
											"name": "NOT",
											"source": 16
										},
										{
											"begin": 18550,
											"end": 18555,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 18546,
											"end": 18567,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 18537,
											"end": 18567,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 18537,
											"end": 18567,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18610,
											"end": 18614,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 18600,
											"end": 18608,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 18596,
											"end": 18615,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 18589,
											"end": 18594,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 18586,
											"end": 18616,
											"name": "OR",
											"source": 16
										},
										{
											"begin": 18576,
											"end": 18616,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 18576,
											"end": 18616,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18305,
											"end": 18622,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18305,
											"end": 18622,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18229,
											"end": 18622,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 18229,
											"end": 18622,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 18229,
											"end": 18622,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18229,
											"end": 18622,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18229,
											"end": 18622,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18229,
											"end": 18622,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 18628,
											"end": 18770,
											"name": "tag",
											"source": 16,
											"value": "517"
										},
										{
											"begin": 18628,
											"end": 18770,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 18678,
											"end": 18687,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 18711,
											"end": 18764,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "742"
										},
										{
											"begin": 18729,
											"end": 18763,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "743"
										},
										{
											"begin": 18738,
											"end": 18762,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "744"
										},
										{
											"begin": 18756,
											"end": 18761,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 18738,
											"end": 18762,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "471"
										},
										{
											"begin": 18738,
											"end": 18762,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 18738,
											"end": 18762,
											"name": "tag",
											"source": 16,
											"value": "744"
										},
										{
											"begin": 18738,
											"end": 18762,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 18729,
											"end": 18763,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "508"
										},
										{
											"begin": 18729,
											"end": 18763,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 18729,
											"end": 18763,
											"name": "tag",
											"source": 16,
											"value": "743"
										},
										{
											"begin": 18729,
											"end": 18763,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 18711,
											"end": 18764,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "471"
										},
										{
											"begin": 18711,
											"end": 18764,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 18711,
											"end": 18764,
											"name": "tag",
											"source": 16,
											"value": "742"
										},
										{
											"begin": 18711,
											"end": 18764,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 18698,
											"end": 18764,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 18698,
											"end": 18764,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18628,
											"end": 18770,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 18628,
											"end": 18770,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 18628,
											"end": 18770,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18628,
											"end": 18770,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 18776,
											"end": 18851,
											"name": "tag",
											"source": 16,
											"value": "518"
										},
										{
											"begin": 18776,
											"end": 18851,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 18819,
											"end": 18822,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 18840,
											"end": 18845,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 18833,
											"end": 18845,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 18833,
											"end": 18845,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18776,
											"end": 18851,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 18776,
											"end": 18851,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 18776,
											"end": 18851,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18776,
											"end": 18851,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 18857,
											"end": 19126,
											"name": "tag",
											"source": 16,
											"value": "519"
										},
										{
											"begin": 18857,
											"end": 19126,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 18967,
											"end": 19006,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "747"
										},
										{
											"begin": 18998,
											"end": 19005,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 18967,
											"end": 19006,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "517"
										},
										{
											"begin": 18967,
											"end": 19006,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 18967,
											"end": 19006,
											"name": "tag",
											"source": 16,
											"value": "747"
										},
										{
											"begin": 18967,
											"end": 19006,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 19028,
											"end": 19119,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "748"
										},
										{
											"begin": 19077,
											"end": 19118,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "749"
										},
										{
											"begin": 19101,
											"end": 19117,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 19077,
											"end": 19118,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "518"
										},
										{
											"begin": 19077,
											"end": 19118,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 19077,
											"end": 19118,
											"name": "tag",
											"source": 16,
											"value": "749"
										},
										{
											"begin": 19077,
											"end": 19118,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 19069,
											"end": 19075,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 19062,
											"end": 19066,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 19056,
											"end": 19067,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 19028,
											"end": 19119,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "516"
										},
										{
											"begin": 19028,
											"end": 19119,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 19028,
											"end": 19119,
											"name": "tag",
											"source": 16,
											"value": "748"
										},
										{
											"begin": 19028,
											"end": 19119,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 19022,
											"end": 19026,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 19015,
											"end": 19120,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": 18933,
											"end": 19126,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18857,
											"end": 19126,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18857,
											"end": 19126,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18857,
											"end": 19126,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18857,
											"end": 19126,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 19132,
											"end": 19205,
											"name": "tag",
											"source": 16,
											"value": "520"
										},
										{
											"begin": 19132,
											"end": 19205,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 19177,
											"end": 19180,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 19132,
											"end": 19205,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 19132,
											"end": 19205,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 19211,
											"end": 19400,
											"name": "tag",
											"source": 16,
											"value": "521"
										},
										{
											"begin": 19211,
											"end": 19400,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 19288,
											"end": 19320,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "752"
										},
										{
											"begin": 19288,
											"end": 19320,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "520"
										},
										{
											"begin": 19288,
											"end": 19320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 19288,
											"end": 19320,
											"name": "tag",
											"source": 16,
											"value": "752"
										},
										{
											"begin": 19288,
											"end": 19320,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 19329,
											"end": 19394,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "753"
										},
										{
											"begin": 19387,
											"end": 19393,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 19379,
											"end": 19385,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 19373,
											"end": 19377,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 19329,
											"end": 19394,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "519"
										},
										{
											"begin": 19329,
											"end": 19394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 19329,
											"end": 19394,
											"name": "tag",
											"source": 16,
											"value": "753"
										},
										{
											"begin": 19329,
											"end": 19394,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 19264,
											"end": 19400,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19211,
											"end": 19400,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19211,
											"end": 19400,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19211,
											"end": 19400,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 19406,
											"end": 19592,
											"name": "tag",
											"source": 16,
											"value": "522"
										},
										{
											"begin": 19406,
											"end": 19592,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 19466,
											"end": 19586,
											"name": "tag",
											"source": 16,
											"value": "755"
										},
										{
											"begin": 19466,
											"end": 19586,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 19483,
											"end": 19486,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 19476,
											"end": 19481,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 19473,
											"end": 19487,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 19466,
											"end": 19586,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 19466,
											"end": 19586,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "757"
										},
										{
											"begin": 19466,
											"end": 19586,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 19537,
											"end": 19576,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "758"
										},
										{
											"begin": 19574,
											"end": 19575,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 19567,
											"end": 19572,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 19537,
											"end": 19576,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "521"
										},
										{
											"begin": 19537,
											"end": 19576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 19537,
											"end": 19576,
											"name": "tag",
											"source": 16,
											"value": "758"
										},
										{
											"begin": 19537,
											"end": 19576,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 19510,
											"end": 19511,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 19503,
											"end": 19508,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 19499,
											"end": 19512,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 19490,
											"end": 19512,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 19490,
											"end": 19512,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19466,
											"end": 19586,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "755"
										},
										{
											"begin": 19466,
											"end": 19586,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 19466,
											"end": 19586,
											"name": "tag",
											"source": 16,
											"value": "757"
										},
										{
											"begin": 19466,
											"end": 19586,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 19406,
											"end": 19592,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19406,
											"end": 19592,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19406,
											"end": 19592,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 19598,
											"end": 20141,
											"name": "tag",
											"source": 16,
											"value": "523"
										},
										{
											"begin": 19598,
											"end": 20141,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 19699,
											"end": 19701,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 19694,
											"end": 19697,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 19691,
											"end": 19702,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 19688,
											"end": 20134,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 19688,
											"end": 20134,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "760"
										},
										{
											"begin": 19688,
											"end": 20134,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 19733,
											"end": 19771,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "761"
										},
										{
											"begin": 19765,
											"end": 19770,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 19733,
											"end": 19771,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "513"
										},
										{
											"begin": 19733,
											"end": 19771,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 19733,
											"end": 19771,
											"name": "tag",
											"source": 16,
											"value": "761"
										},
										{
											"begin": 19733,
											"end": 19771,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 19817,
											"end": 19846,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "762"
										},
										{
											"begin": 19835,
											"end": 19845,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 19817,
											"end": 19846,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "514"
										},
										{
											"begin": 19817,
											"end": 19846,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 19817,
											"end": 19846,
											"name": "tag",
											"source": 16,
											"value": "762"
										},
										{
											"begin": 19817,
											"end": 19846,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 19807,
											"end": 19815,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 19803,
											"end": 19847,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 20000,
											"end": 20002,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 19988,
											"end": 19998,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 19985,
											"end": 20003,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 19982,
											"end": 20031,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 19982,
											"end": 20031,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "763"
										},
										{
											"begin": 19982,
											"end": 20031,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 20021,
											"end": 20029,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 20006,
											"end": 20029,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 20006,
											"end": 20029,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19982,
											"end": 20031,
											"name": "tag",
											"source": 16,
											"value": "763"
										},
										{
											"begin": 19982,
											"end": 20031,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 20044,
											"end": 20124,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "764"
										},
										{
											"begin": 20100,
											"end": 20122,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "765"
										},
										{
											"begin": 20118,
											"end": 20121,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 20100,
											"end": 20122,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "514"
										},
										{
											"begin": 20100,
											"end": 20122,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 20100,
											"end": 20122,
											"name": "tag",
											"source": 16,
											"value": "765"
										},
										{
											"begin": 20100,
											"end": 20122,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 20090,
											"end": 20098,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 20086,
											"end": 20123,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 20073,
											"end": 20084,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 20044,
											"end": 20124,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "522"
										},
										{
											"begin": 20044,
											"end": 20124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 20044,
											"end": 20124,
											"name": "tag",
											"source": 16,
											"value": "764"
										},
										{
											"begin": 20044,
											"end": 20124,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 19703,
											"end": 20134,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19703,
											"end": 20134,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19688,
											"end": 20134,
											"name": "tag",
											"source": 16,
											"value": "760"
										},
										{
											"begin": 19688,
											"end": 20134,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 19598,
											"end": 20141,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19598,
											"end": 20141,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19598,
											"end": 20141,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19598,
											"end": 20141,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 20147,
											"end": 20264,
											"name": "tag",
											"source": 16,
											"value": "524"
										},
										{
											"begin": 20147,
											"end": 20264,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 20201,
											"end": 20209,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 20251,
											"end": 20256,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 20245,
											"end": 20249,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 20241,
											"end": 20257,
											"name": "SHR",
											"source": 16
										},
										{
											"begin": 20220,
											"end": 20257,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 20220,
											"end": 20257,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 20147,
											"end": 20264,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 20147,
											"end": 20264,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 20147,
											"end": 20264,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 20147,
											"end": 20264,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 20147,
											"end": 20264,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 20270,
											"end": 20439,
											"name": "tag",
											"source": 16,
											"value": "525"
										},
										{
											"begin": 20270,
											"end": 20439,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 20314,
											"end": 20320,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 20347,
											"end": 20398,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "768"
										},
										{
											"begin": 20395,
											"end": 20396,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 20391,
											"end": 20397,
											"name": "NOT",
											"source": 16
										},
										{
											"begin": 20383,
											"end": 20388,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 20380,
											"end": 20381,
											"name": "PUSH",
											"source": 16,
											"value": "8"
										},
										{
											"begin": 20376,
											"end": 20389,
											"name": "MUL",
											"source": 16
										},
										{
											"begin": 20347,
											"end": 20398,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "524"
										},
										{
											"begin": 20347,
											"end": 20398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 20347,
											"end": 20398,
											"name": "tag",
											"source": 16,
											"value": "768"
										},
										{
											"begin": 20347,
											"end": 20398,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 20343,
											"end": 20399,
											"name": "NOT",
											"source": 16
										},
										{
											"begin": 20428,
											"end": 20432,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 20422,
											"end": 20426,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 20418,
											"end": 20433,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 20408,
											"end": 20433,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 20408,
											"end": 20433,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 20321,
											"end": 20439,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 20270,
											"end": 20439,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 20270,
											"end": 20439,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 20270,
											"end": 20439,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 20270,
											"end": 20439,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 20270,
											"end": 20439,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 20444,
											"end": 20739,
											"name": "tag",
											"source": 16,
											"value": "526"
										},
										{
											"begin": 20444,
											"end": 20739,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 20520,
											"end": 20524,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 20666,
											"end": 20695,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "770"
										},
										{
											"begin": 20691,
											"end": 20694,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 20685,
											"end": 20689,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 20666,
											"end": 20695,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "525"
										},
										{
											"begin": 20666,
											"end": 20695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 20666,
											"end": 20695,
											"name": "tag",
											"source": 16,
											"value": "770"
										},
										{
											"begin": 20666,
											"end": 20695,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 20658,
											"end": 20695,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 20658,
											"end": 20695,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 20728,
											"end": 20731,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 20725,
											"end": 20726,
											"name": "PUSH",
											"source": 16,
											"value": "2"
										},
										{
											"begin": 20721,
											"end": 20732,
											"name": "MUL",
											"source": 16
										},
										{
											"begin": 20715,
											"end": 20719,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 20712,
											"end": 20733,
											"name": "OR",
											"source": 16
										},
										{
											"begin": 20704,
											"end": 20733,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 20704,
											"end": 20733,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 20444,
											"end": 20739,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 20444,
											"end": 20739,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 20444,
											"end": 20739,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 20444,
											"end": 20739,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 20444,
											"end": 20739,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 20744,
											"end": 22139,
											"name": "tag",
											"source": 16,
											"value": "423"
										},
										{
											"begin": 20744,
											"end": 22139,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 20861,
											"end": 20898,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "772"
										},
										{
											"begin": 20894,
											"end": 20897,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 20861,
											"end": 20898,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "459"
										},
										{
											"begin": 20861,
											"end": 20898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 20861,
											"end": 20898,
											"name": "tag",
											"source": 16,
											"value": "772"
										},
										{
											"begin": 20861,
											"end": 20898,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 20963,
											"end": 20981,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20955,
											"end": 20961,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 20952,
											"end": 20982,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 20949,
											"end": 21005,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 20949,
											"end": 21005,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "773"
										},
										{
											"begin": 20949,
											"end": 21005,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 20985,
											"end": 21003,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "774"
										},
										{
											"begin": 20985,
											"end": 21003,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "481"
										},
										{
											"begin": 20985,
											"end": 21003,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 20985,
											"end": 21003,
											"name": "tag",
											"source": 16,
											"value": "774"
										},
										{
											"begin": 20985,
											"end": 21003,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 20949,
											"end": 21005,
											"name": "tag",
											"source": 16,
											"value": "773"
										},
										{
											"begin": 20949,
											"end": 21005,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 21029,
											"end": 21067,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "775"
										},
										{
											"begin": 21061,
											"end": 21065,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 21055,
											"end": 21066,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 21029,
											"end": 21067,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "166"
										},
										{
											"begin": 21029,
											"end": 21067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 21029,
											"end": 21067,
											"name": "tag",
											"source": 16,
											"value": "775"
										},
										{
											"begin": 21029,
											"end": 21067,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 21114,
											"end": 21181,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "776"
										},
										{
											"begin": 21174,
											"end": 21180,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 21166,
											"end": 21172,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 21160,
											"end": 21164,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 21114,
											"end": 21181,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "523"
										},
										{
											"begin": 21114,
											"end": 21181,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 21114,
											"end": 21181,
											"name": "tag",
											"source": 16,
											"value": "776"
										},
										{
											"begin": 21114,
											"end": 21181,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 21208,
											"end": 21209,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 21232,
											"end": 21236,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 21219,
											"end": 21236,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 21219,
											"end": 21236,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 21264,
											"end": 21266,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 21256,
											"end": 21262,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 21253,
											"end": 21267,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 21281,
											"end": 21282,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 21276,
											"end": 21894,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 21276,
											"end": 21894,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 21276,
											"end": 21894,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "778"
										},
										{
											"begin": 21276,
											"end": 21894,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 21938,
											"end": 21939,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 21955,
											"end": 21961,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 21952,
											"end": 22029,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 21952,
											"end": 22029,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "779"
										},
										{
											"begin": 21952,
											"end": 22029,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 22004,
											"end": 22013,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 21999,
											"end": 22002,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 21995,
											"end": 22014,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 21989,
											"end": 22015,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 21980,
											"end": 22015,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 21980,
											"end": 22015,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 21952,
											"end": 22029,
											"name": "tag",
											"source": 16,
											"value": "779"
										},
										{
											"begin": 21952,
											"end": 22029,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 22055,
											"end": 22122,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "780"
										},
										{
											"begin": 22115,
											"end": 22121,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 22108,
											"end": 22113,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 22055,
											"end": 22122,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "526"
										},
										{
											"begin": 22055,
											"end": 22122,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 22055,
											"end": 22122,
											"name": "tag",
											"source": 16,
											"value": "780"
										},
										{
											"begin": 22055,
											"end": 22122,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 22049,
											"end": 22053,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 22042,
											"end": 22123,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": 21911,
											"end": 22133,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 21246,
											"end": 22133,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "777"
										},
										{
											"begin": 21246,
											"end": 22133,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 21276,
											"end": 21894,
											"name": "tag",
											"source": 16,
											"value": "778"
										},
										{
											"begin": 21276,
											"end": 21894,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 21328,
											"end": 21332,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 21324,
											"end": 21333,
											"name": "NOT",
											"source": 16
										},
										{
											"begin": 21316,
											"end": 21322,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 21312,
											"end": 21334,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 21362,
											"end": 21399,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "781"
										},
										{
											"begin": 21394,
											"end": 21398,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 21362,
											"end": 21399,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "513"
										},
										{
											"begin": 21362,
											"end": 21399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 21362,
											"end": 21399,
											"name": "tag",
											"source": 16,
											"value": "781"
										},
										{
											"begin": 21362,
											"end": 21399,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 21421,
											"end": 21422,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 21435,
											"end": 21643,
											"name": "tag",
											"source": 16,
											"value": "782"
										},
										{
											"begin": 21435,
											"end": 21643,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 21449,
											"end": 21456,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 21446,
											"end": 21447,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 21443,
											"end": 21457,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 21435,
											"end": 21643,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 21435,
											"end": 21643,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "784"
										},
										{
											"begin": 21435,
											"end": 21643,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 21528,
											"end": 21537,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 21523,
											"end": 21526,
											"name": "DUP10",
											"source": 16
										},
										{
											"begin": 21519,
											"end": 21538,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 21513,
											"end": 21539,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 21505,
											"end": 21511,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 21498,
											"end": 21540,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": 21579,
											"end": 21580,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 21571,
											"end": 21577,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 21567,
											"end": 21581,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 21557,
											"end": 21581,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 21557,
											"end": 21581,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 21626,
											"end": 21628,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 21615,
											"end": 21624,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 21611,
											"end": 21629,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 21598,
											"end": 21629,
											"name": "SWAP5",
											"source": 16
										},
										{
											"begin": 21598,
											"end": 21629,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 21472,
											"end": 21476,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 21469,
											"end": 21470,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 21465,
											"end": 21477,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 21460,
											"end": 21477,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 21460,
											"end": 21477,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 21435,
											"end": 21643,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "782"
										},
										{
											"begin": 21435,
											"end": 21643,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 21435,
											"end": 21643,
											"name": "tag",
											"source": 16,
											"value": "784"
										},
										{
											"begin": 21435,
											"end": 21643,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 21671,
											"end": 21677,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 21662,
											"end": 21669,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 21659,
											"end": 21678,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 21656,
											"end": 21835,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 21656,
											"end": 21835,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "785"
										},
										{
											"begin": 21656,
											"end": 21835,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 21729,
											"end": 21738,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 21724,
											"end": 21727,
											"name": "DUP10",
											"source": 16
										},
										{
											"begin": 21720,
											"end": 21739,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 21714,
											"end": 21740,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 21772,
											"end": 21820,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "786"
										},
										{
											"begin": 21814,
											"end": 21818,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 21806,
											"end": 21812,
											"name": "DUP10",
											"source": 16
										},
										{
											"begin": 21802,
											"end": 21819,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 21791,
											"end": 21800,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 21772,
											"end": 21820,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "525"
										},
										{
											"begin": 21772,
											"end": 21820,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 21772,
											"end": 21820,
											"name": "tag",
											"source": 16,
											"value": "786"
										},
										{
											"begin": 21772,
											"end": 21820,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 21764,
											"end": 21770,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 21757,
											"end": 21821,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": 21679,
											"end": 21835,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 21656,
											"end": 21835,
											"name": "tag",
											"source": 16,
											"value": "785"
										},
										{
											"begin": 21656,
											"end": 21835,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 21881,
											"end": 21882,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 21877,
											"end": 21878,
											"name": "PUSH",
											"source": 16,
											"value": "2"
										},
										{
											"begin": 21869,
											"end": 21875,
											"name": "DUP9",
											"source": 16
										},
										{
											"begin": 21865,
											"end": 21879,
											"name": "MUL",
											"source": 16
										},
										{
											"begin": 21861,
											"end": 21883,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 21855,
											"end": 21859,
											"name": "DUP9",
											"source": 16
										},
										{
											"begin": 21848,
											"end": 21884,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": 21283,
											"end": 21894,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 21283,
											"end": 21894,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 21283,
											"end": 21894,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 21246,
											"end": 22133,
											"name": "tag",
											"source": 16,
											"value": "777"
										},
										{
											"begin": 21246,
											"end": 22133,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 21246,
											"end": 22133,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 20836,
											"end": 22139,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 20836,
											"end": 22139,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 20836,
											"end": 22139,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 20744,
											"end": 22139,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 20744,
											"end": 22139,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 20744,
											"end": 22139,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 22145,
											"end": 22243,
											"name": "tag",
											"source": 16,
											"value": "527"
										},
										{
											"begin": 22145,
											"end": 22243,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 22196,
											"end": 22202,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 22230,
											"end": 22235,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 22224,
											"end": 22236,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 22214,
											"end": 22236,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 22214,
											"end": 22236,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 22145,
											"end": 22243,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 22145,
											"end": 22243,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 22145,
											"end": 22243,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 22145,
											"end": 22243,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 22249,
											"end": 22396,
											"name": "tag",
											"source": 16,
											"value": "528"
										},
										{
											"begin": 22249,
											"end": 22396,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 22350,
											"end": 22361,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 22387,
											"end": 22390,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 22372,
											"end": 22390,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 22372,
											"end": 22390,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 22249,
											"end": 22396,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 22249,
											"end": 22396,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 22249,
											"end": 22396,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 22249,
											"end": 22396,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 22249,
											"end": 22396,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 22402,
											"end": 22788,
											"name": "tag",
											"source": 16,
											"value": "529"
										},
										{
											"begin": 22402,
											"end": 22788,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 22506,
											"end": 22509,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 22534,
											"end": 22572,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "790"
										},
										{
											"begin": 22566,
											"end": 22571,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 22534,
											"end": 22572,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "527"
										},
										{
											"begin": 22534,
											"end": 22572,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 22534,
											"end": 22572,
											"name": "tag",
											"source": 16,
											"value": "790"
										},
										{
											"begin": 22534,
											"end": 22572,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 22588,
											"end": 22676,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "791"
										},
										{
											"begin": 22669,
											"end": 22675,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 22664,
											"end": 22667,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 22588,
											"end": 22676,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "528"
										},
										{
											"begin": 22588,
											"end": 22676,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 22588,
											"end": 22676,
											"name": "tag",
											"source": 16,
											"value": "791"
										},
										{
											"begin": 22588,
											"end": 22676,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 22581,
											"end": 22676,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 22581,
											"end": 22676,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 22685,
											"end": 22750,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "792"
										},
										{
											"begin": 22743,
											"end": 22749,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 22738,
											"end": 22741,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 22731,
											"end": 22735,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 22724,
											"end": 22729,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 22720,
											"end": 22736,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 22685,
											"end": 22750,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "461"
										},
										{
											"begin": 22685,
											"end": 22750,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 22685,
											"end": 22750,
											"name": "tag",
											"source": 16,
											"value": "792"
										},
										{
											"begin": 22685,
											"end": 22750,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 22775,
											"end": 22781,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 22770,
											"end": 22773,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 22766,
											"end": 22782,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 22759,
											"end": 22782,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 22759,
											"end": 22782,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 22510,
											"end": 22788,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 22402,
											"end": 22788,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 22402,
											"end": 22788,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 22402,
											"end": 22788,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 22402,
											"end": 22788,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 22402,
											"end": 22788,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 22794,
											"end": 23065,
											"name": "tag",
											"source": 16,
											"value": "438"
										},
										{
											"begin": 22794,
											"end": 23065,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 22924,
											"end": 22927,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 22946,
											"end": 23039,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "794"
										},
										{
											"begin": 23035,
											"end": 23038,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 23026,
											"end": 23032,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 22946,
											"end": 23039,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "529"
										},
										{
											"begin": 22946,
											"end": 23039,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 22946,
											"end": 23039,
											"name": "tag",
											"source": 16,
											"value": "794"
										},
										{
											"begin": 22946,
											"end": 23039,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 22939,
											"end": 23039,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 22939,
											"end": 23039,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 23056,
											"end": 23059,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 23049,
											"end": 23059,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 23049,
											"end": 23059,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 22794,
											"end": 23065,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 22794,
											"end": 23065,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 22794,
											"end": 23065,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 22794,
											"end": 23065,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 22794,
											"end": 23065,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										}
									],
									".data": {
										"665CE53E9D59C8D2AC0BA934BB50732C0BCD4AA94C46168CB289AFF831BC6A83": "43616d70546f6b656e203c2d3e204554482e2043616d70546f6b656e20697320537461626c65436f696e20746861742072656c6174696e6720455448203c2d3e204a5059"
									}
								}
							},
							"sourceList": [
								"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"contracts/CampToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"Burn_CTK(address,uint256)": "abab4673",
							"ETH_JPY()": "7ce35188",
							"Exchange_ETH_to_CTK()": "331ee739",
							"JPY_ETH()": "18b804a5",
							"UPGRADE_INTERFACE_VERSION()": "ad3cb1cc",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"decimals()": "313ce567",
							"description()": "7284e416",
							"getAward()": "fee50359",
							"get_Latest_EU_Price()": "b7c422f5",
							"get_Latest_JU_Price()": "e6c9566c",
							"initialize(address)": "c4d66de8",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"proxiableUUID()": "52d1902d",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"upgradeToAndCall(address,bytes)": "4f1ef286",
							"version()": "54fd4d50",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"}],\"name\":\"Burn_CTK\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ETH_JPY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"Exchange_ETH_to_CTK\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"JPY_ETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"get_Latest_EU_Price\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"get_Latest_JU_Price\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CampToken.sol\":\"CampToken\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0xfe4e8bb4861bb3860ba890ab91a3b818ec66e5a8f544fb608cfcb73f433472cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://644cff84052e1e82b5bb502b2a46e8f142a62b0db4cd9b38200798ba8373c6f7\",\"dweb:/ipfs/QmTa99QHrJBn3SXDizquPBUiTxVCNKQrHgaWJhuds5Sce2\"]},\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x3f13b947637c4969c0644cab4ef399cdc4b67f101463b8775c5a43b118558e53\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6683e6ade6985d394d32baaef5eea0d8b9ff0b3eca86ae413d6cdde114a9930\",\"dweb:/ipfs/QmdBE8T1BTddZxpdECMsb3KiCFyjNWmxcCddYrWFTXmWPj\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0x9a1766b1921bf91b3e61eb53c7a6e70725254befd4bdcbbcd3af40bd9f66856f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://29bf2fa41a172086a665c9738377b93655aa4b1ffda9fe839c8bdf646f185040\",\"dweb:/ipfs/QmeB21qDuo8WPQSrqXJbQmWHKsdeocGNSUWLhCwniVejrt\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":{\"keccak256\":\"0xe74dd150d031e8ecf9755893a2aae02dec954158140424f11c28ff689a48492f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://554e0934aecff6725e10d4aeb2e70ff214384b68782b1ba9f9322a0d16105a2f\",\"dweb:/ipfs/QmVvmHc7xPftEkWvJRNAqv7mXihKLEAVXpiebG7RT5rhMW\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef381843676aec64421200ee85eaa0b1356a35f28b9fc67e746a6bbb832077d9\",\"dweb:/ipfs/QmY8aorMYA2TeTCnu6ejDjzb4rW4t7TCtW4GZ6LoxTFm7v\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://547d21aa17f4f3f1a1a7edf7167beff8dd9496a0348d5588f15cc8a4b29d052a\",\"dweb:/ipfs/QmT16JtRQSWNpLo9W23jr6CzaMuTAcQcjJJcdRd8HLJ6cE\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"contracts/CampToken.sol\":{\"keccak256\":\"0x461873a8b3cd224c352587b4c2adeb7bca348352cbb3633935ee7fc5aa73f0eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7f906be680bba6f269c2c26ad6fa28355d8a80da4d2f829a3d16909ec7d693ab\",\"dweb:/ipfs/Qmbkf38X2M3ynV4TXFvNvN8ZLXZEnMiWQ4Mu8Eh1dKAsdE\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 2350,
								"contract": "contracts/CampToken.sol:CampToken",
								"label": "ETH_USD",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(AggregatorV3Interface)45"
							},
							{
								"astId": 2353,
								"contract": "contracts/CampToken.sol:CampToken",
								"label": "USD_JPY",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(AggregatorV3Interface)45"
							},
							{
								"astId": 2357,
								"contract": "contracts/CampToken.sol:CampToken",
								"label": "token_balances",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(AggregatorV3Interface)45": {
								"encoding": "inplace",
								"label": "contract AggregatorV3Interface",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol": {
				"ast": {
					"absolutePath": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
					"exportedSymbols": {
						"AggregatorV3Interface": [
							45
						]
					},
					"id": 46,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "AggregatorV3Interface",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 45,
							"linearizedBaseContracts": [
								45
							],
							"name": "AggregatorV3Interface",
							"nameLocation": "67:21:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "313ce567",
									"id": 6,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "102:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "110:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 6,
												"src": "136:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 3,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "136:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "135:7:0"
									},
									"scope": 45,
									"src": "93:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7284e416",
									"id": 11,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "description",
									"nameLocation": "156:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "167:2:0"
									},
									"returnParameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "193:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 8,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "193:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "192:15:0"
									},
									"scope": 45,
									"src": "147:61:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "54fd4d50",
									"id": 16,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "version",
									"nameLocation": "221:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "228:2:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "254:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 13,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "254:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "253:9:0"
									},
									"scope": 45,
									"src": "212:51:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "9a6fc8f5",
									"id": 31,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoundData",
									"nameLocation": "276:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 18,
												"mutability": "mutable",
												"name": "_roundId",
												"nameLocation": "301:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "294:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 17,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "294:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "288:25:0"
									},
									"returnParameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "344:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "337:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 20,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "337:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "answer",
												"nameLocation": "360:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "353:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 22,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "353:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 25,
												"mutability": "mutable",
												"name": "startedAt",
												"nameLocation": "376:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "368:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 24,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "368:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "updatedAt",
												"nameLocation": "395:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "387:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 26,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "387:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "answeredInRound",
												"nameLocation": "413:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "406:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 28,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "406:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "336:93:0"
									},
									"scope": 45,
									"src": "267:163:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "feaf968c",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "latestRoundData",
									"nameLocation": "443:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "458:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "503:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "496:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 33,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "496:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 36,
												"mutability": "mutable",
												"name": "answer",
												"nameLocation": "519:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "512:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 35,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "512:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "startedAt",
												"nameLocation": "535:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "527:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 37,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "527:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 40,
												"mutability": "mutable",
												"name": "updatedAt",
												"nameLocation": "554:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "546:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 39,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "546:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "answeredInRound",
												"nameLocation": "572:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "565:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 41,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "565:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "495:93:0"
									},
									"scope": 45,
									"src": "434:155:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 46,
							"src": "57:534:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:560:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							1401
						],
						"Initializable": [
							494
						],
						"OwnableUpgradeable": [
							240
						]
					},
					"id": 241,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 47,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
							"file": "../utils/ContextUpgradeable.sol",
							"id": 49,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 241,
							"sourceUnit": 1402,
							"src": "128:67:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 48,
										"name": "ContextUpgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1401,
										"src": "136:18:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 51,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 241,
							"sourceUnit": 495,
							"src": "196:63:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 50,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 494,
										"src": "204:13:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 53,
										"name": "Initializable",
										"nameLocations": [
											"789:13:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 494,
										"src": "789:13:1"
									},
									"id": 54,
									"nodeType": "InheritanceSpecifier",
									"src": "789:13:1"
								},
								{
									"baseName": {
										"id": 55,
										"name": "ContextUpgradeable",
										"nameLocations": [
											"804:18:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1401,
										"src": "804:18:1"
									},
									"id": 56,
									"nodeType": "InheritanceSpecifier",
									"src": "804:18:1"
								}
							],
							"canonicalName": "OwnableUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 52,
								"nodeType": "StructuredDocumentation",
								"src": "261:487:1",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 240,
							"linearizedBaseContracts": [
								240,
								1401,
								494
							],
							"name": "OwnableUpgradeable",
							"nameLocation": "767:18:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "OwnableUpgradeable.OwnableStorage",
									"documentation": {
										"id": 57,
										"nodeType": "StructuredDocumentation",
										"src": "829:65:1",
										"text": "@custom:storage-location erc7201:openzeppelin.storage.Ownable"
									},
									"id": 60,
									"members": [
										{
											"constant": false,
											"id": 59,
											"mutability": "mutable",
											"name": "_owner",
											"nameLocation": "939:6:1",
											"nodeType": "VariableDeclaration",
											"scope": 60,
											"src": "931:14:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 58,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "931:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "OwnableStorage",
									"nameLocation": "906:14:1",
									"nodeType": "StructDefinition",
									"scope": 240,
									"src": "899:53:1",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 63,
									"mutability": "constant",
									"name": "OwnableStorageLocation",
									"nameLocation": "1094:22:1",
									"nodeType": "VariableDeclaration",
									"scope": 240,
									"src": "1069:116:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 61,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1069:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307839303136643039643732643430666461653266643863656163366236323334633737303632313466643339633163643165363039613035323863313939333030",
										"id": 62,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1119:66:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_65173360639460082030725920392146925864023520599682862633725751242436743107328_by_1",
											"typeString": "int_const 6517...(69 digits omitted)...7328"
										},
										"value": "0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 70,
										"nodeType": "Block",
										"src": "1270:81:1",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1289:56:1",
													"nodeType": "YulBlock",
													"src": "1289:56:1",
													"statements": [
														{
															"nativeSrc": "1303:32:1",
															"nodeType": "YulAssignment",
															"src": "1303:32:1",
															"value": {
																"name": "OwnableStorageLocation",
																"nativeSrc": "1313:22:1",
																"nodeType": "YulIdentifier",
																"src": "1313:22:1"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "1303:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1303:6:1"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 67,
														"isOffset": false,
														"isSlot": true,
														"src": "1303:6:1",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 63,
														"isOffset": false,
														"isSlot": false,
														"src": "1313:22:1",
														"valueSize": 1
													}
												],
												"id": 69,
												"nodeType": "InlineAssembly",
												"src": "1280:65:1"
											}
										]
									},
									"id": 71,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getOwnableStorage",
									"nameLocation": "1201:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1219:2:1"
									},
									"returnParameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "1267:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "1244:24:1",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_OwnableStorage_$60_storage_ptr",
													"typeString": "struct OwnableUpgradeable.OwnableStorage"
												},
												"typeName": {
													"id": 66,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 65,
														"name": "OwnableStorage",
														"nameLocations": [
															"1244:14:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 60,
														"src": "1244:14:1"
													},
													"referencedDeclaration": 60,
													"src": "1244:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnableStorage_$60_storage_ptr",
														"typeString": "struct OwnableUpgradeable.OwnableStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1243:26:1"
									},
									"scope": 240,
									"src": "1192:159:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 72,
										"nodeType": "StructuredDocumentation",
										"src": "1357:85:1",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 76,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "1453:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1488:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "1480:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1480:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1479:17:1"
									},
									"src": "1447:50:1"
								},
								{
									"documentation": {
										"id": 77,
										"nodeType": "StructuredDocumentation",
										"src": "1503:82:1",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 81,
									"name": "OwnableInvalidOwner",
									"nameLocation": "1596:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 79,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1624:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "1616:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 78,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1616:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1615:15:1"
									},
									"src": "1590:41:1"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 87,
									"name": "OwnershipTransferred",
									"nameLocation": "1643:20:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1680:13:1",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "1664:29:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 82,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1664:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 85,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1711:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "1695:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 84,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1695:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1663:57:1"
									},
									"src": "1637:84:1"
								},
								{
									"body": {
										"id": 99,
										"nodeType": "Block",
										"src": "1919:55:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 96,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 90,
															"src": "1954:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 95,
														"name": "__Ownable_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 127,
														"src": "1929:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 97,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1929:38:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 98,
												"nodeType": "ExpressionStatement",
												"src": "1929:38:1"
											}
										]
									},
									"documentation": {
										"id": 88,
										"nodeType": "StructuredDocumentation",
										"src": "1727:115:1",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 100,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 93,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 92,
												"name": "onlyInitializing",
												"nameLocations": [
													"1902:16:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 403,
												"src": "1902:16:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "1902:16:1"
										}
									],
									"name": "__Ownable_init",
									"nameLocation": "1856:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 90,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1879:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 100,
												"src": "1871:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 89,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1871:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1870:22:1"
									},
									"returnParameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1919:0:1"
									},
									"scope": 240,
									"src": "1847:127:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 126,
										"nodeType": "Block",
										"src": "2062:153:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 107,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 102,
														"src": "2076:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 110,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 109,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2092:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 108,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2092:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 111,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2092:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2076:26:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 121,
												"nodeType": "IfStatement",
												"src": "2072:95:1",
												"trueBody": {
													"id": 120,
													"nodeType": "Block",
													"src": "2104:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 116,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2153:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 115,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2145:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 114,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2145:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 117,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2145:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 113,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 81,
																	"src": "2125:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 118,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2125:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 119,
															"nodeType": "RevertStatement",
															"src": "2118:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 123,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 102,
															"src": "2195:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 122,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 239,
														"src": "2176:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 124,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2176:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 125,
												"nodeType": "ExpressionStatement",
												"src": "2176:32:1"
											}
										]
									},
									"id": 127,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 105,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 104,
												"name": "onlyInitializing",
												"nameLocations": [
													"2045:16:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 403,
												"src": "2045:16:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "2045:16:1"
										}
									],
									"name": "__Ownable_init_unchained",
									"nameLocation": "1989:24:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 102,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "2022:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 127,
												"src": "2014:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 101,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2014:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2013:22:1"
									},
									"returnParameters": {
										"id": 106,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2062:0:1"
									},
									"scope": 240,
									"src": "1980:235:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 134,
										"nodeType": "Block",
										"src": "2324:41:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 130,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 168,
														"src": "2334:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 131,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2334:13:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 132,
												"nodeType": "ExpressionStatement",
												"src": "2334:13:1"
											},
											{
												"id": 133,
												"nodeType": "PlaceholderStatement",
												"src": "2357:1:1"
											}
										]
									},
									"documentation": {
										"id": 128,
										"nodeType": "StructuredDocumentation",
										"src": "2221:77:1",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 135,
									"name": "onlyOwner",
									"nameLocation": "2312:9:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 129,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2321:2:1"
									},
									"src": "2303:62:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 150,
										"nodeType": "Block",
										"src": "2496:89:1",
										"statements": [
											{
												"assignments": [
													143
												],
												"declarations": [
													{
														"constant": false,
														"id": 143,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "2529:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 150,
														"src": "2506:24:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$60_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage"
														},
														"typeName": {
															"id": 142,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 141,
																"name": "OwnableStorage",
																"nameLocations": [
																	"2506:14:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 60,
																"src": "2506:14:1"
															},
															"referencedDeclaration": 60,
															"src": "2506:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnableStorage_$60_storage_ptr",
																"typeString": "struct OwnableUpgradeable.OwnableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 146,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 144,
														"name": "_getOwnableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 71,
														"src": "2533:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$60_storage_ptr_$",
															"typeString": "function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"
														}
													},
													"id": 145,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2533:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnableStorage_$60_storage_ptr",
														"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2506:47:1"
											},
											{
												"expression": {
													"expression": {
														"id": 147,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 143,
														"src": "2570:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$60_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
														}
													},
													"id": 148,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2572:6:1",
													"memberName": "_owner",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 59,
													"src": "2570:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 140,
												"id": 149,
												"nodeType": "Return",
												"src": "2563:15:1"
											}
										]
									},
									"documentation": {
										"id": 136,
										"nodeType": "StructuredDocumentation",
										"src": "2371:65:1",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 151,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "2450:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 137,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2455:2:1"
									},
									"returnParameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 151,
												"src": "2487:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 138,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2487:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2486:9:1"
									},
									"scope": 240,
									"src": "2441:144:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 167,
										"nodeType": "Block",
										"src": "2703:117:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 155,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 151,
															"src": "2717:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 156,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2717:7:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 157,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1383,
															"src": "2728:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 158,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2728:12:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2717:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 166,
												"nodeType": "IfStatement",
												"src": "2713:101:1",
												"trueBody": {
													"id": 165,
													"nodeType": "Block",
													"src": "2742:72:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 161,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1383,
																			"src": "2790:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 162,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2790:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 160,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 76,
																	"src": "2763:26:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 163,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2763:40:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 164,
															"nodeType": "RevertStatement",
															"src": "2756:47:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 152,
										"nodeType": "StructuredDocumentation",
										"src": "2591:62:1",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 168,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "2667:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2678:2:1"
									},
									"returnParameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2703:0:1"
									},
									"scope": 240,
									"src": "2658:162:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 181,
										"nodeType": "Block",
										"src": "3209:47:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 177,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3246:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 176,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3238:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 175,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3238:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 178,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3238:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 174,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 239,
														"src": "3219:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 179,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3219:30:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 180,
												"nodeType": "ExpressionStatement",
												"src": "3219:30:1"
											}
										]
									},
									"documentation": {
										"id": 169,
										"nodeType": "StructuredDocumentation",
										"src": "2826:324:1",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 182,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 172,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 171,
												"name": "onlyOwner",
												"nameLocations": [
													"3199:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 135,
												"src": "3199:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "3199:9:1"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "3164:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 170,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3181:2:1"
									},
									"returnParameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3209:0:1"
									},
									"scope": 240,
									"src": "3155:101:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 209,
										"nodeType": "Block",
										"src": "3475:145:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 195,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 190,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 185,
														"src": "3489:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 193,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3509:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 192,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3501:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 191,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3501:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 194,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3501:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3489:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 204,
												"nodeType": "IfStatement",
												"src": "3485:91:1",
												"trueBody": {
													"id": 203,
													"nodeType": "Block",
													"src": "3513:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 199,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3562:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 198,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3554:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 197,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3554:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 200,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3554:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 196,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 81,
																	"src": "3534:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 201,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3534:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 202,
															"nodeType": "RevertStatement",
															"src": "3527:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 206,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 185,
															"src": "3604:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 205,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 239,
														"src": "3585:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 207,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3585:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 208,
												"nodeType": "ExpressionStatement",
												"src": "3585:28:1"
											}
										]
									},
									"documentation": {
										"id": 183,
										"nodeType": "StructuredDocumentation",
										"src": "3262:138:1",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 210,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 188,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 187,
												"name": "onlyOwner",
												"nameLocations": [
													"3465:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 135,
												"src": "3465:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "3465:9:1"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "3414:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "3440:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "3432:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3432:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3431:18:1"
									},
									"returnParameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3475:0:1"
									},
									"scope": 240,
									"src": "3405:215:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 238,
										"nodeType": "Block",
										"src": "3837:185:1",
										"statements": [
											{
												"assignments": [
													218
												],
												"declarations": [
													{
														"constant": false,
														"id": 218,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "3870:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 238,
														"src": "3847:24:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$60_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage"
														},
														"typeName": {
															"id": 217,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 216,
																"name": "OwnableStorage",
																"nameLocations": [
																	"3847:14:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 60,
																"src": "3847:14:1"
															},
															"referencedDeclaration": 60,
															"src": "3847:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnableStorage_$60_storage_ptr",
																"typeString": "struct OwnableUpgradeable.OwnableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 221,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 219,
														"name": "_getOwnableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 71,
														"src": "3874:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$60_storage_ptr_$",
															"typeString": "function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"
														}
													},
													"id": 220,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3874:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnableStorage_$60_storage_ptr",
														"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3847:47:1"
											},
											{
												"assignments": [
													223
												],
												"declarations": [
													{
														"constant": false,
														"id": 223,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "3912:8:1",
														"nodeType": "VariableDeclaration",
														"scope": 238,
														"src": "3904:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 222,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3904:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 226,
												"initialValue": {
													"expression": {
														"id": 224,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 218,
														"src": "3923:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$60_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
														}
													},
													"id": 225,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3925:6:1",
													"memberName": "_owner",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 59,
													"src": "3923:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3904:27:1"
											},
											{
												"expression": {
													"id": 231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 227,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 218,
															"src": "3941:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnableStorage_$60_storage_ptr",
																"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
															}
														},
														"id": 229,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3943:6:1",
														"memberName": "_owner",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 59,
														"src": "3941:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 230,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 213,
														"src": "3952:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3941:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 232,
												"nodeType": "ExpressionStatement",
												"src": "3941:19:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 234,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 223,
															"src": "3996:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 235,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 213,
															"src": "4006:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 233,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 87,
														"src": "3975:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 236,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3975:40:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 237,
												"nodeType": "EmitStatement",
												"src": "3970:45:1"
											}
										]
									},
									"documentation": {
										"id": 211,
										"nodeType": "StructuredDocumentation",
										"src": "3626:143:1",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 239,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "3783:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "3810:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "3802:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 212,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3802:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3801:18:1"
									},
									"returnParameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3837:0:1"
									},
									"scope": 240,
									"src": "3774:248:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 241,
							"src": "749:3275:1",
							"usedErrors": [
								76,
								81,
								257,
								260
							],
							"usedEvents": [
								87,
								265
							]
						}
					],
					"src": "102:3923:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
					"exportedSymbols": {
						"Initializable": [
							494
						]
					},
					"id": 495,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 242,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "113:24:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Initializable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 243,
								"nodeType": "StructuredDocumentation",
								"src": "139:2209:2",
								"text": " @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="
							},
							"fullyImplemented": true,
							"id": 494,
							"linearizedBaseContracts": [
								494
							],
							"name": "Initializable",
							"nameLocation": "2367:13:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Initializable.InitializableStorage",
									"documentation": {
										"id": 244,
										"nodeType": "StructuredDocumentation",
										"src": "2387:293:2",
										"text": " @dev Storage of the initializable contract.\n It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n when using with upgradeable contracts.\n @custom:storage-location erc7201:openzeppelin.storage.Initializable"
									},
									"id": 251,
									"members": [
										{
											"constant": false,
											"id": 247,
											"mutability": "mutable",
											"name": "_initialized",
											"nameLocation": "2820:12:2",
											"nodeType": "VariableDeclaration",
											"scope": 251,
											"src": "2813:19:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 246,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "2813:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 250,
											"mutability": "mutable",
											"name": "_initializing",
											"nameLocation": "2955:13:2",
											"nodeType": "VariableDeclaration",
											"scope": 251,
											"src": "2950:18:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 249,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2950:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "InitializableStorage",
									"nameLocation": "2692:20:2",
									"nodeType": "StructDefinition",
									"scope": 494,
									"src": "2685:290:2",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 254,
									"mutability": "constant",
									"name": "INITIALIZABLE_STORAGE",
									"nameLocation": "3123:21:2",
									"nodeType": "VariableDeclaration",
									"scope": 494,
									"src": "3098:115:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 252,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "3098:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307866306335376531363834306466303430663135303838646332663831666533393163333932336265633733653233613936363265666339633232396336613030",
										"id": 253,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3147:66:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_108904022758810753673719992590105913556127789646572562039383141376366747609600_by_1",
											"typeString": "int_const 1089...(70 digits omitted)...9600"
										},
										"value": "0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "3220:60:2",
										"text": " @dev The contract is already initialized."
									},
									"errorSelector": "f92ee8a9",
									"id": 257,
									"name": "InvalidInitialization",
									"nameLocation": "3291:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 256,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3312:2:2"
									},
									"src": "3285:30:2"
								},
								{
									"documentation": {
										"id": 258,
										"nodeType": "StructuredDocumentation",
										"src": "3321:57:2",
										"text": " @dev The contract is not initializing."
									},
									"errorSelector": "d7e6bcf8",
									"id": 260,
									"name": "NotInitializing",
									"nameLocation": "3389:15:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 259,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3404:2:2"
									},
									"src": "3383:24:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 261,
										"nodeType": "StructuredDocumentation",
										"src": "3413:90:2",
										"text": " @dev Triggered when the contract has been initialized or reinitialized."
									},
									"eventSelector": "c7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2",
									"id": 265,
									"name": "Initialized",
									"nameLocation": "3514:11:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 263,
												"indexed": false,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "3533:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "3526:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 262,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3526:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3525:16:2"
									},
									"src": "3508:34:2"
								},
								{
									"body": {
										"id": 347,
										"nodeType": "Block",
										"src": "4092:1081:2",
										"statements": [
											{
												"assignments": [
													270
												],
												"declarations": [
													{
														"constant": false,
														"id": 270,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "4187:1:2",
														"nodeType": "VariableDeclaration",
														"scope": 347,
														"src": "4158:30:2",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$251_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 269,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 268,
																"name": "InitializableStorage",
																"nameLocations": [
																	"4158:20:2"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 251,
																"src": "4158:20:2"
															},
															"referencedDeclaration": 251,
															"src": "4158:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$251_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 273,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 271,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 493,
														"src": "4191:24:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$251_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 272,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4191:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$251_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4158:59:2"
											},
											{
												"assignments": [
													275
												],
												"declarations": [
													{
														"constant": false,
														"id": 275,
														"mutability": "mutable",
														"name": "isTopLevelCall",
														"nameLocation": "4284:14:2",
														"nodeType": "VariableDeclaration",
														"scope": 347,
														"src": "4279:19:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 274,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4279:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 279,
												"initialValue": {
													"id": 278,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4301:16:2",
													"subExpression": {
														"expression": {
															"id": 276,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 270,
															"src": "4302:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$251_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 277,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4304:13:2",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 250,
														"src": "4302:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4279:38:2"
											},
											{
												"assignments": [
													281
												],
												"declarations": [
													{
														"constant": false,
														"id": 281,
														"mutability": "mutable",
														"name": "initialized",
														"nameLocation": "4334:11:2",
														"nodeType": "VariableDeclaration",
														"scope": 347,
														"src": "4327:18:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"typeName": {
															"id": 280,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "4327:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 284,
												"initialValue": {
													"expression": {
														"id": 282,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 270,
														"src": "4348:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$251_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 283,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4350:12:2",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 247,
													"src": "4348:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4327:35:2"
											},
											{
												"assignments": [
													286
												],
												"declarations": [
													{
														"constant": false,
														"id": 286,
														"mutability": "mutable",
														"name": "initialSetup",
														"nameLocation": "4711:12:2",
														"nodeType": "VariableDeclaration",
														"scope": 347,
														"src": "4706:17:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 285,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4706:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 292,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 289,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 287,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 281,
															"src": "4726:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 288,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4741:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4726:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 290,
														"name": "isTopLevelCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 275,
														"src": "4746:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4726:34:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4706:54:2"
											},
											{
												"assignments": [
													294
												],
												"declarations": [
													{
														"constant": false,
														"id": 294,
														"mutability": "mutable",
														"name": "construction",
														"nameLocation": "4775:12:2",
														"nodeType": "VariableDeclaration",
														"scope": 347,
														"src": "4770:17:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 293,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4770:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 307,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 306,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 297,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 295,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 281,
															"src": "4790:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "31",
															"id": 296,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4805:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "4790:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 305,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 300,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4818:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Initializable_$494",
																				"typeString": "contract Initializable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Initializable_$494",
																				"typeString": "contract Initializable"
																			}
																		],
																		"id": 299,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4810:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 298,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4810:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 301,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4810:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 302,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4824:4:2",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "4810:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 303,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4829:6:2",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4810:25:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 304,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4839:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4810:30:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4790:50:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4770:70:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 312,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 309,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4855:13:2",
														"subExpression": {
															"id": 308,
															"name": "initialSetup",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 286,
															"src": "4856:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 311,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4872:13:2",
														"subExpression": {
															"id": 310,
															"name": "construction",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 294,
															"src": "4873:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4855:30:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 317,
												"nodeType": "IfStatement",
												"src": "4851:91:2",
												"trueBody": {
													"id": 316,
													"nodeType": "Block",
													"src": "4887:55:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 313,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 257,
																	"src": "4908:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 314,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4908:23:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 315,
															"nodeType": "RevertStatement",
															"src": "4901:30:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 318,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 270,
															"src": "4951:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$251_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 320,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4953:12:2",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 247,
														"src": "4951:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 321,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4968:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "4951:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 323,
												"nodeType": "ExpressionStatement",
												"src": "4951:18:2"
											},
											{
												"condition": {
													"id": 324,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 275,
													"src": "4983:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 332,
												"nodeType": "IfStatement",
												"src": "4979:67:2",
												"trueBody": {
													"id": 331,
													"nodeType": "Block",
													"src": "4999:47:2",
													"statements": [
														{
															"expression": {
																"id": 329,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 325,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 270,
																		"src": "5013:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$251_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 327,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5015:13:2",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 250,
																	"src": "5013:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 328,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5031:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "5013:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 330,
															"nodeType": "ExpressionStatement",
															"src": "5013:22:2"
														}
													]
												}
											},
											{
												"id": 333,
												"nodeType": "PlaceholderStatement",
												"src": "5055:1:2"
											},
											{
												"condition": {
													"id": 334,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 275,
													"src": "5070:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 346,
												"nodeType": "IfStatement",
												"src": "5066:101:2",
												"trueBody": {
													"id": 345,
													"nodeType": "Block",
													"src": "5086:81:2",
													"statements": [
														{
															"expression": {
																"id": 339,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 335,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 270,
																		"src": "5100:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$251_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 337,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5102:13:2",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 250,
																	"src": "5100:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 338,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5118:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "5100:23:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 340,
															"nodeType": "ExpressionStatement",
															"src": "5100:23:2"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"hexValue": "31",
																		"id": 342,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5154:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		}
																	],
																	"id": 341,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 265,
																	"src": "5142:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 343,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5142:14:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 344,
															"nodeType": "EmitStatement",
															"src": "5137:19:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 266,
										"nodeType": "StructuredDocumentation",
										"src": "3548:516:2",
										"text": " @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n production.\n Emits an {Initialized} event."
									},
									"id": 348,
									"name": "initializer",
									"nameLocation": "4078:11:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4089:2:2"
									},
									"src": "4069:1104:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 394,
										"nodeType": "Block",
										"src": "6291:392:2",
										"statements": [
											{
												"assignments": [
													355
												],
												"declarations": [
													{
														"constant": false,
														"id": 355,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "6386:1:2",
														"nodeType": "VariableDeclaration",
														"scope": 394,
														"src": "6357:30:2",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$251_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 354,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 353,
																"name": "InitializableStorage",
																"nameLocations": [
																	"6357:20:2"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 251,
																"src": "6357:20:2"
															},
															"referencedDeclaration": 251,
															"src": "6357:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$251_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 358,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 356,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 493,
														"src": "6390:24:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$251_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 357,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6390:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$251_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6357:59:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 365,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 359,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 355,
															"src": "6431:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$251_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 360,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6433:13:2",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 250,
														"src": "6431:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 364,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 361,
																"name": "$",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 355,
																"src": "6450:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_InitializableStorage_$251_storage_ptr",
																	"typeString": "struct Initializable.InitializableStorage storage pointer"
																}
															},
															"id": 362,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6452:12:2",
															"memberName": "_initialized",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 247,
															"src": "6450:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"id": 363,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "6468:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"src": "6450:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6431:44:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 370,
												"nodeType": "IfStatement",
												"src": "6427:105:2",
												"trueBody": {
													"id": 369,
													"nodeType": "Block",
													"src": "6477:55:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 366,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 257,
																	"src": "6498:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 367,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6498:23:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 368,
															"nodeType": "RevertStatement",
															"src": "6491:30:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 375,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 371,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 355,
															"src": "6541:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$251_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 373,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6543:12:2",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 247,
														"src": "6541:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 374,
														"name": "version",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 351,
														"src": "6558:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "6541:24:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 376,
												"nodeType": "ExpressionStatement",
												"src": "6541:24:2"
											},
											{
												"expression": {
													"id": 381,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 377,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 355,
															"src": "6575:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$251_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 379,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6577:13:2",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 250,
														"src": "6575:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 380,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6593:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "6575:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 382,
												"nodeType": "ExpressionStatement",
												"src": "6575:22:2"
											},
											{
												"id": 383,
												"nodeType": "PlaceholderStatement",
												"src": "6607:1:2"
											},
											{
												"expression": {
													"id": 388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 384,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 355,
															"src": "6618:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$251_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 386,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6620:13:2",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 250,
														"src": "6618:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 387,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6636:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "6618:23:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 389,
												"nodeType": "ExpressionStatement",
												"src": "6618:23:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 391,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "6668:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"id": 390,
														"name": "Initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 265,
														"src": "6656:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
															"typeString": "function (uint64)"
														}
													},
													"id": 392,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6656:20:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 393,
												"nodeType": "EmitStatement",
												"src": "6651:25:2"
											}
										]
									},
									"documentation": {
										"id": 349,
										"nodeType": "StructuredDocumentation",
										"src": "5179:1068:2",
										"text": " @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n Emits an {Initialized} event."
									},
									"id": 395,
									"name": "reinitializer",
									"nameLocation": "6261:13:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "6282:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "6275:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 350,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "6275:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6274:16:2"
									},
									"src": "6252:431:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 402,
										"nodeType": "Block",
										"src": "6921:48:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 398,
														"name": "_checkInitializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 416,
														"src": "6931:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 399,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6931:20:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 400,
												"nodeType": "ExpressionStatement",
												"src": "6931:20:2"
											},
											{
												"id": 401,
												"nodeType": "PlaceholderStatement",
												"src": "6961:1:2"
											}
										]
									},
									"documentation": {
										"id": 396,
										"nodeType": "StructuredDocumentation",
										"src": "6689:199:2",
										"text": " @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."
									},
									"id": 403,
									"name": "onlyInitializing",
									"nameLocation": "6902:16:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 397,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6918:2:2"
									},
									"src": "6893:76:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 415,
										"nodeType": "Block",
										"src": "7136:89:2",
										"statements": [
											{
												"condition": {
													"id": 409,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7150:18:2",
													"subExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 407,
															"name": "_isInitializing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 484,
															"src": "7151:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																"typeString": "function () view returns (bool)"
															}
														},
														"id": 408,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7151:17:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 414,
												"nodeType": "IfStatement",
												"src": "7146:73:2",
												"trueBody": {
													"id": 413,
													"nodeType": "Block",
													"src": "7170:49:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 410,
																	"name": "NotInitializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 260,
																	"src": "7191:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 411,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7191:17:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 412,
															"nodeType": "RevertStatement",
															"src": "7184:24:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 404,
										"nodeType": "StructuredDocumentation",
										"src": "6975:104:2",
										"text": " @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}."
									},
									"id": 416,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkInitializing",
									"nameLocation": "7093:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 405,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7111:2:2"
									},
									"returnParameters": {
										"id": 406,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7136:0:2"
									},
									"scope": 494,
									"src": "7084:141:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 461,
										"nodeType": "Block",
										"src": "7760:373:2",
										"statements": [
											{
												"assignments": [
													422
												],
												"declarations": [
													{
														"constant": false,
														"id": 422,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "7855:1:2",
														"nodeType": "VariableDeclaration",
														"scope": 461,
														"src": "7826:30:2",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$251_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 421,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 420,
																"name": "InitializableStorage",
																"nameLocations": [
																	"7826:20:2"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 251,
																"src": "7826:20:2"
															},
															"referencedDeclaration": 251,
															"src": "7826:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$251_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 425,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 423,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 493,
														"src": "7859:24:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$251_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 424,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7859:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$251_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7826:59:2"
											},
											{
												"condition": {
													"expression": {
														"id": 426,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 422,
														"src": "7900:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$251_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 427,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "7902:13:2",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 250,
													"src": "7900:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 432,
												"nodeType": "IfStatement",
												"src": "7896:76:2",
												"trueBody": {
													"id": 431,
													"nodeType": "Block",
													"src": "7917:55:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 428,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 257,
																	"src": "7938:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 429,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7938:23:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 430,
															"nodeType": "RevertStatement",
															"src": "7931:30:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													},
													"id": 440,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 433,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 422,
															"src": "7985:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$251_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 434,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7987:12:2",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 247,
														"src": "7985:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 437,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8008:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 436,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "8008:6:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	}
																],
																"id": 435,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "8003:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 438,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8003:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint64",
																"typeString": "type(uint64)"
															}
														},
														"id": 439,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "8016:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "8003:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "7985:34:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 460,
												"nodeType": "IfStatement",
												"src": "7981:146:2",
												"trueBody": {
													"id": 459,
													"nodeType": "Block",
													"src": "8021:106:2",
													"statements": [
														{
															"expression": {
																"id": 449,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 441,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 422,
																		"src": "8035:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$251_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 443,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "8037:12:2",
																	"memberName": "_initialized",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 247,
																	"src": "8035:14:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 446,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8057:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				},
																				"typeName": {
																					"id": 445,
																					"name": "uint64",
																					"nodeType": "ElementaryTypeName",
																					"src": "8057:6:2",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				}
																			],
																			"id": 444,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "8052:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 447,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8052:12:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_uint64",
																			"typeString": "type(uint64)"
																		}
																	},
																	"id": 448,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "8065:3:2",
																	"memberName": "max",
																	"nodeType": "MemberAccess",
																	"src": "8052:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"src": "8035:33:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"id": 450,
															"nodeType": "ExpressionStatement",
															"src": "8035:33:2"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 454,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "8104:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					},
																					"typeName": {
																						"id": 453,
																						"name": "uint64",
																						"nodeType": "ElementaryTypeName",
																						"src": "8104:6:2",
																						"typeDescriptions": {}
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					}
																				],
																				"id": 452,
																				"name": "type",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967269,
																				"src": "8099:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 455,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8099:12:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_meta_type_t_uint64",
																				"typeString": "type(uint64)"
																			}
																		},
																		"id": 456,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "8112:3:2",
																		"memberName": "max",
																		"nodeType": "MemberAccess",
																		"src": "8099:16:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	],
																	"id": 451,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 265,
																	"src": "8087:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 457,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8087:29:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 458,
															"nodeType": "EmitStatement",
															"src": "8082:34:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 417,
										"nodeType": "StructuredDocumentation",
										"src": "7231:475:2",
										"text": " @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."
									},
									"id": 462,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_disableInitializers",
									"nameLocation": "7720:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7740:2:2"
									},
									"returnParameters": {
										"id": 419,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7760:0:2"
									},
									"scope": 494,
									"src": "7711:422:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 472,
										"nodeType": "Block",
										"src": "8308:63:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 468,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 493,
															"src": "8325:24:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$251_storage_ptr_$",
																"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
															}
														},
														"id": 469,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8325:26:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$251_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 470,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8352:12:2",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 247,
													"src": "8325:39:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 467,
												"id": 471,
												"nodeType": "Return",
												"src": "8318:46:2"
											}
										]
									},
									"documentation": {
										"id": 463,
										"nodeType": "StructuredDocumentation",
										"src": "8139:99:2",
										"text": " @dev Returns the highest version that has been initialized. See {reinitializer}."
									},
									"id": 473,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializedVersion",
									"nameLocation": "8252:22:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8274:2:2"
									},
									"returnParameters": {
										"id": 467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 466,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 473,
												"src": "8300:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 465,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "8300:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8299:8:2"
									},
									"scope": 494,
									"src": "8243:128:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 483,
										"nodeType": "Block",
										"src": "8543:64:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 479,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 493,
															"src": "8560:24:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$251_storage_ptr_$",
																"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
															}
														},
														"id": 480,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8560:26:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$251_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 481,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8587:13:2",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 250,
													"src": "8560:40:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 478,
												"id": 482,
												"nodeType": "Return",
												"src": "8553:47:2"
											}
										]
									},
									"documentation": {
										"id": 474,
										"nodeType": "StructuredDocumentation",
										"src": "8377:105:2",
										"text": " @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."
									},
									"id": 484,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isInitializing",
									"nameLocation": "8496:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 475,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8511:2:2"
									},
									"returnParameters": {
										"id": 478,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 477,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "8537:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 476,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8537:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8536:6:2"
									},
									"scope": 494,
									"src": "8487:120:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 492,
										"nodeType": "Block",
										"src": "8827:80:2",
										"statements": [
											{
												"AST": {
													"nativeSrc": "8846:55:2",
													"nodeType": "YulBlock",
													"src": "8846:55:2",
													"statements": [
														{
															"nativeSrc": "8860:31:2",
															"nodeType": "YulAssignment",
															"src": "8860:31:2",
															"value": {
																"name": "INITIALIZABLE_STORAGE",
																"nativeSrc": "8870:21:2",
																"nodeType": "YulIdentifier",
																"src": "8870:21:2"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "8860:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "8860:6:2"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 489,
														"isOffset": false,
														"isSlot": true,
														"src": "8860:6:2",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 254,
														"isOffset": false,
														"isSlot": false,
														"src": "8870:21:2",
														"valueSize": 1
													}
												],
												"id": 491,
												"nodeType": "InlineAssembly",
												"src": "8837:64:2"
											}
										]
									},
									"documentation": {
										"id": 485,
										"nodeType": "StructuredDocumentation",
										"src": "8613:67:2",
										"text": " @dev Returns a pointer to the storage namespace."
									},
									"id": 493,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializableStorage",
									"nameLocation": "8746:24:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 486,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8770:2:2"
									},
									"returnParameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "8824:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 493,
												"src": "8795:30:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_InitializableStorage_$251_storage_ptr",
													"typeString": "struct Initializable.InitializableStorage"
												},
												"typeName": {
													"id": 488,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 487,
														"name": "InitializableStorage",
														"nameLocations": [
															"8795:20:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 251,
														"src": "8795:20:2"
													},
													"referencedDeclaration": 251,
													"src": "8795:20:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$251_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8794:32:2"
									},
									"scope": 494,
									"src": "8737:170:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 495,
							"src": "2349:6560:2",
							"usedErrors": [
								257,
								260
							],
							"usedEvents": [
								265
							]
						}
					],
					"src": "113:8797:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
					"exportedSymbols": {
						"ERC1967Utils": [
							1851
						],
						"IERC1822Proxiable": [
							1411
						],
						"Initializable": [
							494
						],
						"UUPSUpgradeable": [
							676
						]
					},
					"id": 677,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 496,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
							"file": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
							"id": 498,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 677,
							"sourceUnit": 1412,
							"src": "141:88:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 497,
										"name": "IERC1822Proxiable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1411,
										"src": "149:17:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
							"file": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
							"id": 500,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 677,
							"sourceUnit": 1852,
							"src": "230:84:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 499,
										"name": "ERC1967Utils",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1851,
										"src": "238:12:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "./Initializable.sol",
							"id": 502,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 677,
							"sourceUnit": 495,
							"src": "315:50:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 501,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 494,
										"src": "323:13:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 504,
										"name": "Initializable",
										"nameLocations": [
											"1023:13:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 494,
										"src": "1023:13:3"
									},
									"id": 505,
									"nodeType": "InheritanceSpecifier",
									"src": "1023:13:3"
								},
								{
									"baseName": {
										"id": 506,
										"name": "IERC1822Proxiable",
										"nameLocations": [
											"1038:17:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1411,
										"src": "1038:17:3"
									},
									"id": 507,
									"nodeType": "InheritanceSpecifier",
									"src": "1038:17:3"
								}
							],
							"canonicalName": "UUPSUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 503,
								"nodeType": "StructuredDocumentation",
								"src": "367:618:3",
								"text": " @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n `UUPSUpgradeable` with a custom implementation of upgrades.\n The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism."
							},
							"fullyImplemented": false,
							"id": 676,
							"linearizedBaseContracts": [
								676,
								1411,
								494
							],
							"name": "UUPSUpgradeable",
							"nameLocation": "1004:15:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 508,
										"nodeType": "StructuredDocumentation",
										"src": "1062:61:3",
										"text": "@custom:oz-upgrades-unsafe-allow state-variable-immutable"
									},
									"id": 514,
									"mutability": "immutable",
									"name": "__self",
									"nameLocation": "1154:6:3",
									"nodeType": "VariableDeclaration",
									"scope": 676,
									"src": "1128:48:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 509,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1128:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"arguments": [
											{
												"id": 512,
												"name": "this",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 4294967268,
												"src": "1171:4:3",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_UUPSUpgradeable_$676",
													"typeString": "contract UUPSUpgradeable"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_contract$_UUPSUpgradeable_$676",
													"typeString": "contract UUPSUpgradeable"
												}
											],
											"id": 511,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "1163:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_address_$",
												"typeString": "type(address)"
											},
											"typeName": {
												"id": 510,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1163:7:3",
												"typeDescriptions": {}
											}
										},
										"id": 513,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1163:13:3",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"documentation": {
										"id": 515,
										"nodeType": "StructuredDocumentation",
										"src": "1183:631:3",
										"text": " @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\n and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\n while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\n If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\n be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\n during an upgrade."
									},
									"functionSelector": "ad3cb1cc",
									"id": 518,
									"mutability": "constant",
									"name": "UPGRADE_INTERFACE_VERSION",
									"nameLocation": "1842:25:3",
									"nodeType": "VariableDeclaration",
									"scope": 676,
									"src": "1819:58:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 516,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1819:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "352e302e30",
										"id": 517,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1870:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_2ade050ecfcf8ae20ae1d10a23573f9d7e0bad85e74a2cf8338a65401e64558c",
											"typeString": "literal_string \"5.0.0\""
										},
										"value": "5.0.0"
									},
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 519,
										"nodeType": "StructuredDocumentation",
										"src": "1884:65:3",
										"text": " @dev The call is from an unauthorized context."
									},
									"errorSelector": "e07c8dba",
									"id": 521,
									"name": "UUPSUnauthorizedCallContext",
									"nameLocation": "1960:27:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 520,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1987:2:3"
									},
									"src": "1954:36:3"
								},
								{
									"documentation": {
										"id": 522,
										"nodeType": "StructuredDocumentation",
										"src": "1996:68:3",
										"text": " @dev The storage `slot` is unsupported as a UUID."
									},
									"errorSelector": "aa1d49a4",
									"id": 526,
									"name": "UUPSUnsupportedProxiableUUID",
									"nameLocation": "2075:28:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 525,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 524,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2112:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 526,
												"src": "2104:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 523,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2104:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2103:14:3"
									},
									"src": "2069:49:3"
								},
								{
									"body": {
										"id": 533,
										"nodeType": "Block",
										"src": "2643:41:3",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 529,
														"name": "_checkProxy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 608,
														"src": "2653:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 530,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2653:13:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 531,
												"nodeType": "ExpressionStatement",
												"src": "2653:13:3"
											},
											{
												"id": 532,
												"nodeType": "PlaceholderStatement",
												"src": "2676:1:3"
											}
										]
									},
									"documentation": {
										"id": 527,
										"nodeType": "StructuredDocumentation",
										"src": "2124:493:3",
										"text": " @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\n for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n fail."
									},
									"id": 534,
									"name": "onlyProxy",
									"nameLocation": "2631:9:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2640:2:3"
									},
									"src": "2622:62:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 541,
										"nodeType": "Block",
										"src": "2914:48:3",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 537,
														"name": "_checkNotDelegated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 624,
														"src": "2924:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 538,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2924:20:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 539,
												"nodeType": "ExpressionStatement",
												"src": "2924:20:3"
											},
											{
												"id": 540,
												"nodeType": "PlaceholderStatement",
												"src": "2954:1:3"
											}
										]
									},
									"documentation": {
										"id": 535,
										"nodeType": "StructuredDocumentation",
										"src": "2690:195:3",
										"text": " @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n callable on the implementing contract but not through proxies."
									},
									"id": 542,
									"name": "notDelegated",
									"nameLocation": "2899:12:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 536,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2911:2:3"
									},
									"src": "2890:72:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 547,
										"nodeType": "Block",
										"src": "3028:7:3",
										"statements": []
									},
									"id": 548,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 545,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 544,
												"name": "onlyInitializing",
												"nameLocations": [
													"3011:16:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 403,
												"src": "3011:16:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "3011:16:3"
										}
									],
									"name": "__UUPSUpgradeable_init",
									"nameLocation": "2977:22:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 543,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2999:2:3"
									},
									"returnParameters": {
										"id": 546,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3028:0:3"
									},
									"scope": 676,
									"src": "2968:67:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 553,
										"nodeType": "Block",
										"src": "3111:7:3",
										"statements": []
									},
									"id": 554,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 551,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 550,
												"name": "onlyInitializing",
												"nameLocations": [
													"3094:16:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 403,
												"src": "3094:16:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "3094:16:3"
										}
									],
									"name": "__UUPSUpgradeable_init_unchained",
									"nameLocation": "3050:32:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 549,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3082:2:3"
									},
									"returnParameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3111:0:3"
									},
									"scope": 676,
									"src": "3041:77:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1410
									],
									"body": {
										"id": 565,
										"nodeType": "Block",
										"src": "3783:56:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 562,
														"name": "ERC1967Utils",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1851,
														"src": "3800:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1851_$",
															"typeString": "type(library ERC1967Utils)"
														}
													},
													"id": 563,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberLocation": "3813:19:3",
													"memberName": "IMPLEMENTATION_SLOT",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1578,
													"src": "3800:32:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 561,
												"id": 564,
												"nodeType": "Return",
												"src": "3793:39:3"
											}
										]
									},
									"documentation": {
										"id": 555,
										"nodeType": "StructuredDocumentation",
										"src": "3123:577:3",
										"text": " @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\n implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
									},
									"functionSelector": "52d1902d",
									"id": 566,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 558,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 557,
												"name": "notDelegated",
												"nameLocations": [
													"3752:12:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 542,
												"src": "3752:12:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "3752:12:3"
										}
									],
									"name": "proxiableUUID",
									"nameLocation": "3714:13:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 556,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3727:2:3"
									},
									"returnParameters": {
										"id": 561,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 560,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 566,
												"src": "3774:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 559,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3773:9:3"
									},
									"scope": 676,
									"src": "3705:134:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": {
										"id": 585,
										"nodeType": "Block",
										"src": "4263:109:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 577,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 569,
															"src": "4291:17:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 576,
														"name": "_authorizeUpgrade",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 630,
														"src": "4273:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 578,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4273:36:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 579,
												"nodeType": "ExpressionStatement",
												"src": "4273:36:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 581,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 569,
															"src": "4341:17:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 582,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 571,
															"src": "4360:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 580,
														"name": "_upgradeToAndCallUUPS",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 675,
														"src": "4319:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,bytes memory)"
														}
													},
													"id": 583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4319:46:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 584,
												"nodeType": "ExpressionStatement",
												"src": "4319:46:3"
											}
										]
									},
									"documentation": {
										"id": 567,
										"nodeType": "StructuredDocumentation",
										"src": "3845:308:3",
										"text": " @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n encoded in `data`.\n Calls {_authorizeUpgrade}.\n Emits an {Upgraded} event.\n @custom:oz-upgrades-unsafe-allow-reachable delegatecall"
									},
									"functionSelector": "4f1ef286",
									"id": 586,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 574,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 573,
												"name": "onlyProxy",
												"nameLocations": [
													"4253:9:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 534,
												"src": "4253:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "4253:9:3"
										}
									],
									"name": "upgradeToAndCall",
									"nameLocation": "4167:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 572,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 569,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "4192:17:3",
												"nodeType": "VariableDeclaration",
												"scope": 586,
												"src": "4184:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 568,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4184:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 571,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4224:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 586,
												"src": "4211:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 570,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4211:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4183:46:3"
									},
									"returnParameters": {
										"id": 575,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4263:0:3"
									},
									"scope": 676,
									"src": "4158:214:3",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 607,
										"nodeType": "Block",
										"src": "4644:267:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 601,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 595,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 592,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4679:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_UUPSUpgradeable_$676",
																		"typeString": "contract UUPSUpgradeable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_UUPSUpgradeable_$676",
																		"typeString": "contract UUPSUpgradeable"
																	}
																],
																"id": 591,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4671:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 590,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4671:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 593,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4671:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 594,
															"name": "__self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 514,
															"src": "4688:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "4671:23:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 600,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 596,
																	"name": "ERC1967Utils",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1851,
																	"src": "4749:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1851_$",
																		"typeString": "type(library ERC1967Utils)"
																	}
																},
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4762:17:3",
																"memberName": "getImplementation",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1609,
																"src": "4749:30:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 598,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4749:32:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 599,
															"name": "__self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 514,
															"src": "4785:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "4749:42:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4671:120:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 606,
												"nodeType": "IfStatement",
												"src": "4654:251:3",
												"trueBody": {
													"id": 605,
													"nodeType": "Block",
													"src": "4844:61:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 602,
																	"name": "UUPSUnauthorizedCallContext",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 521,
																	"src": "4865:27:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 603,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4865:29:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 604,
															"nodeType": "RevertStatement",
															"src": "4858:36:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 587,
										"nodeType": "StructuredDocumentation",
										"src": "4378:216:3",
										"text": " @dev Reverts if the execution is not performed via delegatecall or the execution\n context is not of a proxy with an ERC1967-compliant implementation pointing to self.\n See {_onlyProxy}."
									},
									"id": 608,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkProxy",
									"nameLocation": "4608:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 588,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4619:2:3"
									},
									"returnParameters": {
										"id": 589,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4644:0:3"
									},
									"scope": 676,
									"src": "4599:312:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 623,
										"nodeType": "Block",
										"src": "5080:161:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 614,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "5102:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_UUPSUpgradeable_$676",
																	"typeString": "contract UUPSUpgradeable"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_UUPSUpgradeable_$676",
																	"typeString": "contract UUPSUpgradeable"
																}
															],
															"id": 613,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5094:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 612,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5094:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 615,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5094:13:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 616,
														"name": "__self",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 514,
														"src": "5111:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5094:23:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 622,
												"nodeType": "IfStatement",
												"src": "5090:145:3",
												"trueBody": {
													"id": 621,
													"nodeType": "Block",
													"src": "5119:116:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 618,
																	"name": "UUPSUnauthorizedCallContext",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 521,
																	"src": "5195:27:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 619,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5195:29:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 620,
															"nodeType": "RevertStatement",
															"src": "5188:36:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 609,
										"nodeType": "StructuredDocumentation",
										"src": "4917:106:3",
										"text": " @dev Reverts if the execution is performed via delegatecall.\n See {notDelegated}."
									},
									"id": 624,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkNotDelegated",
									"nameLocation": "5037:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5055:2:3"
									},
									"returnParameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5080:0:3"
									},
									"scope": 676,
									"src": "5028:213:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"documentation": {
										"id": 625,
										"nodeType": "StructuredDocumentation",
										"src": "5247:372:3",
										"text": " @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n {upgradeToAndCall}.\n Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n ```solidity\n function _authorizeUpgrade(address) internal onlyOwner {}\n ```"
									},
									"id": 630,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "_authorizeUpgrade",
									"nameLocation": "5633:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 628,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 627,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "5659:17:3",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "5651:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 626,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:27:3"
									},
									"returnParameters": {
										"id": 629,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5694:0:3"
									},
									"scope": 676,
									"src": "5624:71:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 674,
										"nodeType": "Block",
										"src": "6137:453:3",
										"statements": [
											{
												"clauses": [
													{
														"block": {
															"id": 663,
															"nodeType": "Block",
															"src": "6227:212:3",
															"statements": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		"id": 649,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 646,
																			"name": "slot",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 644,
																			"src": "6245:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"expression": {
																				"id": 647,
																				"name": "ERC1967Utils",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1851,
																				"src": "6253:12:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1851_$",
																					"typeString": "type(library ERC1967Utils)"
																				}
																			},
																			"id": 648,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "6266:19:3",
																			"memberName": "IMPLEMENTATION_SLOT",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1578,
																			"src": "6253:32:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"src": "6245:40:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 655,
																	"nodeType": "IfStatement",
																	"src": "6241:120:3",
																	"trueBody": {
																		"id": 654,
																		"nodeType": "Block",
																		"src": "6287:74:3",
																		"statements": [
																			{
																				"errorCall": {
																					"arguments": [
																						{
																							"id": 651,
																							"name": "slot",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 644,
																							"src": "6341:4:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						],
																						"id": 650,
																						"name": "UUPSUnsupportedProxiableUUID",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 526,
																						"src": "6312:28:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_error_pure$_t_bytes32_$returns$__$",
																							"typeString": "function (bytes32) pure"
																						}
																					},
																					"id": 652,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "6312:34:3",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 653,
																				"nodeType": "RevertStatement",
																				"src": "6305:41:3"
																			}
																		]
																	}
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 659,
																				"name": "newImplementation",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 633,
																				"src": "6404:17:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 660,
																				"name": "data",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 635,
																				"src": "6423:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"expression": {
																				"id": 656,
																				"name": "ERC1967Utils",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1851,
																				"src": "6374:12:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1851_$",
																					"typeString": "type(library ERC1967Utils)"
																				}
																			},
																			"id": 658,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6387:16:3",
																			"memberName": "upgradeToAndCall",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1670,
																			"src": "6374:29:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
																				"typeString": "function (address,bytes memory)"
																			}
																		},
																		"id": 661,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6374:54:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 662,
																	"nodeType": "ExpressionStatement",
																	"src": "6374:54:3"
																}
															]
														},
														"errorName": "",
														"id": 664,
														"nodeType": "TryCatchClause",
														"parameters": {
															"id": 645,
															"nodeType": "ParameterList",
															"parameters": [
																{
																	"constant": false,
																	"id": 644,
																	"mutability": "mutable",
																	"name": "slot",
																	"nameLocation": "6221:4:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 664,
																	"src": "6213:12:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 643,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "6213:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"src": "6212:14:3"
														},
														"src": "6204:235:3"
													},
													{
														"block": {
															"id": 671,
															"nodeType": "Block",
															"src": "6446:138:3",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 668,
																				"name": "newImplementation",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 633,
																				"src": "6555:17:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"expression": {
																				"id": 665,
																				"name": "ERC1967Utils",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1851,
																				"src": "6513:12:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1851_$",
																					"typeString": "type(library ERC1967Utils)"
																				}
																			},
																			"id": 667,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6526:28:3",
																			"memberName": "ERC1967InvalidImplementation",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1583,
																			"src": "6513:41:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																				"typeString": "function (address) pure"
																			}
																		},
																		"id": 669,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6513:60:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 670,
																	"nodeType": "RevertStatement",
																	"src": "6506:67:3"
																}
															]
														},
														"errorName": "",
														"id": 672,
														"nodeType": "TryCatchClause",
														"src": "6440:144:3"
													}
												],
												"externalCall": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 639,
																	"name": "newImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 633,
																	"src": "6169:17:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 638,
																"name": "IERC1822Proxiable",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1411,
																"src": "6151:17:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC1822Proxiable_$1411_$",
																	"typeString": "type(contract IERC1822Proxiable)"
																}
															},
															"id": 640,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6151:36:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC1822Proxiable_$1411",
																"typeString": "contract IERC1822Proxiable"
															}
														},
														"id": 641,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6188:13:3",
														"memberName": "proxiableUUID",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1410,
														"src": "6151:50:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_bytes32_$",
															"typeString": "function () view external returns (bytes32)"
														}
													},
													"id": 642,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6151:52:3",
													"tryCall": true,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 673,
												"nodeType": "TryStatement",
												"src": "6147:437:3"
											}
										]
									},
									"documentation": {
										"id": 631,
										"nodeType": "StructuredDocumentation",
										"src": "5701:346:3",
										"text": " @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\n As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\n is expected to be the implementation slot in ERC1967.\n Emits an {IERC1967-Upgraded} event."
									},
									"id": 675,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_upgradeToAndCallUUPS",
									"nameLocation": "6061:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 636,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 633,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "6091:17:3",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "6083:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 632,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6083:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 635,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6123:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "6110:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 634,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6110:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6082:46:3"
									},
									"returnParameters": {
										"id": 637,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6137:0:3"
									},
									"scope": 676,
									"src": "6052:538:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 677,
							"src": "986:5606:3",
							"usedErrors": [
								257,
								260,
								521,
								526,
								1583,
								1596,
								1978,
								1981
							],
							"usedEvents": [
								265,
								1562
							]
						}
					],
					"src": "115:6478:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							1401
						],
						"ERC20Upgradeable": [
							1293
						],
						"IERC20": [
							1939
						],
						"IERC20Errors": [
							1453
						],
						"IERC20Metadata": [
							1965
						],
						"Initializable": [
							494
						]
					},
					"id": 1294,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 678,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 680,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1294,
							"sourceUnit": 1940,
							"src": "131:70:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 679,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1939,
										"src": "139:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"id": 682,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1294,
							"sourceUnit": 1966,
							"src": "202:97:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 681,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1965,
										"src": "210:14:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
							"file": "../../utils/ContextUpgradeable.sol",
							"id": 684,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1294,
							"sourceUnit": 1402,
							"src": "300:70:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 683,
										"name": "ContextUpgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1401,
										"src": "308:18:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"id": 686,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1294,
							"sourceUnit": 1549,
							"src": "371:83:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 685,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1453,
										"src": "379:12:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../../proxy/utils/Initializable.sol",
							"id": 688,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1294,
							"sourceUnit": 495,
							"src": "455:66:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 687,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 494,
										"src": "463:13:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 690,
										"name": "Initializable",
										"nameLocations": [
											"1614:13:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 494,
										"src": "1614:13:4"
									},
									"id": 691,
									"nodeType": "InheritanceSpecifier",
									"src": "1614:13:4"
								},
								{
									"baseName": {
										"id": 692,
										"name": "ContextUpgradeable",
										"nameLocations": [
											"1629:18:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1401,
										"src": "1629:18:4"
									},
									"id": 693,
									"nodeType": "InheritanceSpecifier",
									"src": "1629:18:4"
								},
								{
									"baseName": {
										"id": 694,
										"name": "IERC20",
										"nameLocations": [
											"1649:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1939,
										"src": "1649:6:4"
									},
									"id": 695,
									"nodeType": "InheritanceSpecifier",
									"src": "1649:6:4"
								},
								{
									"baseName": {
										"id": 696,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1657:14:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1965,
										"src": "1657:14:4"
									},
									"id": 697,
									"nodeType": "InheritanceSpecifier",
									"src": "1657:14:4"
								},
								{
									"baseName": {
										"id": 698,
										"name": "IERC20Errors",
										"nameLocations": [
											"1673:12:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1453,
										"src": "1673:12:4"
									},
									"id": 699,
									"nodeType": "InheritanceSpecifier",
									"src": "1673:12:4"
								}
							],
							"canonicalName": "ERC20Upgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 689,
								"nodeType": "StructuredDocumentation",
								"src": "523:1052:4",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."
							},
							"fullyImplemented": true,
							"id": 1293,
							"linearizedBaseContracts": [
								1293,
								1453,
								1965,
								1939,
								1401,
								494
							],
							"name": "ERC20Upgradeable",
							"nameLocation": "1594:16:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "ERC20Upgradeable.ERC20Storage",
									"documentation": {
										"id": 700,
										"nodeType": "StructuredDocumentation",
										"src": "1692:63:4",
										"text": "@custom:storage-location erc7201:openzeppelin.storage.ERC20"
									},
									"id": 717,
									"members": [
										{
											"constant": false,
											"id": 704,
											"mutability": "mutable",
											"name": "_balances",
											"nameLocation": "1826:9:4",
											"nodeType": "VariableDeclaration",
											"scope": 717,
											"src": "1790:45:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"typeName": {
												"id": 703,
												"keyName": "account",
												"keyNameLocation": "1806:7:4",
												"keyType": {
													"id": 701,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1798:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "1790:35:4",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
													"typeString": "mapping(address => uint256)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 702,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1817:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 710,
											"mutability": "mutable",
											"name": "_allowances",
											"nameLocation": "1910:11:4",
											"nodeType": "VariableDeclaration",
											"scope": 717,
											"src": "1846:75:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
												"typeString": "mapping(address => mapping(address => uint256))"
											},
											"typeName": {
												"id": 709,
												"keyName": "account",
												"keyNameLocation": "1862:7:4",
												"keyType": {
													"id": 705,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1854:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "1846:63:4",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
													"typeString": "mapping(address => mapping(address => uint256))"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 708,
													"keyName": "spender",
													"keyNameLocation": "1889:7:4",
													"keyType": {
														"id": 706,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1881:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Mapping",
													"src": "1873:35:4",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
														"typeString": "mapping(address => uint256)"
													},
													"valueName": "",
													"valueNameLocation": "-1:-1:-1",
													"valueType": {
														"id": 707,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1900:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 712,
											"mutability": "mutable",
											"name": "_totalSupply",
											"nameLocation": "1940:12:4",
											"nodeType": "VariableDeclaration",
											"scope": 717,
											"src": "1932:20:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 711,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1932:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 714,
											"mutability": "mutable",
											"name": "_name",
											"nameLocation": "1970:5:4",
											"nodeType": "VariableDeclaration",
											"scope": 717,
											"src": "1963:12:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 713,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "1963:6:4",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 716,
											"mutability": "mutable",
											"name": "_symbol",
											"nameLocation": "1992:7:4",
											"nodeType": "VariableDeclaration",
											"scope": 717,
											"src": "1985:14:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 715,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "1985:6:4",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ERC20Storage",
									"nameLocation": "1767:12:4",
									"nodeType": "StructDefinition",
									"scope": 1293,
									"src": "1760:246:4",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 720,
									"mutability": "constant",
									"name": "ERC20StorageLocation",
									"nameLocation": "2146:20:4",
									"nodeType": "VariableDeclaration",
									"scope": 1293,
									"src": "2121:114:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 718,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2121:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307835326336333234376531663437646231396435636530343630303330633439376630363763613463656266373162613938656561646162653230626163653030",
										"id": 719,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2169:66:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_37439836327923360225337895871394760624280537466773280374265222508165906222592_by_1",
											"typeString": "int_const 3743...(69 digits omitted)...2592"
										},
										"value": "0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 727,
										"nodeType": "Block",
										"src": "2316:79:4",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2335:54:4",
													"nodeType": "YulBlock",
													"src": "2335:54:4",
													"statements": [
														{
															"nativeSrc": "2349:30:4",
															"nodeType": "YulAssignment",
															"src": "2349:30:4",
															"value": {
																"name": "ERC20StorageLocation",
																"nativeSrc": "2359:20:4",
																"nodeType": "YulIdentifier",
																"src": "2359:20:4"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "2349:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2349:6:4"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 724,
														"isOffset": false,
														"isSlot": true,
														"src": "2349:6:4",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 720,
														"isOffset": false,
														"isSlot": false,
														"src": "2359:20:4",
														"valueSize": 1
													}
												],
												"id": 726,
												"nodeType": "InlineAssembly",
												"src": "2326:63:4"
											}
										]
									},
									"id": 728,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getERC20Storage",
									"nameLocation": "2251:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 721,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2267:2:4"
									},
									"returnParameters": {
										"id": 725,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 724,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "2313:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2292:22:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ERC20Storage_$717_storage_ptr",
													"typeString": "struct ERC20Upgradeable.ERC20Storage"
												},
												"typeName": {
													"id": 723,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 722,
														"name": "ERC20Storage",
														"nameLocations": [
															"2292:12:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 717,
														"src": "2292:12:4"
													},
													"referencedDeclaration": 717,
													"src": "2292:12:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$717_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2291:24:4"
									},
									"scope": 1293,
									"src": "2242:153:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 743,
										"nodeType": "Block",
										"src": "2669:55:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 739,
															"name": "name_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 731,
															"src": "2702:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"id": 740,
															"name": "symbol_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 733,
															"src": "2709:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 738,
														"name": "__ERC20_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 772,
														"src": "2679:22:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory,string memory)"
														}
													},
													"id": 741,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2679:38:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 742,
												"nodeType": "ExpressionStatement",
												"src": "2679:38:4"
											}
										]
									},
									"documentation": {
										"id": 729,
										"nodeType": "StructuredDocumentation",
										"src": "2401:171:4",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 744,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 736,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 735,
												"name": "onlyInitializing",
												"nameLocations": [
													"2652:16:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 403,
												"src": "2652:16:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "2652:16:4"
										}
									],
									"name": "__ERC20_init",
									"nameLocation": "2586:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 734,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 731,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "2613:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "2599:19:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 730,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2599:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 733,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "2634:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "2620:21:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 732,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2620:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2598:44:4"
									},
									"returnParameters": {
										"id": 737,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2669:0:4"
									},
									"scope": 1293,
									"src": "2577:147:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 771,
										"nodeType": "Block",
										"src": "2832:114:4",
										"statements": [
											{
												"assignments": [
													755
												],
												"declarations": [
													{
														"constant": false,
														"id": 755,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "2863:1:4",
														"nodeType": "VariableDeclaration",
														"scope": 771,
														"src": "2842:22:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$717_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 754,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 753,
																"name": "ERC20Storage",
																"nameLocations": [
																	"2842:12:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 717,
																"src": "2842:12:4"
															},
															"referencedDeclaration": 717,
															"src": "2842:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$717_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 758,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 756,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 728,
														"src": "2867:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$717_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 757,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2867:18:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$717_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2842:43:4"
											},
											{
												"expression": {
													"id": 763,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 759,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "2895:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$717_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
															}
														},
														"id": 761,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2897:5:4",
														"memberName": "_name",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 714,
														"src": "2895:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 762,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 746,
														"src": "2905:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2895:15:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 764,
												"nodeType": "ExpressionStatement",
												"src": "2895:15:4"
											},
											{
												"expression": {
													"id": 769,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 765,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "2920:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$717_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
															}
														},
														"id": 767,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2922:7:4",
														"memberName": "_symbol",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 716,
														"src": "2920:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 768,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 748,
														"src": "2932:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2920:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 770,
												"nodeType": "ExpressionStatement",
												"src": "2920:19:4"
											}
										]
									},
									"id": 772,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 751,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 750,
												"name": "onlyInitializing",
												"nameLocations": [
													"2815:16:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 403,
												"src": "2815:16:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "2815:16:4"
										}
									],
									"name": "__ERC20_init_unchained",
									"nameLocation": "2739:22:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 749,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "2776:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 772,
												"src": "2762:19:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 745,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2762:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 748,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "2797:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 772,
												"src": "2783:21:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 747,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2783:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2761:44:4"
									},
									"returnParameters": {
										"id": 752,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2832:0:4"
									},
									"scope": 1293,
									"src": "2730:216:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1952
									],
									"body": {
										"id": 787,
										"nodeType": "Block",
										"src": "3071:84:4",
										"statements": [
											{
												"assignments": [
													780
												],
												"declarations": [
													{
														"constant": false,
														"id": 780,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "3102:1:4",
														"nodeType": "VariableDeclaration",
														"scope": 787,
														"src": "3081:22:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$717_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 779,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 778,
																"name": "ERC20Storage",
																"nameLocations": [
																	"3081:12:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 717,
																"src": "3081:12:4"
															},
															"referencedDeclaration": 717,
															"src": "3081:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$717_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 783,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 781,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 728,
														"src": "3106:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$717_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 782,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3106:18:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$717_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3081:43:4"
											},
											{
												"expression": {
													"expression": {
														"id": 784,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 780,
														"src": "3141:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$717_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
														}
													},
													"id": 785,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3143:5:4",
													"memberName": "_name",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 714,
													"src": "3141:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 777,
												"id": 786,
												"nodeType": "Return",
												"src": "3134:14:4"
											}
										]
									},
									"documentation": {
										"id": 773,
										"nodeType": "StructuredDocumentation",
										"src": "2952:54:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 788,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "3020:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 774,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3024:2:4"
									},
									"returnParameters": {
										"id": 777,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 776,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 788,
												"src": "3056:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 775,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3056:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3055:15:4"
									},
									"scope": 1293,
									"src": "3011:144:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1958
									],
									"body": {
										"id": 803,
										"nodeType": "Block",
										"src": "3330:86:4",
										"statements": [
											{
												"assignments": [
													796
												],
												"declarations": [
													{
														"constant": false,
														"id": 796,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "3361:1:4",
														"nodeType": "VariableDeclaration",
														"scope": 803,
														"src": "3340:22:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$717_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 795,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 794,
																"name": "ERC20Storage",
																"nameLocations": [
																	"3340:12:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 717,
																"src": "3340:12:4"
															},
															"referencedDeclaration": 717,
															"src": "3340:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$717_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 799,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 797,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 728,
														"src": "3365:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$717_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 798,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3365:18:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$717_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3340:43:4"
											},
											{
												"expression": {
													"expression": {
														"id": 800,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 796,
														"src": "3400:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$717_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
														}
													},
													"id": 801,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3402:7:4",
													"memberName": "_symbol",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 716,
													"src": "3400:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 793,
												"id": 802,
												"nodeType": "Return",
												"src": "3393:16:4"
											}
										]
									},
									"documentation": {
										"id": 789,
										"nodeType": "StructuredDocumentation",
										"src": "3161:102:4",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 804,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "3277:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 790,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3283:2:4"
									},
									"returnParameters": {
										"id": 793,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 792,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 804,
												"src": "3315:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 791,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3315:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3314:15:4"
									},
									"scope": 1293,
									"src": "3268:148:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1964
									],
									"body": {
										"id": 812,
										"nodeType": "Block",
										"src": "4105:26:4",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 810,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4122:2:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 809,
												"id": 811,
												"nodeType": "Return",
												"src": "4115:9:4"
											}
										]
									},
									"documentation": {
										"id": 805,
										"nodeType": "StructuredDocumentation",
										"src": "3422:622:4",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 813,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "4058:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 806,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4066:2:4"
									},
									"returnParameters": {
										"id": 809,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 808,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 813,
												"src": "4098:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 807,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "4098:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4097:7:4"
									},
									"scope": 1293,
									"src": "4049:82:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1888
									],
									"body": {
										"id": 828,
										"nodeType": "Block",
										"src": "4252:91:4",
										"statements": [
											{
												"assignments": [
													821
												],
												"declarations": [
													{
														"constant": false,
														"id": 821,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "4283:1:4",
														"nodeType": "VariableDeclaration",
														"scope": 828,
														"src": "4262:22:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$717_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 820,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 819,
																"name": "ERC20Storage",
																"nameLocations": [
																	"4262:12:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 717,
																"src": "4262:12:4"
															},
															"referencedDeclaration": 717,
															"src": "4262:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$717_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 824,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 822,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 728,
														"src": "4287:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$717_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 823,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4287:18:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$717_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4262:43:4"
											},
											{
												"expression": {
													"expression": {
														"id": 825,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 821,
														"src": "4322:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$717_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
														}
													},
													"id": 826,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4324:12:4",
													"memberName": "_totalSupply",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 712,
													"src": "4322:14:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 818,
												"id": 827,
												"nodeType": "Return",
												"src": "4315:21:4"
											}
										]
									},
									"documentation": {
										"id": 814,
										"nodeType": "StructuredDocumentation",
										"src": "4137:49:4",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 829,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "4200:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 815,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4211:2:4"
									},
									"returnParameters": {
										"id": 818,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 817,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 829,
												"src": "4243:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 816,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4243:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4242:9:4"
									},
									"scope": 1293,
									"src": "4191:152:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1896
									],
									"body": {
										"id": 848,
										"nodeType": "Block",
										"src": "4475:97:4",
										"statements": [
											{
												"assignments": [
													839
												],
												"declarations": [
													{
														"constant": false,
														"id": 839,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "4506:1:4",
														"nodeType": "VariableDeclaration",
														"scope": 848,
														"src": "4485:22:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$717_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 838,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 837,
																"name": "ERC20Storage",
																"nameLocations": [
																	"4485:12:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 717,
																"src": "4485:12:4"
															},
															"referencedDeclaration": 717,
															"src": "4485:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$717_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 842,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 840,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 728,
														"src": "4510:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$717_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 841,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4510:18:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$717_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4485:43:4"
											},
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"id": 843,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 839,
															"src": "4545:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$717_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
															}
														},
														"id": 844,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4547:9:4",
														"memberName": "_balances",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 704,
														"src": "4545:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 846,
													"indexExpression": {
														"id": 845,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 832,
														"src": "4557:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4545:20:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 836,
												"id": 847,
												"nodeType": "Return",
												"src": "4538:27:4"
											}
										]
									},
									"documentation": {
										"id": 830,
										"nodeType": "StructuredDocumentation",
										"src": "4349:47:4",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 849,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "4410:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4428:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 849,
												"src": "4420:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 831,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4420:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4419:17:4"
									},
									"returnParameters": {
										"id": 836,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 835,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 849,
												"src": "4466:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 834,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4466:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4465:9:4"
									},
									"scope": 1293,
									"src": "4401:171:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1906
									],
									"body": {
										"id": 872,
										"nodeType": "Block",
										"src": "4842:103:4",
										"statements": [
											{
												"assignments": [
													860
												],
												"declarations": [
													{
														"constant": false,
														"id": 860,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4860:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 872,
														"src": "4852:13:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 859,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4852:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 863,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 861,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1383,
														"src": "4868:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 862,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4868:12:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4852:28:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 865,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 860,
															"src": "4900:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 866,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 852,
															"src": "4907:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 867,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 854,
															"src": "4911:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 864,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1000,
														"src": "4890:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 868,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4890:27:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 869,
												"nodeType": "ExpressionStatement",
												"src": "4890:27:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 870,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4934:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 858,
												"id": 871,
												"nodeType": "Return",
												"src": "4927:11:4"
											}
										]
									},
									"documentation": {
										"id": 850,
										"nodeType": "StructuredDocumentation",
										"src": "4578:184:4",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 873,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "4776:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 855,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4793:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 873,
												"src": "4785:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 851,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4785:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 854,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4805:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 873,
												"src": "4797:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 853,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4797:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4784:27:4"
									},
									"returnParameters": {
										"id": 858,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 873,
												"src": "4836:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 856,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4836:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4835:6:4"
									},
									"scope": 1293,
									"src": "4767:178:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1916
									],
									"body": {
										"id": 896,
										"nodeType": "Block",
										"src": "5092:106:4",
										"statements": [
											{
												"assignments": [
													885
												],
												"declarations": [
													{
														"constant": false,
														"id": 885,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "5123:1:4",
														"nodeType": "VariableDeclaration",
														"scope": 896,
														"src": "5102:22:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$717_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 884,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 883,
																"name": "ERC20Storage",
																"nameLocations": [
																	"5102:12:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 717,
																"src": "5102:12:4"
															},
															"referencedDeclaration": 717,
															"src": "5102:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$717_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 888,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 886,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 728,
														"src": "5127:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$717_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 887,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5127:18:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$717_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5102:43:4"
											},
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"expression": {
																"id": 889,
																"name": "$",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 885,
																"src": "5162:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_ERC20Storage_$717_storage_ptr",
																	"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
																}
															},
															"id": 890,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5164:11:4",
															"memberName": "_allowances",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 710,
															"src": "5162:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 892,
														"indexExpression": {
															"id": 891,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 876,
															"src": "5176:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5162:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 894,
													"indexExpression": {
														"id": 893,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 878,
														"src": "5183:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5162:29:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 882,
												"id": 895,
												"nodeType": "Return",
												"src": "5155:36:4"
											}
										]
									},
									"documentation": {
										"id": 874,
										"nodeType": "StructuredDocumentation",
										"src": "4951:47:4",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 897,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "5012:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 879,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 876,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5030:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 897,
												"src": "5022:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 875,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5022:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 878,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5045:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 897,
												"src": "5037:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 877,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5037:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5021:32:4"
									},
									"returnParameters": {
										"id": 882,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 881,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 897,
												"src": "5083:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 880,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5083:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5082:9:4"
									},
									"scope": 1293,
									"src": "5003:195:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1926
									],
									"body": {
										"id": 920,
										"nodeType": "Block",
										"src": "5584:107:4",
										"statements": [
											{
												"assignments": [
													908
												],
												"declarations": [
													{
														"constant": false,
														"id": 908,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "5602:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 920,
														"src": "5594:13:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 907,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5594:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 911,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 909,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1383,
														"src": "5610:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 910,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5610:12:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5594:28:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 913,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 908,
															"src": "5641:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 914,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 900,
															"src": "5648:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 915,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 902,
															"src": "5657:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 912,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1176,
															1244
														],
														"referencedDeclaration": 1176,
														"src": "5632:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 916,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5632:31:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 917,
												"nodeType": "ExpressionStatement",
												"src": "5632:31:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 918,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5680:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 906,
												"id": 919,
												"nodeType": "Return",
												"src": "5673:11:4"
											}
										]
									},
									"documentation": {
										"id": 898,
										"nodeType": "StructuredDocumentation",
										"src": "5204:296:4",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 921,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "5514:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 903,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5530:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 921,
												"src": "5522:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 899,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5522:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 902,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5547:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 921,
												"src": "5539:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 901,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5539:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5521:32:4"
									},
									"returnParameters": {
										"id": 906,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 905,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 921,
												"src": "5578:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 904,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5578:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5577:6:4"
									},
									"scope": 1293,
									"src": "5505:186:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1938
									],
									"body": {
										"id": 952,
										"nodeType": "Block",
										"src": "6344:151:4",
										"statements": [
											{
												"assignments": [
													934
												],
												"declarations": [
													{
														"constant": false,
														"id": 934,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "6362:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 952,
														"src": "6354:15:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 933,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6354:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 937,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 935,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1383,
														"src": "6372:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 936,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6372:12:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6354:30:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 939,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 924,
															"src": "6410:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 940,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 934,
															"src": "6416:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 941,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 928,
															"src": "6425:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 938,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1292,
														"src": "6394:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 942,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6394:37:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 943,
												"nodeType": "ExpressionStatement",
												"src": "6394:37:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 945,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 924,
															"src": "6451:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 946,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 926,
															"src": "6457:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 947,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 928,
															"src": "6461:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 944,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1000,
														"src": "6441:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 948,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6441:26:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 949,
												"nodeType": "ExpressionStatement",
												"src": "6441:26:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 950,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6484:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 932,
												"id": 951,
												"nodeType": "Return",
												"src": "6477:11:4"
											}
										]
									},
									"documentation": {
										"id": 922,
										"nodeType": "StructuredDocumentation",
										"src": "5697:549:4",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 953,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "6260:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 929,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 924,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6281:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 953,
												"src": "6273:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 923,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6273:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 926,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6295:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 953,
												"src": "6287:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 925,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6287:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 928,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6307:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 953,
												"src": "6299:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 927,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6299:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6272:41:4"
									},
									"returnParameters": {
										"id": 932,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 931,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 953,
												"src": "6338:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 930,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6338:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6337:6:4"
									},
									"scope": 1293,
									"src": "6251:244:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 999,
										"nodeType": "Block",
										"src": "6937:231:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 968,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 963,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 956,
														"src": "6951:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 966,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6967:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 965,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6959:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 964,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6959:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 967,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6959:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6951:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 977,
												"nodeType": "IfStatement",
												"src": "6947:86:4",
												"trueBody": {
													"id": 976,
													"nodeType": "Block",
													"src": "6971:62:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 972,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7019:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 971,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7011:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 970,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7011:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 973,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7011:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 969,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1428,
																	"src": "6992:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 974,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6992:30:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 975,
															"nodeType": "RevertStatement",
															"src": "6985:37:4"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 983,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 978,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 958,
														"src": "7046:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 981,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7060:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 980,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7052:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 979,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7052:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 982,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7052:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7046:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 992,
												"nodeType": "IfStatement",
												"src": "7042:86:4",
												"trueBody": {
													"id": 991,
													"nodeType": "Block",
													"src": "7064:64:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 987,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7114:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 986,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7106:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 985,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7106:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 988,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7106:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 984,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1433,
																	"src": "7085:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 989,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7085:32:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 990,
															"nodeType": "RevertStatement",
															"src": "7078:39:4"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 994,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 956,
															"src": "7145:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 995,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 958,
															"src": "7151:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 996,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 960,
															"src": "7155:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 993,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1092,
														"src": "7137:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 997,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7137:24:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 998,
												"nodeType": "ExpressionStatement",
												"src": "7137:24:4"
											}
										]
									},
									"documentation": {
										"id": 954,
										"nodeType": "StructuredDocumentation",
										"src": "6501:362:4",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 1000,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "6877:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 961,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 956,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6895:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1000,
												"src": "6887:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 955,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6887:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 958,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6909:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1000,
												"src": "6901:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 957,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6901:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 960,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6921:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1000,
												"src": "6913:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 959,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6913:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6886:41:4"
									},
									"returnParameters": {
										"id": 962,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6937:0:4"
									},
									"scope": 1293,
									"src": "6868:300:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1091,
										"nodeType": "Block",
										"src": "7558:1095:4",
										"statements": [
											{
												"assignments": [
													1012
												],
												"declarations": [
													{
														"constant": false,
														"id": 1012,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "7589:1:4",
														"nodeType": "VariableDeclaration",
														"scope": 1091,
														"src": "7568:22:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$717_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 1011,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1010,
																"name": "ERC20Storage",
																"nameLocations": [
																	"7568:12:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 717,
																"src": "7568:12:4"
															},
															"referencedDeclaration": 717,
															"src": "7568:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$717_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1015,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1013,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 728,
														"src": "7593:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$717_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 1014,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7593:18:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$717_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7568:43:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1021,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1016,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1003,
														"src": "7625:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1019,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7641:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1018,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7633:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1017,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7633:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1020,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7633:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7625:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1058,
													"nodeType": "Block",
													"src": "7801:366:4",
													"statements": [
														{
															"assignments": [
																1030
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1030,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "7823:11:4",
																	"nodeType": "VariableDeclaration",
																	"scope": 1058,
																	"src": "7815:19:4",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1029,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "7815:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1035,
															"initialValue": {
																"baseExpression": {
																	"expression": {
																		"id": 1031,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1012,
																		"src": "7837:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_ERC20Storage_$717_storage_ptr",
																			"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
																		}
																	},
																	"id": 1032,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7839:9:4",
																	"memberName": "_balances",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 704,
																	"src": "7837:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1034,
																"indexExpression": {
																	"id": 1033,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1003,
																	"src": "7849:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7837:17:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "7815:39:4"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1038,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1036,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1030,
																	"src": "7872:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1037,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1007,
																	"src": "7886:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7872:19:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1046,
															"nodeType": "IfStatement",
															"src": "7868:115:4",
															"trueBody": {
																"id": 1045,
																"nodeType": "Block",
																"src": "7893:90:4",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1040,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1003,
																					"src": "7943:4:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1041,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1030,
																					"src": "7949:11:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1042,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1007,
																					"src": "7962:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1039,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1423,
																				"src": "7918:24:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 1043,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7918:50:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1044,
																		"nodeType": "RevertStatement",
																		"src": "7911:57:4"
																	}
																]
															}
														},
														{
															"id": 1057,
															"nodeType": "UncheckedBlock",
															"src": "7996:161:4",
															"statements": [
																{
																	"expression": {
																		"id": 1055,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"expression": {
																					"id": 1047,
																					"name": "$",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1012,
																					"src": "8103:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_ERC20Storage_$717_storage_ptr",
																						"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
																					}
																				},
																				"id": 1050,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "8105:9:4",
																				"memberName": "_balances",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 704,
																				"src": "8103:11:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1051,
																			"indexExpression": {
																				"id": 1049,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1003,
																				"src": "8115:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "8103:17:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1054,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1052,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1030,
																				"src": "8123:11:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 1053,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1007,
																				"src": "8137:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8123:19:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "8103:39:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1056,
																	"nodeType": "ExpressionStatement",
																	"src": "8103:39:4"
																}
															]
														}
													]
												},
												"id": 1059,
												"nodeType": "IfStatement",
												"src": "7621:546:4",
												"trueBody": {
													"id": 1028,
													"nodeType": "Block",
													"src": "7645:150:4",
													"statements": [
														{
															"expression": {
																"id": 1026,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1022,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1012,
																		"src": "7761:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_ERC20Storage_$717_storage_ptr",
																			"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
																		}
																	},
																	"id": 1024,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "7763:12:4",
																	"memberName": "_totalSupply",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 712,
																	"src": "7761:14:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 1025,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1007,
																	"src": "7779:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7761:23:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1027,
															"nodeType": "ExpressionStatement",
															"src": "7761:23:4"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1065,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1060,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1005,
														"src": "8181:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1063,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8195:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1062,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8187:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1061,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8187:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1064,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8187:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8181:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1083,
													"nodeType": "Block",
													"src": "8398:208:4",
													"statements": [
														{
															"id": 1082,
															"nodeType": "UncheckedBlock",
															"src": "8412:184:4",
															"statements": [
																{
																	"expression": {
																		"id": 1080,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"expression": {
																					"id": 1074,
																					"name": "$",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1012,
																					"src": "8557:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_ERC20Storage_$717_storage_ptr",
																						"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
																					}
																				},
																				"id": 1077,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "8559:9:4",
																				"memberName": "_balances",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 704,
																				"src": "8557:11:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1078,
																			"indexExpression": {
																				"id": 1076,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1005,
																				"src": "8569:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "8557:15:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 1079,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1007,
																			"src": "8576:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "8557:24:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1081,
																	"nodeType": "ExpressionStatement",
																	"src": "8557:24:4"
																}
															]
														}
													]
												},
												"id": 1084,
												"nodeType": "IfStatement",
												"src": "8177:429:4",
												"trueBody": {
													"id": 1073,
													"nodeType": "Block",
													"src": "8199:193:4",
													"statements": [
														{
															"id": 1072,
															"nodeType": "UncheckedBlock",
															"src": "8213:169:4",
															"statements": [
																{
																	"expression": {
																		"id": 1070,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"expression": {
																				"id": 1066,
																				"name": "$",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1012,
																				"src": "8344:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_ERC20Storage_$717_storage_ptr",
																					"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
																				}
																			},
																			"id": 1068,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"memberLocation": "8346:12:4",
																			"memberName": "_totalSupply",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 712,
																			"src": "8344:14:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 1069,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1007,
																			"src": "8362:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "8344:23:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1071,
																	"nodeType": "ExpressionStatement",
																	"src": "8344:23:4"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1086,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1003,
															"src": "8630:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1087,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1005,
															"src": "8636:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1088,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1007,
															"src": "8640:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1085,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1873,
														"src": "8621:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1089,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8621:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1090,
												"nodeType": "EmitStatement",
												"src": "8616:30:4"
											}
										]
									},
									"documentation": {
										"id": 1001,
										"nodeType": "StructuredDocumentation",
										"src": "7174:304:4",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 1092,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "7492:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1008,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1003,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "7508:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1092,
												"src": "7500:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1002,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7500:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1005,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7522:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1092,
												"src": "7514:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1004,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7514:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1007,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7534:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1092,
												"src": "7526:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1006,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7526:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7499:41:4"
									},
									"returnParameters": {
										"id": 1009,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7558:0:4"
									},
									"scope": 1293,
									"src": "7483:1170:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1124,
										"nodeType": "Block",
										"src": "9052:152:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1100,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1095,
														"src": "9066:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1103,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9085:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1102,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9077:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1101,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9077:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1104,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9077:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9066:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1114,
												"nodeType": "IfStatement",
												"src": "9062:91:4",
												"trueBody": {
													"id": 1113,
													"nodeType": "Block",
													"src": "9089:64:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1109,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9139:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1108,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9131:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1107,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9131:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1110,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9131:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1106,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1433,
																	"src": "9110:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1111,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9110:32:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1112,
															"nodeType": "RevertStatement",
															"src": "9103:39:4"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1118,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9178:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1117,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9170:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1116,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9170:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1119,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9170:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1120,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1095,
															"src": "9182:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1121,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1097,
															"src": "9191:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1115,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1092,
														"src": "9162:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9162:35:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1123,
												"nodeType": "ExpressionStatement",
												"src": "9162:35:4"
											}
										]
									},
									"documentation": {
										"id": 1093,
										"nodeType": "StructuredDocumentation",
										"src": "8659:332:4",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 1125,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "9005:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1098,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1095,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "9019:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1125,
												"src": "9011:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1094,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9011:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1097,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9036:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1125,
												"src": "9028:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1096,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9028:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9010:32:4"
									},
									"returnParameters": {
										"id": 1099,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9052:0:4"
									},
									"scope": 1293,
									"src": "8996:208:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1157,
										"nodeType": "Block",
										"src": "9578:150:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1133,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1128,
														"src": "9592:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1136,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9611:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1135,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9603:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1134,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9603:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1137,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9603:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9592:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1147,
												"nodeType": "IfStatement",
												"src": "9588:89:4",
												"trueBody": {
													"id": 1146,
													"nodeType": "Block",
													"src": "9615:62:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1142,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9663:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1141,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9655:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1140,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9655:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1143,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9655:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1139,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1428,
																	"src": "9636:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1144,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9636:30:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1145,
															"nodeType": "RevertStatement",
															"src": "9629:37:4"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1149,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1128,
															"src": "9694:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1152,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9711:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1151,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9703:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1150,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9703:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1153,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9703:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1154,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1130,
															"src": "9715:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1148,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1092,
														"src": "9686:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1155,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9686:35:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1156,
												"nodeType": "ExpressionStatement",
												"src": "9686:35:4"
											}
										]
									},
									"documentation": {
										"id": 1126,
										"nodeType": "StructuredDocumentation",
										"src": "9210:307:4",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 1158,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "9531:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1128,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "9545:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1158,
												"src": "9537:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1127,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9537:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1130,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9562:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1158,
												"src": "9554:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1129,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9554:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9536:32:4"
									},
									"returnParameters": {
										"id": 1132,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9578:0:4"
									},
									"scope": 1293,
									"src": "9522:206:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1175,
										"nodeType": "Block",
										"src": "10338:54:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1169,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1161,
															"src": "10357:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1170,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1163,
															"src": "10364:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1171,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1165,
															"src": "10373:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 1172,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10380:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1168,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1176,
															1244
														],
														"referencedDeclaration": 1244,
														"src": "10348:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 1173,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10348:37:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1174,
												"nodeType": "ExpressionStatement",
												"src": "10348:37:4"
											}
										]
									},
									"documentation": {
										"id": 1159,
										"nodeType": "StructuredDocumentation",
										"src": "9734:525:4",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 1176,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "10273:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1161,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10290:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1176,
												"src": "10282:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10282:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1163,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10305:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1176,
												"src": "10297:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1162,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10297:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1165,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10322:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1176,
												"src": "10314:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10314:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10281:47:4"
									},
									"returnParameters": {
										"id": 1167,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10338:0:4"
									},
									"scope": 1293,
									"src": "10264:128:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1243,
										"nodeType": "Block",
										"src": "11322:389:4",
										"statements": [
											{
												"assignments": [
													1190
												],
												"declarations": [
													{
														"constant": false,
														"id": 1190,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "11353:1:4",
														"nodeType": "VariableDeclaration",
														"scope": 1243,
														"src": "11332:22:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$717_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 1189,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1188,
																"name": "ERC20Storage",
																"nameLocations": [
																	"11332:12:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 717,
																"src": "11332:12:4"
															},
															"referencedDeclaration": 717,
															"src": "11332:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$717_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1193,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1191,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 728,
														"src": "11357:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$717_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 1192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11357:18:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$717_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11332:43:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1194,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1179,
														"src": "11389:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1197,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11406:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1196,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11398:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1195,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "11398:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1198,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11398:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11389:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1208,
												"nodeType": "IfStatement",
												"src": "11385:89:4",
												"trueBody": {
													"id": 1207,
													"nodeType": "Block",
													"src": "11410:64:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1203,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11460:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1202,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "11452:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1201,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "11452:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1204,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11452:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1200,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1447,
																	"src": "11431:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1205,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11431:32:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1206,
															"nodeType": "RevertStatement",
															"src": "11424:39:4"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1209,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1181,
														"src": "11487:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1212,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11506:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1211,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11498:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1210,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "11498:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1213,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11498:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11487:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1223,
												"nodeType": "IfStatement",
												"src": "11483:90:4",
												"trueBody": {
													"id": 1222,
													"nodeType": "Block",
													"src": "11510:63:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1218,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11559:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1217,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "11551:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1216,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "11551:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1219,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11551:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1215,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1452,
																	"src": "11531:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1220,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11531:31:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1221,
															"nodeType": "RevertStatement",
															"src": "11524:38:4"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"expression": {
																	"id": 1224,
																	"name": "$",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1190,
																	"src": "11582:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_ERC20Storage_$717_storage_ptr",
																		"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
																	}
																},
																"id": 1228,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "11584:11:4",
																"memberName": "_allowances",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 710,
																"src": "11582:13:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1229,
															"indexExpression": {
																"id": 1226,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1179,
																"src": "11596:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "11582:20:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1230,
														"indexExpression": {
															"id": 1227,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1181,
															"src": "11603:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11582:29:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1231,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1183,
														"src": "11614:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11582:37:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1233,
												"nodeType": "ExpressionStatement",
												"src": "11582:37:4"
											},
											{
												"condition": {
													"id": 1234,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1185,
													"src": "11633:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1242,
												"nodeType": "IfStatement",
												"src": "11629:76:4",
												"trueBody": {
													"id": 1241,
													"nodeType": "Block",
													"src": "11644:61:4",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1236,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1179,
																		"src": "11672:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1237,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1181,
																		"src": "11679:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1238,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1183,
																		"src": "11688:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1235,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1882,
																	"src": "11663:8:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1239,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11663:31:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1240,
															"nodeType": "EmitStatement",
															"src": "11658:36:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1177,
										"nodeType": "StructuredDocumentation",
										"src": "10398:821:4",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 1244,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "11233:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1179,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "11250:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1244,
												"src": "11242:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1178,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11242:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1181,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "11265:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1244,
												"src": "11257:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11257:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1183,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11282:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1244,
												"src": "11274:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11274:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1185,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "11294:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 1244,
												"src": "11289:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1184,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11289:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11241:63:4"
									},
									"returnParameters": {
										"id": 1187,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11322:0:4"
									},
									"scope": 1293,
									"src": "11224:487:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1291,
										"nodeType": "Block",
										"src": "12082:388:4",
										"statements": [
											{
												"assignments": [
													1255
												],
												"declarations": [
													{
														"constant": false,
														"id": 1255,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "12100:16:4",
														"nodeType": "VariableDeclaration",
														"scope": 1291,
														"src": "12092:24:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1254,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12092:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1260,
												"initialValue": {
													"arguments": [
														{
															"id": 1257,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1247,
															"src": "12129:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1258,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1249,
															"src": "12136:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1256,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 897,
														"src": "12119:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 1259,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12119:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12092:52:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1261,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1255,
														"src": "12158:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1264,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "12183:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1263,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "12183:7:4",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 1262,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "12178:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1265,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12178:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 1266,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "12192:3:4",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "12178:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12158:37:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1290,
												"nodeType": "IfStatement",
												"src": "12154:310:4",
												"trueBody": {
													"id": 1289,
													"nodeType": "Block",
													"src": "12197:267:4",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1270,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1268,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1255,
																	"src": "12215:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1269,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1251,
																	"src": "12234:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "12215:24:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1278,
															"nodeType": "IfStatement",
															"src": "12211:130:4",
															"trueBody": {
																"id": 1277,
																"nodeType": "Block",
																"src": "12241:100:4",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1272,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1249,
																					"src": "12293:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1273,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1255,
																					"src": "12302:16:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1274,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1251,
																					"src": "12320:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1271,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1442,
																				"src": "12266:26:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 1275,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "12266:60:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1276,
																		"nodeType": "RevertStatement",
																		"src": "12259:67:4"
																	}
																]
															}
														},
														{
															"id": 1288,
															"nodeType": "UncheckedBlock",
															"src": "12354:100:4",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 1280,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1247,
																				"src": "12391:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1281,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1249,
																				"src": "12398:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1284,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1282,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1255,
																					"src": "12407:16:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 1283,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1251,
																					"src": "12426:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12407:24:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 1285,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12433:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 1279,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				1176,
																				1244
																			],
																			"referencedDeclaration": 1244,
																			"src": "12382:8:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 1286,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12382:57:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1287,
																	"nodeType": "ExpressionStatement",
																	"src": "12382:57:4"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1245,
										"nodeType": "StructuredDocumentation",
										"src": "11717:271:4",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 1292,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "12002:15:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1252,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1247,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "12026:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1292,
												"src": "12018:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1246,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12018:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1249,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "12041:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1292,
												"src": "12033:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1248,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12033:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1251,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12058:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1292,
												"src": "12050:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1250,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12050:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12017:47:4"
									},
									"returnParameters": {
										"id": 1253,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12082:0:4"
									},
									"scope": 1293,
									"src": "11993:477:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1294,
							"src": "1576:10896:4",
							"usedErrors": [
								257,
								260,
								1423,
								1428,
								1433,
								1442,
								1447,
								1452
							],
							"usedEvents": [
								265,
								1873,
								1882
							]
						}
					],
					"src": "105:12368:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							1401
						],
						"ERC20BurnableUpgradeable": [
							1355
						],
						"ERC20Upgradeable": [
							1293
						],
						"Initializable": [
							494
						]
					},
					"id": 1356,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1295,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "124:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
							"file": "../ERC20Upgradeable.sol",
							"id": 1297,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1356,
							"sourceUnit": 1294,
							"src": "150:57:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1296,
										"name": "ERC20Upgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1293,
										"src": "158:16:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
							"file": "../../../utils/ContextUpgradeable.sol",
							"id": 1299,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1356,
							"sourceUnit": 1402,
							"src": "208:73:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1298,
										"name": "ContextUpgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1401,
										"src": "216:18:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../../../proxy/utils/Initializable.sol",
							"id": 1301,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1356,
							"sourceUnit": 495,
							"src": "282:69:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1300,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 494,
										"src": "290:13:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1303,
										"name": "Initializable",
										"nameLocations": [
											"608:13:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 494,
										"src": "608:13:5"
									},
									"id": 1304,
									"nodeType": "InheritanceSpecifier",
									"src": "608:13:5"
								},
								{
									"baseName": {
										"id": 1305,
										"name": "ContextUpgradeable",
										"nameLocations": [
											"623:18:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1401,
										"src": "623:18:5"
									},
									"id": 1306,
									"nodeType": "InheritanceSpecifier",
									"src": "623:18:5"
								},
								{
									"baseName": {
										"id": 1307,
										"name": "ERC20Upgradeable",
										"nameLocations": [
											"643:16:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1293,
										"src": "643:16:5"
									},
									"id": 1308,
									"nodeType": "InheritanceSpecifier",
									"src": "643:16:5"
								}
							],
							"canonicalName": "ERC20BurnableUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1302,
								"nodeType": "StructuredDocumentation",
								"src": "353:208:5",
								"text": " @dev Extension of {ERC20} that allows token holders to destroy both their own\n tokens and those that they have an allowance for, in a way that can be\n recognized off-chain (via event analysis)."
							},
							"fullyImplemented": true,
							"id": 1355,
							"linearizedBaseContracts": [
								1355,
								1293,
								1453,
								1965,
								1939,
								1401,
								494
							],
							"name": "ERC20BurnableUpgradeable",
							"nameLocation": "580:24:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1313,
										"nodeType": "Block",
										"src": "724:7:5",
										"statements": []
									},
									"id": 1314,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1311,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1310,
												"name": "onlyInitializing",
												"nameLocations": [
													"707:16:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 403,
												"src": "707:16:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "707:16:5"
										}
									],
									"name": "__ERC20Burnable_init",
									"nameLocation": "675:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1309,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "695:2:5"
									},
									"returnParameters": {
										"id": 1312,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "724:0:5"
									},
									"scope": 1355,
									"src": "666:65:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1319,
										"nodeType": "Block",
										"src": "805:7:5",
										"statements": []
									},
									"id": 1320,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1317,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1316,
												"name": "onlyInitializing",
												"nameLocations": [
													"788:16:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 403,
												"src": "788:16:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "788:16:5"
										}
									],
									"name": "__ERC20Burnable_init_unchained",
									"nameLocation": "746:30:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1315,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "776:2:5"
									},
									"returnParameters": {
										"id": 1318,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "805:0:5"
									},
									"scope": 1355,
									"src": "737:75:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1332,
										"nodeType": "Block",
										"src": "975:43:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1327,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1383,
																"src": "991:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1328,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "991:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1329,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1323,
															"src": "1005:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1326,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1158,
														"src": "985:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1330,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "985:26:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1331,
												"nodeType": "ExpressionStatement",
												"src": "985:26:5"
											}
										]
									},
									"documentation": {
										"id": 1321,
										"nodeType": "StructuredDocumentation",
										"src": "817:109:5",
										"text": " @dev Destroys a `value` amount of tokens from the caller.\n See {ERC20-_burn}."
									},
									"functionSelector": "42966c68",
									"id": 1333,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "940:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1323,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "953:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1333,
												"src": "945:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1322,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "945:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "944:15:5"
									},
									"returnParameters": {
										"id": 1325,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "975:0:5"
									},
									"scope": 1355,
									"src": "931:87:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1353,
										"nodeType": "Block",
										"src": "1399:93:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1342,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1336,
															"src": "1425:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1343,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1383,
																"src": "1434:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1344,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1434:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1345,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1338,
															"src": "1448:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1341,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1292,
														"src": "1409:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1409:45:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1347,
												"nodeType": "ExpressionStatement",
												"src": "1409:45:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1349,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1336,
															"src": "1470:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1350,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1338,
															"src": "1479:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1348,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1158,
														"src": "1464:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1351,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1464:21:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1352,
												"nodeType": "ExpressionStatement",
												"src": "1464:21:5"
											}
										]
									},
									"documentation": {
										"id": 1334,
										"nodeType": "StructuredDocumentation",
										"src": "1024:305:5",
										"text": " @dev Destroys a `value` amount of tokens from `account`, deducting from\n the caller's allowance.\n See {ERC20-_burn} and {ERC20-allowance}.\n Requirements:\n - the caller must have allowance for ``accounts``'s tokens of at least\n `value`."
									},
									"functionSelector": "79cc6790",
									"id": 1354,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burnFrom",
									"nameLocation": "1343:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1336,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1360:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1354,
												"src": "1352:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1335,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1352:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1338,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1377:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1354,
												"src": "1369:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1337,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1369:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1351:32:5"
									},
									"returnParameters": {
										"id": 1340,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1399:0:5"
									},
									"scope": 1355,
									"src": "1334:158:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1356,
							"src": "562:932:5",
							"usedErrors": [
								257,
								260,
								1423,
								1428,
								1433,
								1442,
								1447,
								1452
							],
							"usedEvents": [
								265,
								1873,
								1882
							]
						}
					],
					"src": "124:1371:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							1401
						],
						"Initializable": [
							494
						]
					},
					"id": 1402,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1357,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 1359,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1402,
							"sourceUnit": 495,
							"src": "126:63:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1358,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 494,
										"src": "134:13:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1361,
										"name": "Initializable",
										"nameLocations": [
											"728:13:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 494,
										"src": "728:13:6"
									},
									"id": 1362,
									"nodeType": "InheritanceSpecifier",
									"src": "728:13:6"
								}
							],
							"canonicalName": "ContextUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1360,
								"nodeType": "StructuredDocumentation",
								"src": "191:496:6",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1401,
							"linearizedBaseContracts": [
								1401,
								494
							],
							"name": "ContextUpgradeable",
							"nameLocation": "706:18:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1367,
										"nodeType": "Block",
										"src": "800:7:6",
										"statements": []
									},
									"id": 1368,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1365,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1364,
												"name": "onlyInitializing",
												"nameLocations": [
													"783:16:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 403,
												"src": "783:16:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "783:16:6"
										}
									],
									"name": "__Context_init",
									"nameLocation": "757:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1363,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "771:2:6"
									},
									"returnParameters": {
										"id": 1366,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "800:0:6"
									},
									"scope": 1401,
									"src": "748:59:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1373,
										"nodeType": "Block",
										"src": "875:7:6",
										"statements": []
									},
									"id": 1374,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1371,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1370,
												"name": "onlyInitializing",
												"nameLocations": [
													"858:16:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 403,
												"src": "858:16:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "858:16:6"
										}
									],
									"name": "__Context_init_unchained",
									"nameLocation": "822:24:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1369,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "846:2:6"
									},
									"returnParameters": {
										"id": 1372,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "875:0:6"
									},
									"scope": 1401,
									"src": "813:69:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1382,
										"nodeType": "Block",
										"src": "949:34:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1379,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "966:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1380,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "970:6:6",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "966:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1378,
												"id": 1381,
												"nodeType": "Return",
												"src": "959:17:6"
											}
										]
									},
									"id": 1383,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "896:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1375,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "906:2:6"
									},
									"returnParameters": {
										"id": 1378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1377,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1383,
												"src": "940:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1376,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "940:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "939:9:6"
									},
									"scope": 1401,
									"src": "887:96:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1391,
										"nodeType": "Block",
										"src": "1056:32:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1388,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1073:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1389,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1077:4:6",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "1073:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1387,
												"id": 1390,
												"nodeType": "Return",
												"src": "1066:15:6"
											}
										]
									},
									"id": 1392,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "998:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1384,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1006:2:6"
									},
									"returnParameters": {
										"id": 1387,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1386,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1392,
												"src": "1040:14:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1385,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1040:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1039:16:6"
									},
									"scope": 1401,
									"src": "989:99:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1399,
										"nodeType": "Block",
										"src": "1166:25:6",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1397,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1183:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1396,
												"id": 1398,
												"nodeType": "Return",
												"src": "1176:8:6"
											}
										]
									},
									"id": 1400,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "1103:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1393,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1123:2:6"
									},
									"returnParameters": {
										"id": 1396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1395,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1400,
												"src": "1157:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1394,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1157:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1156:9:6"
									},
									"scope": 1401,
									"src": "1094:97:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1402,
							"src": "688:505:6",
							"usedErrors": [
								257,
								260
							],
							"usedEvents": [
								265
							]
						}
					],
					"src": "101:1093:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/interfaces/draft-IERC1822.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
					"exportedSymbols": {
						"IERC1822Proxiable": [
							1411
						]
					},
					"id": 1412,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1403,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "113:24:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1822Proxiable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1404,
								"nodeType": "StructuredDocumentation",
								"src": "139:203:7",
								"text": " @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n proxy whose upgrades are fully controlled by the current implementation."
							},
							"fullyImplemented": false,
							"id": 1411,
							"linearizedBaseContracts": [
								1411
							],
							"name": "IERC1822Proxiable",
							"nameLocation": "353:17:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1405,
										"nodeType": "StructuredDocumentation",
										"src": "377:438:7",
										"text": " @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n address.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy."
									},
									"functionSelector": "52d1902d",
									"id": 1410,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "proxiableUUID",
									"nameLocation": "829:13:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1406,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "842:2:7"
									},
									"returnParameters": {
										"id": 1409,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1408,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1410,
												"src": "868:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1407,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "868:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "867:9:7"
									},
									"scope": 1411,
									"src": "820:57:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1412,
							"src": "343:536:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "113:767:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							1548
						],
						"IERC20Errors": [
							1453
						],
						"IERC721Errors": [
							1501
						]
					},
					"id": 1549,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1413,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1414,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:8",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 1453,
							"linearizedBaseContracts": [
								1453
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1415,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:8",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 1423,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1417,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1423,
												"src": "652:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1416,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1419,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1423,
												"src": "668:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1418,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1421,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1423,
												"src": "685:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1420,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:8"
									},
									"src": "621:80:8"
								},
								{
									"documentation": {
										"id": 1424,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:8",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 1428,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1426,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1428,
												"src": "889:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1425,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:8"
									},
									"src": "864:41:8"
								},
								{
									"documentation": {
										"id": 1429,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:8",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 1433,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1431,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1433,
												"src": "1102:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1430,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:8"
									},
									"src": "1075:45:8"
								},
								{
									"documentation": {
										"id": 1434,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:8",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 1442,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1441,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1436,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1442,
												"src": "1509:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1435,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1438,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1442,
												"src": "1526:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1437,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1440,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1442,
												"src": "1545:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1439,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:8"
									},
									"src": "1476:85:8"
								},
								{
									"documentation": {
										"id": 1443,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:8",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 1447,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1446,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1445,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1447,
												"src": "1773:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1444,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:8"
									},
									"src": "1746:45:8"
								},
								{
									"documentation": {
										"id": 1448,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:8",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 1452,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1450,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1452,
												"src": "2023:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1449,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:8"
									},
									"src": "1997:43:8"
								}
							],
							"scope": 1549,
							"src": "278:1764:8",
							"usedErrors": [
								1423,
								1428,
								1433,
								1442,
								1447,
								1452
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1454,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:8",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 1501,
							"linearizedBaseContracts": [
								1501
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1455,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:8",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 1459,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1457,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1459,
												"src": "2465:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1456,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:8"
									},
									"src": "2440:40:8"
								},
								{
									"documentation": {
										"id": 1460,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:8",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 1464,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1462,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1464,
												"src": "2652:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1461,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:8"
									},
									"src": "2623:46:8"
								},
								{
									"documentation": {
										"id": 1465,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:8",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 1473,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1472,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1467,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1473,
												"src": "2996:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1466,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1469,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1473,
												"src": "3012:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1468,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1471,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1473,
												"src": "3029:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1470,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:8"
									},
									"src": "2969:75:8"
								},
								{
									"documentation": {
										"id": 1474,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:8",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 1478,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1477,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1476,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1478,
												"src": "3233:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1475,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:8"
									},
									"src": "3207:42:8"
								},
								{
									"documentation": {
										"id": 1479,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:8",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 1483,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1481,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1483,
												"src": "3447:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1480,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:8"
									},
									"src": "3419:46:8"
								},
								{
									"documentation": {
										"id": 1484,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:8",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 1490,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1486,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1490,
												"src": "3756:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1485,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1488,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1490,
												"src": "3774:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1487,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:8"
									},
									"src": "3723:68:8"
								},
								{
									"documentation": {
										"id": 1491,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:8",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 1495,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1494,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1493,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1495,
												"src": "4004:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1492,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:8"
									},
									"src": "3976:46:8"
								},
								{
									"documentation": {
										"id": 1496,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:8",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 1500,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1499,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1498,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1500,
												"src": "4258:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1497,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:8"
									},
									"src": "4230:46:8"
								}
							],
							"scope": 1549,
							"src": "2186:2092:8",
							"usedErrors": [
								1459,
								1464,
								1473,
								1478,
								1483,
								1490,
								1495,
								1500
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1502,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:8",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 1548,
							"linearizedBaseContracts": [
								1548
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1503,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:8",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 1513,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1512,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1505,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1513,
												"src": "4854:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1504,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1507,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1513,
												"src": "4870:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1506,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1509,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1513,
												"src": "4887:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1508,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1511,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1513,
												"src": "4903:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1510,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:8"
									},
									"src": "4821:99:8"
								},
								{
									"documentation": {
										"id": 1514,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:8",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 1518,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1516,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1518,
												"src": "5110:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1515,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:8"
									},
									"src": "5083:43:8"
								},
								{
									"documentation": {
										"id": 1519,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:8",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 1523,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1522,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1521,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1523,
												"src": "5325:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1520,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:8"
									},
									"src": "5296:47:8"
								},
								{
									"documentation": {
										"id": 1524,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:8",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 1530,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1526,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1530,
												"src": "5645:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1525,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1528,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1530,
												"src": "5663:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1527,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:8"
									},
									"src": "5610:68:8"
								},
								{
									"documentation": {
										"id": 1531,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:8",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 1535,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1533,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1535,
												"src": "5892:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1532,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:8"
									},
									"src": "5863:47:8"
								},
								{
									"documentation": {
										"id": 1536,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:8",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 1540,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1539,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1538,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1540,
												"src": "6147:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1537,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:8"
									},
									"src": "6118:47:8"
								},
								{
									"documentation": {
										"id": 1541,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:8",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 1547,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1546,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1543,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1547,
												"src": "6488:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1542,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1545,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1547,
												"src": "6507:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1544,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:8"
									},
									"src": "6456:73:8"
								}
							],
							"scope": 1549,
							"src": "4424:2107:8",
							"usedErrors": [
								1513,
								1518,
								1523,
								1530,
								1535,
								1540,
								1547
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
					"exportedSymbols": {
						"Address": [
							2218
						],
						"ERC1967Utils": [
							1851
						],
						"IBeacon": [
							1861
						],
						"StorageSlot": [
							2328
						]
					},
					"id": 1852,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1550,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
							"file": "../beacon/IBeacon.sol",
							"id": 1552,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1852,
							"sourceUnit": 1862,
							"src": "140:46:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1551,
										"name": "IBeacon",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1861,
										"src": "148:7:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../utils/Address.sol",
							"id": 1554,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1852,
							"sourceUnit": 2219,
							"src": "187:48:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1553,
										"name": "Address",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2218,
										"src": "195:7:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/StorageSlot.sol",
							"file": "../../utils/StorageSlot.sol",
							"id": 1556,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1852,
							"sourceUnit": 2329,
							"src": "236:56:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1555,
										"name": "StorageSlot",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2328,
										"src": "244:11:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ERC1967Utils",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1557,
								"nodeType": "StructuredDocumentation",
								"src": "294:154:9",
								"text": " @dev This abstract contract provides getters and event emitting update functions for\n https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots."
							},
							"fullyImplemented": true,
							"id": 1851,
							"linearizedBaseContracts": [
								1851
							],
							"name": "ERC1967Utils",
							"nameLocation": "457:12:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1558,
										"nodeType": "StructuredDocumentation",
										"src": "660:68:9",
										"text": " @dev Emitted when the implementation is upgraded."
									},
									"eventSelector": "bc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b",
									"id": 1562,
									"name": "Upgraded",
									"nameLocation": "739:8:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1561,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1560,
												"indexed": true,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "764:14:9",
												"nodeType": "VariableDeclaration",
												"scope": 1562,
												"src": "748:30:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1559,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "748:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "747:32:9"
									},
									"src": "733:47:9"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1563,
										"nodeType": "StructuredDocumentation",
										"src": "786:67:9",
										"text": " @dev Emitted when the admin account has changed."
									},
									"eventSelector": "7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f",
									"id": 1569,
									"name": "AdminChanged",
									"nameLocation": "864:12:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1568,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1565,
												"indexed": false,
												"mutability": "mutable",
												"name": "previousAdmin",
												"nameLocation": "885:13:9",
												"nodeType": "VariableDeclaration",
												"scope": 1569,
												"src": "877:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1564,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "877:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1567,
												"indexed": false,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "908:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1569,
												"src": "900:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1566,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "900:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "876:41:9"
									},
									"src": "858:60:9"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1570,
										"nodeType": "StructuredDocumentation",
										"src": "924:59:9",
										"text": " @dev Emitted when the beacon is changed."
									},
									"eventSelector": "1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e",
									"id": 1574,
									"name": "BeaconUpgraded",
									"nameLocation": "994:14:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1573,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1572,
												"indexed": true,
												"mutability": "mutable",
												"name": "beacon",
												"nameLocation": "1025:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1574,
												"src": "1009:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1571,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1009:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1008:24:9"
									},
									"src": "988:45:9"
								},
								{
									"constant": true,
									"documentation": {
										"id": 1575,
										"nodeType": "StructuredDocumentation",
										"src": "1039:170:9",
										"text": " @dev Storage slot with the address of the current implementation.\n This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1."
									},
									"id": 1578,
									"mutability": "constant",
									"name": "IMPLEMENTATION_SLOT",
									"nameLocation": "1305:19:9",
									"nodeType": "VariableDeclaration",
									"scope": 1851,
									"src": "1279:114:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1576,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1279:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307833363038393461313362613161333231303636376338323834393264623938646361336532303736636333373335613932306133636135303564333832626263",
										"id": 1577,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1327:66:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_24440054405305269366569402256811496959409073762505157381672968839269610695612_by_1",
											"typeString": "int_const 2444...(69 digits omitted)...5612"
										},
										"value": "0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc"
									},
									"visibility": "internal"
								},
								{
									"documentation": {
										"id": 1579,
										"nodeType": "StructuredDocumentation",
										"src": "1400:69:9",
										"text": " @dev The `implementation` of the proxy is invalid."
									},
									"errorSelector": "4c9c8ce3",
									"id": 1583,
									"name": "ERC1967InvalidImplementation",
									"nameLocation": "1480:28:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1582,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1581,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "1517:14:9",
												"nodeType": "VariableDeclaration",
												"scope": 1583,
												"src": "1509:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1580,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:24:9"
									},
									"src": "1474:59:9"
								},
								{
									"documentation": {
										"id": 1584,
										"nodeType": "StructuredDocumentation",
										"src": "1539:60:9",
										"text": " @dev The `admin` of the proxy is invalid."
									},
									"errorSelector": "62e77ba2",
									"id": 1588,
									"name": "ERC1967InvalidAdmin",
									"nameLocation": "1610:19:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1587,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1586,
												"mutability": "mutable",
												"name": "admin",
												"nameLocation": "1638:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1588,
												"src": "1630:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1585,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1630:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1629:15:9"
									},
									"src": "1604:41:9"
								},
								{
									"documentation": {
										"id": 1589,
										"nodeType": "StructuredDocumentation",
										"src": "1651:61:9",
										"text": " @dev The `beacon` of the proxy is invalid."
									},
									"errorSelector": "64ced0ec",
									"id": 1593,
									"name": "ERC1967InvalidBeacon",
									"nameLocation": "1723:20:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1592,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1591,
												"mutability": "mutable",
												"name": "beacon",
												"nameLocation": "1752:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1593,
												"src": "1744:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1590,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1744:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1743:16:9"
									},
									"src": "1717:43:9"
								},
								{
									"documentation": {
										"id": 1594,
										"nodeType": "StructuredDocumentation",
										"src": "1766:82:9",
										"text": " @dev An upgrade function sees `msg.value > 0` that may be lost."
									},
									"errorSelector": "b398979f",
									"id": 1596,
									"name": "ERC1967NonPayable",
									"nameLocation": "1859:17:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1595,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1876:2:9"
									},
									"src": "1853:26:9"
								},
								{
									"body": {
										"id": 1608,
										"nodeType": "Block",
										"src": "2018:77:9",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 1604,
																"name": "IMPLEMENTATION_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1578,
																"src": "2062:19:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 1602,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2328,
																"src": "2035:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$2328_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 1603,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2047:14:9",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2250,
															"src": "2035:26:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2224_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 1605,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2035:47:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$2224_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 1606,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2083:5:9",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 2223,
													"src": "2035:53:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1601,
												"id": 1607,
												"nodeType": "Return",
												"src": "2028:60:9"
											}
										]
									},
									"documentation": {
										"id": 1597,
										"nodeType": "StructuredDocumentation",
										"src": "1885:67:9",
										"text": " @dev Returns the current implementation address."
									},
									"id": 1609,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getImplementation",
									"nameLocation": "1966:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1598,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1983:2:9"
									},
									"returnParameters": {
										"id": 1601,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1600,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1609,
												"src": "2009:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1599,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2009:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2008:9:9"
									},
									"scope": 1851,
									"src": "1957:138:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1635,
										"nodeType": "Block",
										"src": "2249:218:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1615,
																"name": "newImplementation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1612,
																"src": "2263:17:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1616,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2281:4:9",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "2263:22:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1617,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2286:6:9",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2263:29:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1618,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2296:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2263:34:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1625,
												"nodeType": "IfStatement",
												"src": "2259:119:9",
												"trueBody": {
													"id": 1624,
													"nodeType": "Block",
													"src": "2299:79:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1621,
																		"name": "newImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1612,
																		"src": "2349:17:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1620,
																	"name": "ERC1967InvalidImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1583,
																	"src": "2320:28:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1622,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2320:47:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1623,
															"nodeType": "RevertStatement",
															"src": "2313:54:9"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1633,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 1629,
																	"name": "IMPLEMENTATION_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1578,
																	"src": "2414:19:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 1626,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2328,
																	"src": "2387:11:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$2328_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 1628,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2399:14:9",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2250,
																"src": "2387:26:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2224_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 1630,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2387:47:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$2224_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 1631,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2435:5:9",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2223,
														"src": "2387:53:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1632,
														"name": "newImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1612,
														"src": "2443:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2387:73:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1634,
												"nodeType": "ExpressionStatement",
												"src": "2387:73:9"
											}
										]
									},
									"documentation": {
										"id": 1610,
										"nodeType": "StructuredDocumentation",
										"src": "2101:80:9",
										"text": " @dev Stores a new address in the EIP1967 implementation slot."
									},
									"id": 1636,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setImplementation",
									"nameLocation": "2195:18:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1613,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1612,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "2222:17:9",
												"nodeType": "VariableDeclaration",
												"scope": 1636,
												"src": "2214:25:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1611,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2214:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2213:27:9"
									},
									"returnParameters": {
										"id": 1614,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2249:0:9"
									},
									"scope": 1851,
									"src": "2186:281:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1669,
										"nodeType": "Block",
										"src": "2860:254:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1645,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1639,
															"src": "2889:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1644,
														"name": "_setImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1636,
														"src": "2870:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1646,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2870:37:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1647,
												"nodeType": "ExpressionStatement",
												"src": "2870:37:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1649,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1639,
															"src": "2931:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1648,
														"name": "Upgraded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1562,
														"src": "2922:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1650,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2922:27:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1651,
												"nodeType": "EmitStatement",
												"src": "2917:32:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1655,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1652,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1641,
															"src": "2964:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1653,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2969:6:9",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2964:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1654,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2978:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2964:15:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1667,
													"nodeType": "Block",
													"src": "3065:43:9",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1664,
																	"name": "_checkNonPayable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1850,
																	"src": "3079:16:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 1665,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3079:18:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1666,
															"nodeType": "ExpressionStatement",
															"src": "3079:18:9"
														}
													]
												},
												"id": 1668,
												"nodeType": "IfStatement",
												"src": "2960:148:9",
												"trueBody": {
													"id": 1663,
													"nodeType": "Block",
													"src": "2981:78:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1659,
																		"name": "newImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1639,
																		"src": "3024:17:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1660,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1641,
																		"src": "3043:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 1656,
																		"name": "Address",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2218,
																		"src": "2995:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Address_$2218_$",
																			"typeString": "type(library Address)"
																		}
																	},
																	"id": 1658,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3003:20:9",
																	"memberName": "functionDelegateCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2137,
																	"src": "2995:28:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function (address,bytes memory) returns (bytes memory)"
																	}
																},
																"id": 1661,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2995:53:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1662,
															"nodeType": "ExpressionStatement",
															"src": "2995:53:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1637,
										"nodeType": "StructuredDocumentation",
										"src": "2473:301:9",
										"text": " @dev Performs implementation upgrade with additional setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-Upgraded} event."
									},
									"id": 1670,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "upgradeToAndCall",
									"nameLocation": "2788:16:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1642,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1639,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "2813:17:9",
												"nodeType": "VariableDeclaration",
												"scope": 1670,
												"src": "2805:25:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1638,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2805:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1641,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2845:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1670,
												"src": "2832:17:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1640,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2832:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2804:46:9"
									},
									"returnParameters": {
										"id": 1643,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2860:0:9"
									},
									"scope": 1851,
									"src": "2779:335:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 1671,
										"nodeType": "StructuredDocumentation",
										"src": "3120:145:9",
										"text": " @dev Storage slot with the admin of the contract.\n This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1."
									},
									"id": 1674,
									"mutability": "constant",
									"name": "ADMIN_SLOT",
									"nameLocation": "3361:10:9",
									"nodeType": "VariableDeclaration",
									"scope": 1851,
									"src": "3335:105:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1672,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "3335:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307862353331323736383461353638623331373361653133623966386136303136653234336536336236653865653131373864366137313738353062356436313033",
										"id": 1673,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3374:66:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_81955473079516046949633743016697847541294818689821282749996681496272635257091_by_1",
											"typeString": "int_const 8195...(69 digits omitted)...7091"
										},
										"value": "0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1686,
										"nodeType": "Block",
										"src": "3844:68:9",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 1682,
																"name": "ADMIN_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1674,
																"src": "3888:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 1680,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2328,
																"src": "3861:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$2328_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 1681,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3873:14:9",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2250,
															"src": "3861:26:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2224_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 1683,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3861:38:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$2224_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 1684,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3900:5:9",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 2223,
													"src": "3861:44:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1679,
												"id": 1685,
												"nodeType": "Return",
												"src": "3854:51:9"
											}
										]
									},
									"documentation": {
										"id": 1675,
										"nodeType": "StructuredDocumentation",
										"src": "3447:340:9",
										"text": " @dev Returns the current admin.\n TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using\n the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`"
									},
									"id": 1687,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAdmin",
									"nameLocation": "3801:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1676,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3809:2:9"
									},
									"returnParameters": {
										"id": 1679,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1678,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1687,
												"src": "3835:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1677,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3835:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3834:9:9"
									},
									"scope": 1851,
									"src": "3792:120:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1717,
										"nodeType": "Block",
										"src": "4039:172:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1698,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1693,
														"name": "newAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1690,
														"src": "4053:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1696,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4073:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1695,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4065:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1694,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4065:7:9",
																"typeDescriptions": {}
															}
														},
														"id": 1697,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4065:10:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4053:22:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1707,
												"nodeType": "IfStatement",
												"src": "4049:91:9",
												"trueBody": {
													"id": 1706,
													"nodeType": "Block",
													"src": "4077:63:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1702,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4126:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1701,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4118:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1700,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4118:7:9",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1703,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4118:10:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1699,
																	"name": "ERC1967InvalidAdmin",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1588,
																	"src": "4098:19:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1704,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4098:31:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1705,
															"nodeType": "RevertStatement",
															"src": "4091:38:9"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1715,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 1711,
																	"name": "ADMIN_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1674,
																	"src": "4176:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 1708,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2328,
																	"src": "4149:11:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$2328_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 1710,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4161:14:9",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2250,
																"src": "4149:26:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2224_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 1712,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4149:38:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$2224_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 1713,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4188:5:9",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2223,
														"src": "4149:44:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1714,
														"name": "newAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1690,
														"src": "4196:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4149:55:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1716,
												"nodeType": "ExpressionStatement",
												"src": "4149:55:9"
											}
										]
									},
									"documentation": {
										"id": 1688,
										"nodeType": "StructuredDocumentation",
										"src": "3918:71:9",
										"text": " @dev Stores a new address in the EIP1967 admin slot."
									},
									"id": 1718,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setAdmin",
									"nameLocation": "4003:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1691,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1690,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "4021:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1718,
												"src": "4013:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1689,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4013:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4012:18:9"
									},
									"returnParameters": {
										"id": 1692,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4039:0:9"
									},
									"scope": 1851,
									"src": "3994:217:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1734,
										"nodeType": "Block",
										"src": "4379:85:9",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1725,
																"name": "getAdmin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1687,
																"src": "4407:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1726,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4407:10:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1727,
															"name": "newAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1721,
															"src": "4419:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1724,
														"name": "AdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1569,
														"src": "4394:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1728,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4394:34:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1729,
												"nodeType": "EmitStatement",
												"src": "4389:39:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1731,
															"name": "newAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1721,
															"src": "4448:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1730,
														"name": "_setAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1718,
														"src": "4438:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1732,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4438:19:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1733,
												"nodeType": "ExpressionStatement",
												"src": "4438:19:9"
											}
										]
									},
									"documentation": {
										"id": 1719,
										"nodeType": "StructuredDocumentation",
										"src": "4217:109:9",
										"text": " @dev Changes the admin of the proxy.\n Emits an {IERC1967-AdminChanged} event."
									},
									"id": 1735,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "changeAdmin",
									"nameLocation": "4340:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1722,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1721,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "4360:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1735,
												"src": "4352:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1720,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4352:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4351:18:9"
									},
									"returnParameters": {
										"id": 1723,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4379:0:9"
									},
									"scope": 1851,
									"src": "4331:133:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 1736,
										"nodeType": "StructuredDocumentation",
										"src": "4470:201:9",
										"text": " @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1."
									},
									"id": 1739,
									"mutability": "constant",
									"name": "BEACON_SLOT",
									"nameLocation": "4767:11:9",
									"nodeType": "VariableDeclaration",
									"scope": 1851,
									"src": "4741:106:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1737,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "4741:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307861336630616437346535343233616562666438306433656634333436353738333335613961373261656165653539666636636233353832623335313333643530",
										"id": 1738,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "4781:66:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_74152234768234802001998023604048924213078445070507226371336425913862612794704_by_1",
											"typeString": "int_const 7415...(69 digits omitted)...4704"
										},
										"value": "0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1751,
										"nodeType": "Block",
										"src": "4963:69:9",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 1747,
																"name": "BEACON_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1739,
																"src": "5007:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 1745,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2328,
																"src": "4980:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$2328_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 1746,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4992:14:9",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2250,
															"src": "4980:26:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2224_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 1748,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4980:39:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$2224_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 1749,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "5020:5:9",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 2223,
													"src": "4980:45:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1744,
												"id": 1750,
												"nodeType": "Return",
												"src": "4973:52:9"
											}
										]
									},
									"documentation": {
										"id": 1740,
										"nodeType": "StructuredDocumentation",
										"src": "4854:51:9",
										"text": " @dev Returns the current beacon."
									},
									"id": 1752,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBeacon",
									"nameLocation": "4919:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1741,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4928:2:9"
									},
									"returnParameters": {
										"id": 1744,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1743,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1752,
												"src": "4954:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1742,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4954:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4953:9:9"
									},
									"scope": 1851,
									"src": "4910:122:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1797,
										"nodeType": "Block",
										"src": "5161:390:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1762,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1758,
																"name": "newBeacon",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1755,
																"src": "5175:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1759,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5185:4:9",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5175:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1760,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5190:6:9",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5175:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1761,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5200:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5175:26:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1768,
												"nodeType": "IfStatement",
												"src": "5171:95:9",
												"trueBody": {
													"id": 1767,
													"nodeType": "Block",
													"src": "5203:63:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1764,
																		"name": "newBeacon",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1755,
																		"src": "5245:9:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1763,
																	"name": "ERC1967InvalidBeacon",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1593,
																	"src": "5224:20:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1765,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5224:31:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1766,
															"nodeType": "RevertStatement",
															"src": "5217:38:9"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1776,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 1772,
																	"name": "BEACON_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1739,
																	"src": "5303:11:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 1769,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2328,
																	"src": "5276:11:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$2328_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 1771,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5288:14:9",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2250,
																"src": "5276:26:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2224_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 1773,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5276:39:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$2224_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 1774,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5316:5:9",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2223,
														"src": "5276:45:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1775,
														"name": "newBeacon",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1755,
														"src": "5324:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5276:57:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1777,
												"nodeType": "ExpressionStatement",
												"src": "5276:57:9"
											},
											{
												"assignments": [
													1779
												],
												"declarations": [
													{
														"constant": false,
														"id": 1779,
														"mutability": "mutable",
														"name": "beaconImplementation",
														"nameLocation": "5352:20:9",
														"nodeType": "VariableDeclaration",
														"scope": 1797,
														"src": "5344:28:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1778,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5344:7:9",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1785,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 1781,
																	"name": "newBeacon",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1755,
																	"src": "5383:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1780,
																"name": "IBeacon",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1861,
																"src": "5375:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IBeacon_$1861_$",
																	"typeString": "type(contract IBeacon)"
																}
															},
															"id": 1782,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5375:18:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBeacon_$1861",
																"typeString": "contract IBeacon"
															}
														},
														"id": 1783,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5394:14:9",
														"memberName": "implementation",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1860,
														"src": "5375:33:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
															"typeString": "function () view external returns (address)"
														}
													},
													"id": 1784,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5375:35:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5344:66:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1790,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1786,
																"name": "beaconImplementation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1779,
																"src": "5424:20:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1787,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5445:4:9",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5424:25:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1788,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5450:6:9",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5424:32:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1789,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5460:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5424:37:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1796,
												"nodeType": "IfStatement",
												"src": "5420:125:9",
												"trueBody": {
													"id": 1795,
													"nodeType": "Block",
													"src": "5463:82:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1792,
																		"name": "beaconImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1779,
																		"src": "5513:20:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1791,
																	"name": "ERC1967InvalidImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1583,
																	"src": "5484:28:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1793,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5484:50:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1794,
															"nodeType": "RevertStatement",
															"src": "5477:57:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1753,
										"nodeType": "StructuredDocumentation",
										"src": "5038:71:9",
										"text": " @dev Stores a new beacon in the EIP1967 beacon slot."
									},
									"id": 1798,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setBeacon",
									"nameLocation": "5123:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1756,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1755,
												"mutability": "mutable",
												"name": "newBeacon",
												"nameLocation": "5142:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1798,
												"src": "5134:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5134:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5133:19:9"
									},
									"returnParameters": {
										"id": 1757,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5161:0:9"
									},
									"scope": 1851,
									"src": "5114:437:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1835,
										"nodeType": "Block",
										"src": "6155:254:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1807,
															"name": "newBeacon",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1801,
															"src": "6176:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1806,
														"name": "_setBeacon",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1798,
														"src": "6165:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1808,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6165:21:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1809,
												"nodeType": "ExpressionStatement",
												"src": "6165:21:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1811,
															"name": "newBeacon",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1801,
															"src": "6216:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1810,
														"name": "BeaconUpgraded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1574,
														"src": "6201:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1812,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6201:25:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1813,
												"nodeType": "EmitStatement",
												"src": "6196:30:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1817,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1814,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1803,
															"src": "6241:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1815,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6246:6:9",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6241:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1816,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6255:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6241:15:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1833,
													"nodeType": "Block",
													"src": "6360:43:9",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1830,
																	"name": "_checkNonPayable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1850,
																	"src": "6374:16:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 1831,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6374:18:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1832,
															"nodeType": "ExpressionStatement",
															"src": "6374:18:9"
														}
													]
												},
												"id": 1834,
												"nodeType": "IfStatement",
												"src": "6237:166:9",
												"trueBody": {
													"id": 1829,
													"nodeType": "Block",
													"src": "6258:96:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"arguments": [
																					{
																						"id": 1822,
																						"name": "newBeacon",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1801,
																						"src": "6309:9:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 1821,
																					"name": "IBeacon",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1861,
																					"src": "6301:7:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_IBeacon_$1861_$",
																						"typeString": "type(contract IBeacon)"
																					}
																				},
																				"id": 1823,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "6301:18:9",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IBeacon_$1861",
																					"typeString": "contract IBeacon"
																				}
																			},
																			"id": 1824,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6320:14:9",
																			"memberName": "implementation",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1860,
																			"src": "6301:33:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																				"typeString": "function () view external returns (address)"
																			}
																		},
																		"id": 1825,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6301:35:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1826,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1803,
																		"src": "6338:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 1818,
																		"name": "Address",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2218,
																		"src": "6272:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Address_$2218_$",
																			"typeString": "type(library Address)"
																		}
																	},
																	"id": 1820,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6280:20:9",
																	"memberName": "functionDelegateCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2137,
																	"src": "6272:28:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function (address,bytes memory) returns (bytes memory)"
																	}
																},
																"id": 1827,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6272:71:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1828,
															"nodeType": "ExpressionStatement",
															"src": "6272:71:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1799,
										"nodeType": "StructuredDocumentation",
										"src": "5557:514:9",
										"text": " @dev Change the beacon and trigger a setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-BeaconUpgraded} event.\n CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n efficiency."
									},
									"id": 1836,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "upgradeBeaconToAndCall",
									"nameLocation": "6085:22:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1804,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1801,
												"mutability": "mutable",
												"name": "newBeacon",
												"nameLocation": "6116:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1836,
												"src": "6108:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1800,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6108:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1803,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6140:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1836,
												"src": "6127:17:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1802,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6127:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6107:38:9"
									},
									"returnParameters": {
										"id": 1805,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6155:0:9"
									},
									"scope": 1851,
									"src": "6076:333:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1849,
										"nodeType": "Block",
										"src": "6634:86:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1843,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1840,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "6648:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1841,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6652:5:9",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "6648:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1842,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6660:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6648:13:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1848,
												"nodeType": "IfStatement",
												"src": "6644:70:9",
												"trueBody": {
													"id": 1847,
													"nodeType": "Block",
													"src": "6663:51:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1844,
																	"name": "ERC1967NonPayable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1596,
																	"src": "6684:17:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1845,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6684:19:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1846,
															"nodeType": "RevertStatement",
															"src": "6677:26:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1837,
										"nodeType": "StructuredDocumentation",
										"src": "6415:178:9",
										"text": " @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n if an upgrade doesn't perform an initialization call."
									},
									"id": 1850,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkNonPayable",
									"nameLocation": "6607:16:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1838,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6623:2:9"
									},
									"returnParameters": {
										"id": 1839,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6634:0:9"
									},
									"scope": 1851,
									"src": "6598:122:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1852,
							"src": "449:6273:9",
							"usedErrors": [
								1583,
								1588,
								1593,
								1596
							],
							"usedEvents": [
								1562,
								1569,
								1574
							]
						}
					],
					"src": "114:6609:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
					"exportedSymbols": {
						"IBeacon": [
							1861
						]
					},
					"id": 1862,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1853,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IBeacon",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1854,
								"nodeType": "StructuredDocumentation",
								"src": "134:79:10",
								"text": " @dev This is the interface that {BeaconProxy} expects of its beacon."
							},
							"fullyImplemented": false,
							"id": 1861,
							"linearizedBaseContracts": [
								1861
							],
							"name": "IBeacon",
							"nameLocation": "224:7:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1855,
										"nodeType": "StructuredDocumentation",
										"src": "238:168:10",
										"text": " @dev Must return an address that can be used as a delegate call target.\n {UpgradeableBeacon} will check that this address is a contract."
									},
									"functionSelector": "5c60da1b",
									"id": 1860,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "implementation",
									"nameLocation": "420:14:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1856,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "434:2:10"
									},
									"returnParameters": {
										"id": 1859,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1858,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1860,
												"src": "460:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1857,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "460:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "459:9:10"
									},
									"scope": 1861,
									"src": "411:58:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1862,
							"src": "214:257:10",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "108:364:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							1939
						]
					},
					"id": 1940,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1863,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1864,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:11",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 1939,
							"linearizedBaseContracts": [
								1939
							],
							"name": "IERC20",
							"nameLocation": "213:6:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1865,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:11",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1873,
									"name": "Transfer",
									"nameLocation": "395:8:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1867,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1873,
												"src": "404:20:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1866,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1869,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 1873,
												"src": "426:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1868,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1871,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1873,
												"src": "446:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1870,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:11"
									},
									"src": "389:72:11"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1874,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:11",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1882,
									"name": "Approval",
									"nameLocation": "626:8:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1881,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1876,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1882,
												"src": "635:21:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1875,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1878,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1882,
												"src": "658:23:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1877,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1880,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1882,
												"src": "683:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1879,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:11"
									},
									"src": "620:78:11"
								},
								{
									"documentation": {
										"id": 1883,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:11",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 1888,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1884,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:11"
									},
									"returnParameters": {
										"id": 1887,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1886,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1888,
												"src": "820:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1885,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:11"
									},
									"scope": 1939,
									"src": "774:55:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1889,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:11",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 1896,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1892,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1891,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1896,
												"src": "930:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1890,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:11"
									},
									"returnParameters": {
										"id": 1895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1894,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1896,
												"src": "970:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1893,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:11"
									},
									"scope": 1939,
									"src": "911:68:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1897,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:11",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 1906,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1902,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1899,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 1906,
												"src": "1221:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1898,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1901,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1906,
												"src": "1233:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1900,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:11"
									},
									"returnParameters": {
										"id": 1905,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1904,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1906,
												"src": "1266:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1903,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:11"
									},
									"scope": 1939,
									"src": "1203:69:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1907,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:11",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 1916,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1912,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1909,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1916,
												"src": "1566:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1908,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1911,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1916,
												"src": "1581:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1910,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:11"
									},
									"returnParameters": {
										"id": 1915,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1914,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1916,
												"src": "1621:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1913,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:11"
									},
									"scope": 1939,
									"src": "1547:83:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1917,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:11",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1926,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1922,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1919,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1926,
												"src": "2325:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1918,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1921,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1926,
												"src": "2342:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1920,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:11"
									},
									"returnParameters": {
										"id": 1925,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1924,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1926,
												"src": "2375:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1923,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:11"
									},
									"scope": 1939,
									"src": "2308:73:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1927,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:11",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1938,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1934,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1929,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1938,
												"src": "2711:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1928,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1931,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 1938,
												"src": "2725:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1930,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1933,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1938,
												"src": "2737:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1932,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:11"
									},
									"returnParameters": {
										"id": 1937,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1936,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1938,
												"src": "2770:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1935,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:11"
									},
									"scope": 1939,
									"src": "2689:87:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1940,
							"src": "203:2575:11",
							"usedErrors": [],
							"usedEvents": [
								1873,
								1882
							]
						}
					],
					"src": "106:2673:11"
				},
				"id": 11
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							1939
						],
						"IERC20Metadata": [
							1965
						]
					},
					"id": 1966,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1941,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:12"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 1943,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1966,
							"sourceUnit": 1940,
							"src": "151:37:12",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1942,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1939,
										"src": "159:6:12",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1945,
										"name": "IERC20",
										"nameLocations": [
											"305:6:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1939,
										"src": "305:6:12"
									},
									"id": 1946,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:12"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1944,
								"nodeType": "StructuredDocumentation",
								"src": "190:86:12",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard."
							},
							"fullyImplemented": false,
							"id": 1965,
							"linearizedBaseContracts": [
								1965,
								1939
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1947,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:12",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 1952,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1948,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:12"
									},
									"returnParameters": {
										"id": 1951,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1950,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1952,
												"src": "416:13:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1949,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:12"
									},
									"scope": 1965,
									"src": "377:54:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1953,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:12",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 1958,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1954,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:12"
									},
									"returnParameters": {
										"id": 1957,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1956,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1958,
												"src": "539:13:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1955,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:12"
									},
									"scope": 1965,
									"src": "498:56:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1959,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:12",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 1964,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1960,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:12"
									},
									"returnParameters": {
										"id": 1963,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1962,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1964,
												"src": "673:5:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1961,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:12"
									},
									"scope": 1965,
									"src": "630:50:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1966,
							"src": "277:405:12",
							"usedErrors": [],
							"usedEvents": [
								1873,
								1882
							]
						}
					],
					"src": "125:558:12"
				},
				"id": 12
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							2218
						]
					},
					"id": 2219,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1967,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:13"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1968,
								"nodeType": "StructuredDocumentation",
								"src": "127:67:13",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 2218,
							"linearizedBaseContracts": [
								2218
							],
							"name": "Address",
							"nameLocation": "203:7:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1969,
										"nodeType": "StructuredDocumentation",
										"src": "217:94:13",
										"text": " @dev The ETH balance of the account is not enough to perform the operation."
									},
									"errorSelector": "cd786059",
									"id": 1973,
									"name": "AddressInsufficientBalance",
									"nameLocation": "322:26:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1972,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1971,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "357:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 1973,
												"src": "349:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1970,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "349:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "348:17:13"
									},
									"src": "316:50:13"
								},
								{
									"documentation": {
										"id": 1974,
										"nodeType": "StructuredDocumentation",
										"src": "372:75:13",
										"text": " @dev There's no code at `target` (it is not a contract)."
									},
									"errorSelector": "9996b315",
									"id": 1978,
									"name": "AddressEmptyCode",
									"nameLocation": "458:16:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1977,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1976,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "483:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1978,
												"src": "475:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1975,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "475:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "474:16:13"
									},
									"src": "452:39:13"
								},
								{
									"documentation": {
										"id": 1979,
										"nodeType": "StructuredDocumentation",
										"src": "497:89:13",
										"text": " @dev A call to an address target failed. The target may have reverted."
									},
									"errorSelector": "1425ea42",
									"id": 1981,
									"name": "FailedInnerCall",
									"nameLocation": "597:15:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1980,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "612:2:13"
									},
									"src": "591:24:13"
								},
								{
									"body": {
										"id": 2021,
										"nodeType": "Block",
										"src": "1602:260:13",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1995,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1991,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1624:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$2218",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$2218",
																		"typeString": "library Address"
																	}
																],
																"id": 1990,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1616:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1989,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1616:7:13",
																	"typeDescriptions": {}
																}
															},
															"id": 1992,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1616:13:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1993,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1630:7:13",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1616:21:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1994,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1986,
														"src": "1640:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1616:30:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2004,
												"nodeType": "IfStatement",
												"src": "1612:109:13",
												"trueBody": {
													"id": 2003,
													"nodeType": "Block",
													"src": "1648:73:13",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1999,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "1704:4:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$2218",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$2218",
																					"typeString": "library Address"
																				}
																			],
																			"id": 1998,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1696:7:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1997,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1696:7:13",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2000,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1696:13:13",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1996,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1973,
																	"src": "1669:26:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 2001,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1669:41:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2002,
															"nodeType": "RevertStatement",
															"src": "1662:48:13"
														}
													]
												}
											},
											{
												"assignments": [
													2006,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 2006,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1737:7:13",
														"nodeType": "VariableDeclaration",
														"scope": 2021,
														"src": "1732:12:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2005,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1732:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 2013,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 2011,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1780:2:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 2007,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1984,
																"src": "1750:9:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 2008,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1760:4:13",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1750:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 2010,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 2009,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1986,
																"src": "1772:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1750:29:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 2012,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1750:33:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1731:52:13"
											},
											{
												"condition": {
													"id": 2015,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1797:8:13",
													"subExpression": {
														"id": 2014,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2006,
														"src": "1798:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2020,
												"nodeType": "IfStatement",
												"src": "1793:63:13",
												"trueBody": {
													"id": 2019,
													"nodeType": "Block",
													"src": "1807:49:13",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2016,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1981,
																	"src": "1828:15:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 2017,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1828:17:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2018,
															"nodeType": "RevertStatement",
															"src": "1821:24:13"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1982,
										"nodeType": "StructuredDocumentation",
										"src": "621:905:13",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 2022,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "1540:9:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1987,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1984,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1566:9:13",
												"nodeType": "VariableDeclaration",
												"scope": 2022,
												"src": "1550:25:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1983,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1550:15:13",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1986,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1585:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 2022,
												"src": "1577:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1985,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1577:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1549:43:13"
									},
									"returnParameters": {
										"id": 1988,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1602:0:13"
									},
									"scope": 2218,
									"src": "1531:331:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2038,
										"nodeType": "Block",
										"src": "2794:62:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2033,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2025,
															"src": "2833:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2034,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2027,
															"src": "2841:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 2035,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2847:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 2032,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2085,
														"src": "2811:21:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256) returns (bytes memory)"
														}
													},
													"id": 2036,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2811:38:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2031,
												"id": 2037,
												"nodeType": "Return",
												"src": "2804:45:13"
											}
										]
									},
									"documentation": {
										"id": 2023,
										"nodeType": "StructuredDocumentation",
										"src": "1868:832:13",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {FailedInnerCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."
									},
									"id": 2039,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "2714:12:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2028,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2025,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2735:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 2039,
												"src": "2727:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2024,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2027,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2756:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 2039,
												"src": "2743:17:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2026,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2743:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2726:35:13"
									},
									"returnParameters": {
										"id": 2031,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2030,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2039,
												"src": "2780:12:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2029,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2780:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2779:14:13"
									},
									"scope": 2218,
									"src": "2705:151:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2084,
										"nodeType": "Block",
										"src": "3293:279:13",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2057,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2053,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3315:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$2218",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$2218",
																		"typeString": "library Address"
																	}
																],
																"id": 2052,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3307:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2051,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3307:7:13",
																	"typeDescriptions": {}
																}
															},
															"id": 2054,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3307:13:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2055,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3321:7:13",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "3307:21:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 2056,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2046,
														"src": "3331:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3307:29:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2066,
												"nodeType": "IfStatement",
												"src": "3303:108:13",
												"trueBody": {
													"id": 2065,
													"nodeType": "Block",
													"src": "3338:73:13",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 2061,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "3394:4:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$2218",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$2218",
																					"typeString": "library Address"
																				}
																			],
																			"id": 2060,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3386:7:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2059,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3386:7:13",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2062,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3386:13:13",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2058,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1973,
																	"src": "3359:26:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 2063,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3359:41:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2064,
															"nodeType": "RevertStatement",
															"src": "3352:48:13"
														}
													]
												}
											},
											{
												"assignments": [
													2068,
													2070
												],
												"declarations": [
													{
														"constant": false,
														"id": 2068,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3426:7:13",
														"nodeType": "VariableDeclaration",
														"scope": 2084,
														"src": "3421:12:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2067,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3421:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2070,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3448:10:13",
														"nodeType": "VariableDeclaration",
														"scope": 2084,
														"src": "3435:23:13",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2069,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3435:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2077,
												"initialValue": {
													"arguments": [
														{
															"id": 2075,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2044,
															"src": "3488:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 2071,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2042,
																"src": "3462:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2072,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3469:4:13",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "3462:11:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 2074,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 2073,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2046,
																"src": "3481:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3462:25:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 2076,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3462:31:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3420:73:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2079,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2042,
															"src": "3537:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2080,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2068,
															"src": "3545:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 2081,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2070,
															"src": "3554:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2078,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2177,
														"src": "3510:26:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 2082,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3510:55:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2050,
												"id": 2083,
												"nodeType": "Return",
												"src": "3503:62:13"
											}
										]
									},
									"documentation": {
										"id": 2040,
										"nodeType": "StructuredDocumentation",
										"src": "2862:313:13",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."
									},
									"id": 2085,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "3189:21:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2047,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2042,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3219:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 2085,
												"src": "3211:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2041,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3211:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2044,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3240:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 2085,
												"src": "3227:17:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2043,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3227:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2046,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3254:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2085,
												"src": "3246:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2045,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3246:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3210:50:13"
									},
									"returnParameters": {
										"id": 2050,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2049,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2085,
												"src": "3279:12:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2048,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3279:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3278:14:13"
									},
									"scope": 2218,
									"src": "3180:392:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2110,
										"nodeType": "Block",
										"src": "3811:154:13",
										"statements": [
											{
												"assignments": [
													2096,
													2098
												],
												"declarations": [
													{
														"constant": false,
														"id": 2096,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3827:7:13",
														"nodeType": "VariableDeclaration",
														"scope": 2110,
														"src": "3822:12:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2095,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3822:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2098,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3849:10:13",
														"nodeType": "VariableDeclaration",
														"scope": 2110,
														"src": "3836:23:13",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2097,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3836:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2103,
												"initialValue": {
													"arguments": [
														{
															"id": 2101,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2090,
															"src": "3881:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 2099,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2088,
															"src": "3863:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2100,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3870:10:13",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "3863:17:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 2102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3863:23:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3821:65:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2105,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2088,
															"src": "3930:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2106,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2096,
															"src": "3938:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 2107,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2098,
															"src": "3947:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2104,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2177,
														"src": "3903:26:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 2108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3903:55:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2094,
												"id": 2109,
												"nodeType": "Return",
												"src": "3896:62:13"
											}
										]
									},
									"documentation": {
										"id": 2086,
										"nodeType": "StructuredDocumentation",
										"src": "3578:128:13",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."
									},
									"id": 2111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "3720:18:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2091,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2088,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3747:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 2111,
												"src": "3739:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2087,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3739:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2090,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3768:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 2111,
												"src": "3755:17:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2089,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3755:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3738:35:13"
									},
									"returnParameters": {
										"id": 2094,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2093,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2111,
												"src": "3797:12:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2092,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3797:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3796:14:13"
									},
									"scope": 2218,
									"src": "3711:254:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2136,
										"nodeType": "Block",
										"src": "4203:156:13",
										"statements": [
											{
												"assignments": [
													2122,
													2124
												],
												"declarations": [
													{
														"constant": false,
														"id": 2122,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4219:7:13",
														"nodeType": "VariableDeclaration",
														"scope": 2136,
														"src": "4214:12:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2121,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4214:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2124,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4241:10:13",
														"nodeType": "VariableDeclaration",
														"scope": 2136,
														"src": "4228:23:13",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2123,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4228:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2129,
												"initialValue": {
													"arguments": [
														{
															"id": 2127,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2116,
															"src": "4275:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 2125,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2114,
															"src": "4255:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2126,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4262:12:13",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "4255:19:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 2128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4255:25:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4213:67:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2131,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2114,
															"src": "4324:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2132,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2122,
															"src": "4332:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 2133,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2124,
															"src": "4341:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2130,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2177,
														"src": "4297:26:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 2134,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4297:55:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2120,
												"id": 2135,
												"nodeType": "Return",
												"src": "4290:62:13"
											}
										]
									},
									"documentation": {
										"id": 2112,
										"nodeType": "StructuredDocumentation",
										"src": "3971:130:13",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."
									},
									"id": 2137,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "4115:20:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2114,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4144:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 2137,
												"src": "4136:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4136:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2116,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4165:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 2137,
												"src": "4152:17:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2115,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4152:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4135:35:13"
									},
									"returnParameters": {
										"id": 2120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2119,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2137,
												"src": "4189:12:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2118,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4189:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4188:14:13"
									},
									"scope": 2218,
									"src": "4106:253:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2176,
										"nodeType": "Block",
										"src": "4783:424:13",
										"statements": [
											{
												"condition": {
													"id": 2150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4797:8:13",
													"subExpression": {
														"id": 2149,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2142,
														"src": "4798:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2174,
													"nodeType": "Block",
													"src": "4857:344:13",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 2165,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2159,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 2156,
																			"name": "returndata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2144,
																			"src": "5045:10:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 2157,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5056:6:13",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5045:17:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 2158,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5066:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5045:22:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2164,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"id": 2160,
																				"name": "target",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2140,
																				"src": "5071:6:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 2161,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5078:4:13",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "5071:11:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 2162,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5083:6:13",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5071:18:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 2163,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5093:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5071:23:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "5045:49:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2171,
															"nodeType": "IfStatement",
															"src": "5041:119:13",
															"trueBody": {
																"id": 2170,
																"nodeType": "Block",
																"src": "5096:64:13",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 2167,
																					"name": "target",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2140,
																					"src": "5138:6:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 2166,
																				"name": "AddressEmptyCode",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1978,
																				"src": "5121:16:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																					"typeString": "function (address) pure"
																				}
																			},
																			"id": 2168,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5121:24:13",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2169,
																		"nodeType": "RevertStatement",
																		"src": "5114:31:13"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 2172,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2144,
																"src": "5180:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 2148,
															"id": 2173,
															"nodeType": "Return",
															"src": "5173:17:13"
														}
													]
												},
												"id": 2175,
												"nodeType": "IfStatement",
												"src": "4793:408:13",
												"trueBody": {
													"id": 2155,
													"nodeType": "Block",
													"src": "4807:44:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2152,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2144,
																		"src": "4829:10:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 2151,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2217,
																	"src": "4821:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 2153,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4821:19:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2154,
															"nodeType": "ExpressionStatement",
															"src": "4821:19:13"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2138,
										"nodeType": "StructuredDocumentation",
										"src": "4365:255:13",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n unsuccessful call."
									},
									"id": 2177,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "4634:26:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2140,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4678:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 2177,
												"src": "4670:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2139,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4670:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2142,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "4699:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 2177,
												"src": "4694:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2141,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4694:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2144,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "4729:10:13",
												"nodeType": "VariableDeclaration",
												"scope": 2177,
												"src": "4716:23:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2143,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4716:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4660:85:13"
									},
									"returnParameters": {
										"id": 2148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2147,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2177,
												"src": "4769:12:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2146,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4769:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4768:14:13"
									},
									"scope": 2218,
									"src": "4625:582:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2198,
										"nodeType": "Block",
										"src": "5509:122:13",
										"statements": [
											{
												"condition": {
													"id": 2188,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5523:8:13",
													"subExpression": {
														"id": 2187,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2180,
														"src": "5524:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2196,
													"nodeType": "Block",
													"src": "5583:42:13",
													"statements": [
														{
															"expression": {
																"id": 2194,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2182,
																"src": "5604:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 2186,
															"id": 2195,
															"nodeType": "Return",
															"src": "5597:17:13"
														}
													]
												},
												"id": 2197,
												"nodeType": "IfStatement",
												"src": "5519:106:13",
												"trueBody": {
													"id": 2193,
													"nodeType": "Block",
													"src": "5533:44:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2190,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2182,
																		"src": "5555:10:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 2189,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2217,
																	"src": "5547:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 2191,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5547:19:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2192,
															"nodeType": "ExpressionStatement",
															"src": "5547:19:13"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2178,
										"nodeType": "StructuredDocumentation",
										"src": "5213:189:13",
										"text": " @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {FailedInnerCall} error."
									},
									"id": 2199,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "5416:16:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2180,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "5438:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 2199,
												"src": "5433:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2179,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5433:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2182,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5460:10:13",
												"nodeType": "VariableDeclaration",
												"scope": 2199,
												"src": "5447:23:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2181,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5447:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5432:39:13"
									},
									"returnParameters": {
										"id": 2186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2185,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2199,
												"src": "5495:12:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2184,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5495:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5494:14:13"
									},
									"scope": 2218,
									"src": "5407:224:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2216,
										"nodeType": "Block",
										"src": "5798:461:13",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2205,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2202,
															"src": "5874:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2206,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5885:6:13",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5874:17:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2207,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5894:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5874:21:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2214,
													"nodeType": "Block",
													"src": "6204:49:13",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2211,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1981,
																	"src": "6225:15:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 2212,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6225:17:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2213,
															"nodeType": "RevertStatement",
															"src": "6218:24:13"
														}
													]
												},
												"id": 2215,
												"nodeType": "IfStatement",
												"src": "5870:383:13",
												"trueBody": {
													"id": 2210,
													"nodeType": "Block",
													"src": "5897:301:13",
													"statements": [
														{
															"AST": {
																"nativeSrc": "6055:133:13",
																"nodeType": "YulBlock",
																"src": "6055:133:13",
																"statements": [
																	{
																		"nativeSrc": "6073:40:13",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6073:40:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "6102:10:13",
																					"nodeType": "YulIdentifier",
																					"src": "6102:10:13"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "6096:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "6096:5:13"
																			},
																			"nativeSrc": "6096:17:13",
																			"nodeType": "YulFunctionCall",
																			"src": "6096:17:13"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "6077:15:13",
																				"nodeType": "YulTypedName",
																				"src": "6077:15:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "6141:2:13",
																							"nodeType": "YulLiteral",
																							"src": "6141:2:13",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "6145:10:13",
																							"nodeType": "YulIdentifier",
																							"src": "6145:10:13"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "6137:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "6137:3:13"
																					},
																					"nativeSrc": "6137:19:13",
																					"nodeType": "YulFunctionCall",
																					"src": "6137:19:13"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "6158:15:13",
																					"nodeType": "YulIdentifier",
																					"src": "6158:15:13"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6130:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "6130:6:13"
																			},
																			"nativeSrc": "6130:44:13",
																			"nodeType": "YulFunctionCall",
																			"src": "6130:44:13"
																		},
																		"nativeSrc": "6130:44:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "6130:44:13"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "cancun",
															"externalReferences": [
																{
																	"declaration": 2202,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6102:10:13",
																	"valueSize": 1
																},
																{
																	"declaration": 2202,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6145:10:13",
																	"valueSize": 1
																}
															],
															"id": 2209,
															"nodeType": "InlineAssembly",
															"src": "6046:142:13"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2200,
										"nodeType": "StructuredDocumentation",
										"src": "5637:101:13",
										"text": " @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}."
									},
									"id": 2217,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "5752:7:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2202,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5773:10:13",
												"nodeType": "VariableDeclaration",
												"scope": 2217,
												"src": "5760:23:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2201,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5760:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5759:25:13"
									},
									"returnParameters": {
										"id": 2204,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5798:0:13"
									},
									"scope": 2218,
									"src": "5743:516:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 2219,
							"src": "195:6066:13",
							"usedErrors": [
								1973,
								1978,
								1981
							],
							"usedEvents": []
						}
					],
					"src": "101:6161:13"
				},
				"id": 13
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/StorageSlot.sol",
					"exportedSymbols": {
						"StorageSlot": [
							2328
						]
					},
					"id": 2329,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2220,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "193:24:14"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "StorageSlot",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2221,
								"nodeType": "StructuredDocumentation",
								"src": "219:1025:14",
								"text": " @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 2328,
							"linearizedBaseContracts": [
								2328
							],
							"name": "StorageSlot",
							"nameLocation": "1253:11:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "StorageSlot.AddressSlot",
									"id": 2224,
									"members": [
										{
											"constant": false,
											"id": 2223,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1308:5:14",
											"nodeType": "VariableDeclaration",
											"scope": 2224,
											"src": "1300:13:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2222,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1300:7:14",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressSlot",
									"nameLocation": "1278:11:14",
									"nodeType": "StructDefinition",
									"scope": 2328,
									"src": "1271:49:14",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BooleanSlot",
									"id": 2227,
									"members": [
										{
											"constant": false,
											"id": 2226,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1360:5:14",
											"nodeType": "VariableDeclaration",
											"scope": 2227,
											"src": "1355:10:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 2225,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1355:4:14",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BooleanSlot",
									"nameLocation": "1333:11:14",
									"nodeType": "StructDefinition",
									"scope": 2328,
									"src": "1326:46:14",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Bytes32Slot",
									"id": 2230,
									"members": [
										{
											"constant": false,
											"id": 2229,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1415:5:14",
											"nodeType": "VariableDeclaration",
											"scope": 2230,
											"src": "1407:13:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 2228,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1407:7:14",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Bytes32Slot",
									"nameLocation": "1385:11:14",
									"nodeType": "StructDefinition",
									"scope": 2328,
									"src": "1378:49:14",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Uint256Slot",
									"id": 2233,
									"members": [
										{
											"constant": false,
											"id": 2232,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1470:5:14",
											"nodeType": "VariableDeclaration",
											"scope": 2233,
											"src": "1462:13:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2231,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1462:7:14",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Uint256Slot",
									"nameLocation": "1440:11:14",
									"nodeType": "StructDefinition",
									"scope": 2328,
									"src": "1433:49:14",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.StringSlot",
									"id": 2236,
									"members": [
										{
											"constant": false,
											"id": 2235,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1523:5:14",
											"nodeType": "VariableDeclaration",
											"scope": 2236,
											"src": "1516:12:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 2234,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "1516:6:14",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "StringSlot",
									"nameLocation": "1495:10:14",
									"nodeType": "StructDefinition",
									"scope": 2328,
									"src": "1488:47:14",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BytesSlot",
									"id": 2239,
									"members": [
										{
											"constant": false,
											"id": 2238,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1574:5:14",
											"nodeType": "VariableDeclaration",
											"scope": 2239,
											"src": "1568:11:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 2237,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "1568:5:14",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BytesSlot",
									"nameLocation": "1548:9:14",
									"nodeType": "StructDefinition",
									"scope": 2328,
									"src": "1541:45:14",
									"visibility": "public"
								},
								{
									"body": {
										"id": 2249,
										"nodeType": "Block",
										"src": "1768:106:14",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1830:38:14",
													"nodeType": "YulBlock",
													"src": "1830:38:14",
													"statements": [
														{
															"nativeSrc": "1844:14:14",
															"nodeType": "YulAssignment",
															"src": "1844:14:14",
															"value": {
																"name": "slot",
																"nativeSrc": "1854:4:14",
																"nodeType": "YulIdentifier",
																"src": "1854:4:14"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "1844:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "1844:6:14"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2246,
														"isOffset": false,
														"isSlot": true,
														"src": "1844:6:14",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2242,
														"isOffset": false,
														"isSlot": false,
														"src": "1854:4:14",
														"valueSize": 1
													}
												],
												"id": 2248,
												"nodeType": "InlineAssembly",
												"src": "1821:47:14"
											}
										]
									},
									"documentation": {
										"id": 2240,
										"nodeType": "StructuredDocumentation",
										"src": "1592:87:14",
										"text": " @dev Returns an `AddressSlot` with member `value` located at `slot`."
									},
									"id": 2250,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAddressSlot",
									"nameLocation": "1693:14:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2242,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "1716:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 2250,
												"src": "1708:12:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2241,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1708:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1707:14:14"
									},
									"returnParameters": {
										"id": 2247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2246,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1765:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2250,
												"src": "1745:21:14",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSlot_$2224_storage_ptr",
													"typeString": "struct StorageSlot.AddressSlot"
												},
												"typeName": {
													"id": 2245,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2244,
														"name": "AddressSlot",
														"nameLocations": [
															"1745:11:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2224,
														"src": "1745:11:14"
													},
													"referencedDeclaration": 2224,
													"src": "1745:11:14",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSlot_$2224_storage_ptr",
														"typeString": "struct StorageSlot.AddressSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1744:23:14"
									},
									"scope": 2328,
									"src": "1684:190:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2260,
										"nodeType": "Block",
										"src": "2056:106:14",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2118:38:14",
													"nodeType": "YulBlock",
													"src": "2118:38:14",
													"statements": [
														{
															"nativeSrc": "2132:14:14",
															"nodeType": "YulAssignment",
															"src": "2132:14:14",
															"value": {
																"name": "slot",
																"nativeSrc": "2142:4:14",
																"nodeType": "YulIdentifier",
																"src": "2142:4:14"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2132:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "2132:6:14"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2257,
														"isOffset": false,
														"isSlot": true,
														"src": "2132:6:14",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2253,
														"isOffset": false,
														"isSlot": false,
														"src": "2142:4:14",
														"valueSize": 1
													}
												],
												"id": 2259,
												"nodeType": "InlineAssembly",
												"src": "2109:47:14"
											}
										]
									},
									"documentation": {
										"id": 2251,
										"nodeType": "StructuredDocumentation",
										"src": "1880:87:14",
										"text": " @dev Returns an `BooleanSlot` with member `value` located at `slot`."
									},
									"id": 2261,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBooleanSlot",
									"nameLocation": "1981:14:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2253,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2004:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 2261,
												"src": "1996:12:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2252,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1996:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1995:14:14"
									},
									"returnParameters": {
										"id": 2258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2257,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2053:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2261,
												"src": "2033:21:14",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BooleanSlot_$2227_storage_ptr",
													"typeString": "struct StorageSlot.BooleanSlot"
												},
												"typeName": {
													"id": 2256,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2255,
														"name": "BooleanSlot",
														"nameLocations": [
															"2033:11:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2227,
														"src": "2033:11:14"
													},
													"referencedDeclaration": 2227,
													"src": "2033:11:14",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BooleanSlot_$2227_storage_ptr",
														"typeString": "struct StorageSlot.BooleanSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2032:23:14"
									},
									"scope": 2328,
									"src": "1972:190:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2271,
										"nodeType": "Block",
										"src": "2344:106:14",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2406:38:14",
													"nodeType": "YulBlock",
													"src": "2406:38:14",
													"statements": [
														{
															"nativeSrc": "2420:14:14",
															"nodeType": "YulAssignment",
															"src": "2420:14:14",
															"value": {
																"name": "slot",
																"nativeSrc": "2430:4:14",
																"nodeType": "YulIdentifier",
																"src": "2430:4:14"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2420:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "2420:6:14"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2268,
														"isOffset": false,
														"isSlot": true,
														"src": "2420:6:14",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2264,
														"isOffset": false,
														"isSlot": false,
														"src": "2430:4:14",
														"valueSize": 1
													}
												],
												"id": 2270,
												"nodeType": "InlineAssembly",
												"src": "2397:47:14"
											}
										]
									},
									"documentation": {
										"id": 2262,
										"nodeType": "StructuredDocumentation",
										"src": "2168:87:14",
										"text": " @dev Returns an `Bytes32Slot` with member `value` located at `slot`."
									},
									"id": 2272,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytes32Slot",
									"nameLocation": "2269:14:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2264,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2292:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 2272,
												"src": "2284:12:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2263,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2284:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2283:14:14"
									},
									"returnParameters": {
										"id": 2269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2268,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2341:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2272,
												"src": "2321:21:14",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Slot_$2230_storage_ptr",
													"typeString": "struct StorageSlot.Bytes32Slot"
												},
												"typeName": {
													"id": 2267,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2266,
														"name": "Bytes32Slot",
														"nameLocations": [
															"2321:11:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2230,
														"src": "2321:11:14"
													},
													"referencedDeclaration": 2230,
													"src": "2321:11:14",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Slot_$2230_storage_ptr",
														"typeString": "struct StorageSlot.Bytes32Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2320:23:14"
									},
									"scope": 2328,
									"src": "2260:190:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2282,
										"nodeType": "Block",
										"src": "2632:106:14",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2694:38:14",
													"nodeType": "YulBlock",
													"src": "2694:38:14",
													"statements": [
														{
															"nativeSrc": "2708:14:14",
															"nodeType": "YulAssignment",
															"src": "2708:14:14",
															"value": {
																"name": "slot",
																"nativeSrc": "2718:4:14",
																"nodeType": "YulIdentifier",
																"src": "2718:4:14"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2708:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "2708:6:14"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2279,
														"isOffset": false,
														"isSlot": true,
														"src": "2708:6:14",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2275,
														"isOffset": false,
														"isSlot": false,
														"src": "2718:4:14",
														"valueSize": 1
													}
												],
												"id": 2281,
												"nodeType": "InlineAssembly",
												"src": "2685:47:14"
											}
										]
									},
									"documentation": {
										"id": 2273,
										"nodeType": "StructuredDocumentation",
										"src": "2456:87:14",
										"text": " @dev Returns an `Uint256Slot` with member `value` located at `slot`."
									},
									"id": 2283,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUint256Slot",
									"nameLocation": "2557:14:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2275,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2580:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 2283,
												"src": "2572:12:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2274,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2572:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2571:14:14"
									},
									"returnParameters": {
										"id": 2280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2279,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2629:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2283,
												"src": "2609:21:14",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Uint256Slot_$2233_storage_ptr",
													"typeString": "struct StorageSlot.Uint256Slot"
												},
												"typeName": {
													"id": 2278,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2277,
														"name": "Uint256Slot",
														"nameLocations": [
															"2609:11:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2233,
														"src": "2609:11:14"
													},
													"referencedDeclaration": 2233,
													"src": "2609:11:14",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Uint256Slot_$2233_storage_ptr",
														"typeString": "struct StorageSlot.Uint256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2608:23:14"
									},
									"scope": 2328,
									"src": "2548:190:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2293,
										"nodeType": "Block",
										"src": "2917:106:14",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2979:38:14",
													"nodeType": "YulBlock",
													"src": "2979:38:14",
													"statements": [
														{
															"nativeSrc": "2993:14:14",
															"nodeType": "YulAssignment",
															"src": "2993:14:14",
															"value": {
																"name": "slot",
																"nativeSrc": "3003:4:14",
																"nodeType": "YulIdentifier",
																"src": "3003:4:14"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2993:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "2993:6:14"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2290,
														"isOffset": false,
														"isSlot": true,
														"src": "2993:6:14",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2286,
														"isOffset": false,
														"isSlot": false,
														"src": "3003:4:14",
														"valueSize": 1
													}
												],
												"id": 2292,
												"nodeType": "InlineAssembly",
												"src": "2970:47:14"
											}
										]
									},
									"documentation": {
										"id": 2284,
										"nodeType": "StructuredDocumentation",
										"src": "2744:86:14",
										"text": " @dev Returns an `StringSlot` with member `value` located at `slot`."
									},
									"id": 2294,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "2844:13:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2286,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2866:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 2294,
												"src": "2858:12:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2285,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2858:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2857:14:14"
									},
									"returnParameters": {
										"id": 2291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2290,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2914:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2294,
												"src": "2895:20:14",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$2236_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 2289,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2288,
														"name": "StringSlot",
														"nameLocations": [
															"2895:10:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2236,
														"src": "2895:10:14"
													},
													"referencedDeclaration": 2236,
													"src": "2895:10:14",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$2236_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2894:22:14"
									},
									"scope": 2328,
									"src": "2835:188:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2304,
										"nodeType": "Block",
										"src": "3225:112:14",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3287:44:14",
													"nodeType": "YulBlock",
													"src": "3287:44:14",
													"statements": [
														{
															"nativeSrc": "3301:20:14",
															"nodeType": "YulAssignment",
															"src": "3301:20:14",
															"value": {
																"name": "store.slot",
																"nativeSrc": "3311:10:14",
																"nodeType": "YulIdentifier",
																"src": "3311:10:14"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3301:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "3301:6:14"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2301,
														"isOffset": false,
														"isSlot": true,
														"src": "3301:6:14",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2297,
														"isOffset": false,
														"isSlot": true,
														"src": "3311:10:14",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 2303,
												"nodeType": "InlineAssembly",
												"src": "3278:53:14"
											}
										]
									},
									"documentation": {
										"id": 2295,
										"nodeType": "StructuredDocumentation",
										"src": "3029:101:14",
										"text": " @dev Returns an `StringSlot` representation of the string storage pointer `store`."
									},
									"id": 2305,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "3144:13:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2297,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "3173:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 2305,
												"src": "3158:20:14",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2296,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3158:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3157:22:14"
									},
									"returnParameters": {
										"id": 2302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2301,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3222:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2305,
												"src": "3203:20:14",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$2236_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 2300,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2299,
														"name": "StringSlot",
														"nameLocations": [
															"3203:10:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2236,
														"src": "3203:10:14"
													},
													"referencedDeclaration": 2236,
													"src": "3203:10:14",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$2236_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3202:22:14"
									},
									"scope": 2328,
									"src": "3135:202:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2315,
										"nodeType": "Block",
										"src": "3513:106:14",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3575:38:14",
													"nodeType": "YulBlock",
													"src": "3575:38:14",
													"statements": [
														{
															"nativeSrc": "3589:14:14",
															"nodeType": "YulAssignment",
															"src": "3589:14:14",
															"value": {
																"name": "slot",
																"nativeSrc": "3599:4:14",
																"nodeType": "YulIdentifier",
																"src": "3599:4:14"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3589:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "3589:6:14"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2312,
														"isOffset": false,
														"isSlot": true,
														"src": "3589:6:14",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2308,
														"isOffset": false,
														"isSlot": false,
														"src": "3599:4:14",
														"valueSize": 1
													}
												],
												"id": 2314,
												"nodeType": "InlineAssembly",
												"src": "3566:47:14"
											}
										]
									},
									"documentation": {
										"id": 2306,
										"nodeType": "StructuredDocumentation",
										"src": "3343:85:14",
										"text": " @dev Returns an `BytesSlot` with member `value` located at `slot`."
									},
									"id": 2316,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "3442:12:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2309,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2308,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "3463:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 2316,
												"src": "3455:12:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2307,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3455:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3454:14:14"
									},
									"returnParameters": {
										"id": 2313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2312,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3510:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2316,
												"src": "3492:19:14",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$2239_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 2311,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2310,
														"name": "BytesSlot",
														"nameLocations": [
															"3492:9:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2239,
														"src": "3492:9:14"
													},
													"referencedDeclaration": 2239,
													"src": "3492:9:14",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$2239_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3491:21:14"
									},
									"scope": 2328,
									"src": "3433:186:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2326,
										"nodeType": "Block",
										"src": "3816:112:14",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3878:44:14",
													"nodeType": "YulBlock",
													"src": "3878:44:14",
													"statements": [
														{
															"nativeSrc": "3892:20:14",
															"nodeType": "YulAssignment",
															"src": "3892:20:14",
															"value": {
																"name": "store.slot",
																"nativeSrc": "3902:10:14",
																"nodeType": "YulIdentifier",
																"src": "3902:10:14"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3892:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "3892:6:14"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2323,
														"isOffset": false,
														"isSlot": true,
														"src": "3892:6:14",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2319,
														"isOffset": false,
														"isSlot": true,
														"src": "3902:10:14",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 2325,
												"nodeType": "InlineAssembly",
												"src": "3869:53:14"
											}
										]
									},
									"documentation": {
										"id": 2317,
										"nodeType": "StructuredDocumentation",
										"src": "3625:99:14",
										"text": " @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."
									},
									"id": 2327,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "3738:12:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2320,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2319,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "3765:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 2327,
												"src": "3751:19:14",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2318,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3751:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3750:21:14"
									},
									"returnParameters": {
										"id": 2324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2323,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3813:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2327,
												"src": "3795:19:14",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$2239_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 2322,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2321,
														"name": "BytesSlot",
														"nameLocations": [
															"3795:9:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2239,
														"src": "3795:9:14"
													},
													"referencedDeclaration": 2239,
													"src": "3795:9:14",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$2239_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3794:21:14"
									},
									"scope": 2328,
									"src": "3729:199:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2329,
							"src": "1245:2685:14",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "193:3738:14"
				},
				"id": 14
			},
			"contracts/CampToken.sol": {
				"ast": {
					"absolutePath": "contracts/CampToken.sol",
					"exportedSymbols": {
						"AggregatorV3Interface": [
							45
						],
						"CampToken": [
							2649
						],
						"ContextUpgradeable": [
							1401
						],
						"ERC1967Utils": [
							1851
						],
						"ERC20BurnableUpgradeable": [
							1355
						],
						"ERC20Upgradeable": [
							1293
						],
						"IERC1822Proxiable": [
							1411
						],
						"IERC20": [
							1939
						],
						"IERC20Errors": [
							1453
						],
						"IERC20Metadata": [
							1965
						],
						"Initializable": [
							494
						],
						"OwnableUpgradeable": [
							240
						],
						"UUPSUpgradeable": [
							676
						]
					},
					"id": 2650,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2330,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".12",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:32:15"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
							"id": 2331,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2650,
							"sourceUnit": 1294,
							"src": "66:78:15",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol",
							"id": 2332,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2650,
							"sourceUnit": 1356,
							"src": "145:97:15",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
							"id": 2333,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2650,
							"sourceUnit": 241,
							"src": "243:75:15",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"id": 2334,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2650,
							"sourceUnit": 495,
							"src": "319:75:15",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
							"id": 2335,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2650,
							"sourceUnit": 677,
							"src": "395:77:15",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
							"file": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
							"id": 2337,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2650,
							"sourceUnit": 46,
							"src": "473:107:15",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2336,
										"name": "AggregatorV3Interface",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 45,
										"src": "482:21:15",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2338,
										"name": "Initializable",
										"nameLocations": [
											"604:13:15"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 494,
										"src": "604:13:15"
									},
									"id": 2339,
									"nodeType": "InheritanceSpecifier",
									"src": "604:13:15"
								},
								{
									"baseName": {
										"id": 2340,
										"name": "ERC20Upgradeable",
										"nameLocations": [
											"619:16:15"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1293,
										"src": "619:16:15"
									},
									"id": 2341,
									"nodeType": "InheritanceSpecifier",
									"src": "619:16:15"
								},
								{
									"baseName": {
										"id": 2342,
										"name": "ERC20BurnableUpgradeable",
										"nameLocations": [
											"637:24:15"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1355,
										"src": "637:24:15"
									},
									"id": 2343,
									"nodeType": "InheritanceSpecifier",
									"src": "637:24:15"
								},
								{
									"baseName": {
										"id": 2344,
										"name": "OwnableUpgradeable",
										"nameLocations": [
											"663:18:15"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 240,
										"src": "663:18:15"
									},
									"id": 2345,
									"nodeType": "InheritanceSpecifier",
									"src": "663:18:15"
								},
								{
									"baseName": {
										"id": 2346,
										"name": "UUPSUpgradeable",
										"nameLocations": [
											"683:15:15"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 676,
										"src": "683:15:15"
									},
									"id": 2347,
									"nodeType": "InheritanceSpecifier",
									"src": "683:15:15"
								}
							],
							"canonicalName": "CampToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2649,
							"linearizedBaseContracts": [
								2649,
								676,
								1411,
								240,
								1355,
								1293,
								1453,
								1965,
								1939,
								1401,
								494
							],
							"name": "CampToken",
							"nameLocation": "591:9:15",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 2350,
									"mutability": "mutable",
									"name": "ETH_USD",
									"nameLocation": "758:7:15",
									"nodeType": "VariableDeclaration",
									"scope": 2649,
									"src": "727:38:15",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
										"typeString": "contract AggregatorV3Interface"
									},
									"typeName": {
										"id": 2349,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 2348,
											"name": "AggregatorV3Interface",
											"nameLocations": [
												"727:21:15"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 45,
											"src": "727:21:15"
										},
										"referencedDeclaration": 45,
										"src": "727:21:15",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
											"typeString": "contract AggregatorV3Interface"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2353,
									"mutability": "mutable",
									"name": "USD_JPY",
									"nameLocation": "800:7:15",
									"nodeType": "VariableDeclaration",
									"scope": 2649,
									"src": "769:38:15",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
										"typeString": "contract AggregatorV3Interface"
									},
									"typeName": {
										"id": 2352,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 2351,
											"name": "AggregatorV3Interface",
											"nameLocations": [
												"769:21:15"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 45,
											"src": "769:21:15"
										},
										"referencedDeclaration": 45,
										"src": "769:21:15",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
											"typeString": "contract AggregatorV3Interface"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2357,
									"mutability": "mutable",
									"name": "token_balances",
									"nameLocation": "848:14:15",
									"nodeType": "VariableDeclaration",
									"scope": 2649,
									"src": "811:51:15",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 2356,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2354,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "819:7:15",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "811:27:15",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2355,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "830:7:15",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2375,
										"nodeType": "Block",
										"src": "881:482:15",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2360,
														"name": "_disableInitializers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 462,
														"src": "887:20:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2361,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "887:22:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2362,
												"nodeType": "ExpressionStatement",
												"src": "887:22:15"
											},
											{
												"documentation": "-----------------------------------------------------------------\nETH/USD : https://data.chain.link/feeds/ethereum/mainnet/eth-usd\nUSD/JPY : https://data.chain.link/feeds/ethereum/mainnet/jpy-usd\n------------------------------------------------------------------ ",
												"expression": {
													"id": 2367,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2363,
														"name": "ETH_USD",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2350,
														"src": "1202:7:15",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
															"typeString": "contract AggregatorV3Interface"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "307836393441413137363933353732313544453446414330383162663166333039614443333235333036",
																"id": 2365,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1234:42:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"value": "0x694AA1769357215DE4FAC081bf1f309aDC325306"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 2364,
															"name": "AggregatorV3Interface",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 45,
															"src": "1212:21:15",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$45_$",
																"typeString": "type(contract AggregatorV3Interface)"
															}
														},
														"id": 2366,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1212:65:15",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
															"typeString": "contract AggregatorV3Interface"
														}
													},
													"src": "1202:75:15",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
														"typeString": "contract AggregatorV3Interface"
													}
												},
												"id": 2368,
												"nodeType": "ExpressionStatement",
												"src": "1202:75:15"
											},
											{
												"expression": {
													"id": 2373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2369,
														"name": "USD_JPY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2353,
														"src": "1283:7:15",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
															"typeString": "contract AggregatorV3Interface"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "307838413661663242373546323338333141446339373363653632383865353332394636334438366336",
																"id": 2371,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1315:42:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"value": "0x8A6af2B75F23831ADc973ce6288e5329F63D86c6"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 2370,
															"name": "AggregatorV3Interface",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 45,
															"src": "1293:21:15",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$45_$",
																"typeString": "type(contract AggregatorV3Interface)"
															}
														},
														"id": 2372,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1293:65:15",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
															"typeString": "contract AggregatorV3Interface"
														}
													},
													"src": "1283:75:15",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
														"typeString": "contract AggregatorV3Interface"
													}
												},
												"id": 2374,
												"nodeType": "ExpressionStatement",
												"src": "1283:75:15"
											}
										]
									},
									"id": 2376,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2358,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "878:2:15"
									},
									"returnParameters": {
										"id": 2359,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "881:0:15"
									},
									"scope": 2649,
									"src": "867:496:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2398,
										"nodeType": "Block",
										"src": "1428:135:15",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "43616d70546f6b656e",
															"id": 2384,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1447:11:15",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_990ad41bdf00e82fae8bb7b648d548eca3e9f17b2733b34699773b7035ae0240",
																"typeString": "literal_string \"CampToken\""
															},
															"value": "CampToken"
														},
														{
															"hexValue": "43544b",
															"id": 2385,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1460:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f6bd6cf690ce26ffeed1fa0d26be47cb0df7bc2b5039956072dde5a0f356314a",
																"typeString": "literal_string \"CTK\""
															},
															"value": "CTK"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_990ad41bdf00e82fae8bb7b648d548eca3e9f17b2733b34699773b7035ae0240",
																"typeString": "literal_string \"CampToken\""
															},
															{
																"typeIdentifier": "t_stringliteral_f6bd6cf690ce26ffeed1fa0d26be47cb0df7bc2b5039956072dde5a0f356314a",
																"typeString": "literal_string \"CTK\""
															}
														],
														"id": 2383,
														"name": "__ERC20_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 744,
														"src": "1434:12:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory,string memory)"
														}
													},
													"id": 2386,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1434:32:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2387,
												"nodeType": "ExpressionStatement",
												"src": "1434:32:15"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2388,
														"name": "__ERC20Burnable_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1314,
														"src": "1472:20:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2389,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1472:22:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2390,
												"nodeType": "ExpressionStatement",
												"src": "1472:22:15"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2392,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2378,
															"src": "1515:12:15",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2391,
														"name": "__Ownable_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 100,
														"src": "1500:14:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2393,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1500:28:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2394,
												"nodeType": "ExpressionStatement",
												"src": "1500:28:15"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2395,
														"name": "__UUPSUpgradeable_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 548,
														"src": "1534:22:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1534:24:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2397,
												"nodeType": "ExpressionStatement",
												"src": "1534:24:15"
											}
										]
									},
									"functionSelector": "c4d66de8",
									"id": 2399,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2381,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2380,
												"name": "initializer",
												"nameLocations": [
													"1409:11:15"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 348,
												"src": "1409:11:15"
											},
											"nodeType": "ModifierInvocation",
											"src": "1409:11:15"
										}
									],
									"name": "initialize",
									"nameLocation": "1376:10:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2378,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1395:12:15",
												"nodeType": "VariableDeclaration",
												"scope": 2399,
												"src": "1387:20:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2377,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1387:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1386:22:15"
									},
									"returnParameters": {
										"id": 2382,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1428:0:15"
									},
									"scope": 2649,
									"src": "1367:196:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										630
									],
									"body": {
										"id": 2407,
										"nodeType": "Block",
										"src": "1669:2:15",
										"statements": []
									},
									"id": 2408,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2404,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2403,
												"name": "onlyOwner",
												"nameLocations": [
													"1642:9:15"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 135,
												"src": "1642:9:15"
											},
											"nodeType": "ModifierInvocation",
											"src": "1642:9:15"
										}
									],
									"name": "_authorizeUpgrade",
									"nameLocation": "1576:17:15",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2405,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1658:8:15"
									},
									"parameters": {
										"id": 2402,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2401,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "1602:17:15",
												"nodeType": "VariableDeclaration",
												"scope": 2408,
												"src": "1594:25:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2400,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1594:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1593:27:15"
									},
									"returnParameters": {
										"id": 2406,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1669:0:15"
									},
									"scope": 2649,
									"src": "1567:104:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2415,
										"nodeType": "Block",
										"src": "1772:90:15",
										"statements": [
											{
												"expression": {
													"hexValue": "43616d70546f6b656e203c2d3e204554482e2043616d70546f6b656e20697320537461626c65436f696e20746861742072656c6174696e6720455448203c2d3e204a5059",
													"id": 2413,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1787:70:15",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_665ce53e9d59c8d2ac0ba934bb50732c0bcd4aa94c46168cb289aff831bc6a83",
														"typeString": "literal_string \"CampToken <-> ETH. CampToken is StableCoin that relating ETH <-> JPY\""
													},
													"value": "CampToken <-> ETH. CampToken is StableCoin that relating ETH <-> JPY"
												},
												"functionReturnParameters": 2412,
												"id": 2414,
												"nodeType": "Return",
												"src": "1780:77:15"
											}
										]
									},
									"functionSelector": "7284e416",
									"id": 2416,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "description",
									"nameLocation": "1710:11:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2409,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1721:2:15"
									},
									"returnParameters": {
										"id": 2412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2411,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2416,
												"src": "1755:13:15",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2410,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1755:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1754:15:15"
									},
									"scope": 2649,
									"src": "1701:161:15",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2423,
										"nodeType": "Block",
										"src": "1948:19:15",
										"statements": [
											{
												"expression": {
													"hexValue": "31",
													"id": 2421,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1961:1:15",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1_by_1",
														"typeString": "int_const 1"
													},
													"value": "1"
												},
												"functionReturnParameters": 2420,
												"id": 2422,
												"nodeType": "Return",
												"src": "1954:8:15"
											}
										]
									},
									"functionSelector": "54fd4d50",
									"id": 2424,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "version",
									"nameLocation": "1898:7:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2417,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1905:2:15"
									},
									"returnParameters": {
										"id": 2420,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2419,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2424,
												"src": "1939:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2418,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1939:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1938:9:15"
									},
									"scope": 2649,
									"src": "1889:78:15",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2460,
										"nodeType": "Block",
										"src": "2055:197:15",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2431,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2428,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2069:3:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2429,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2073:5:15",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "2069:9:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2430,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2081:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2069:13:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206d7573742062652067726561746572207468616e207a65726f",
															"id": 2432,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2084:34:15",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887",
																"typeString": "literal_string \"Amount must be greater than zero\""
															},
															"value": "Amount must be greater than zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887",
																"typeString": "literal_string \"Amount must be greater than zero\""
															}
														],
														"id": 2427,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2061:7:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2061:58:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2434,
												"nodeType": "ExpressionStatement",
												"src": "2061:58:15"
											},
											{
												"assignments": [
													2436
												],
												"declarations": [
													{
														"constant": false,
														"id": 2436,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "2133:6:15",
														"nodeType": "VariableDeclaration",
														"scope": 2460,
														"src": "2125:14:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2435,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2125:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2446,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2441,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2437,
																"name": "ETH_JPY",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2620,
																"src": "2142:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																	"typeString": "function () view returns (uint256)"
																}
															},
															"id": 2438,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2142:9:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"expression": {
																"id": 2439,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2154:3:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2440,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2158:5:15",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "2154:9:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2142:21:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_rational_1000000000000000000_by_1",
															"typeString": "int_const 1000000000000000000"
														},
														"id": 2444,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "3130",
															"id": 2442,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2166:2:15",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10_by_1",
																"typeString": "int_const 10"
															},
															"value": "10"
														},
														"nodeType": "BinaryOperation",
														"operator": "**",
														"rightExpression": {
															"hexValue": "3138",
															"id": 2443,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2172:2:15",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_18_by_1",
																"typeString": "int_const 18"
															},
															"value": "18"
														},
														"src": "2166:8:15",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000000000000000000_by_1",
															"typeString": "int_const 1000000000000000000"
														}
													},
													"src": "2142:32:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2125:49:15"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2448,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2186:3:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2449,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2190:6:15",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2186:10:15",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2450,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2436,
															"src": "2198:6:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2447,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1125,
														"src": "2180:5:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2451,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2180:25:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2452,
												"nodeType": "ExpressionStatement",
												"src": "2180:25:15"
											},
											{
												"expression": {
													"id": 2458,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2453,
															"name": "token_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2357,
															"src": "2211:14:15",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2456,
														"indexExpression": {
															"expression": {
																"id": 2454,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2226:3:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2455,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2230:6:15",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2226:10:15",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2211:26:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 2457,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2436,
														"src": "2241:6:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2211:36:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2459,
												"nodeType": "ExpressionStatement",
												"src": "2211:36:15"
											}
										]
									},
									"functionSelector": "331ee739",
									"id": 2461,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "Exchange_ETH_to_CTK",
									"nameLocation": "2016:19:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2425,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2035:2:15"
									},
									"returnParameters": {
										"id": 2426,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2055:0:15"
									},
									"scope": 2649,
									"src": "2007:245:15",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2485,
										"nodeType": "Block",
										"src": "2287:115:15",
										"statements": [
											{
												"assignments": [
													2465
												],
												"declarations": [
													{
														"constant": false,
														"id": 2465,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "2301:6:15",
														"nodeType": "VariableDeclaration",
														"scope": 2485,
														"src": "2293:14:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2464,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2293:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2471,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_rational_500000000000000000000_by_1",
														"typeString": "int_const 500000000000000000000"
													},
													"id": 2470,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "353030",
														"id": 2466,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2310:3:15",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_500_by_1",
															"typeString": "int_const 500"
														},
														"value": "500"
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_rational_1000000000000000000_by_1",
															"typeString": "int_const 1000000000000000000"
														},
														"id": 2469,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "3130",
															"id": 2467,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2316:2:15",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10_by_1",
																"typeString": "int_const 10"
															},
															"value": "10"
														},
														"nodeType": "BinaryOperation",
														"operator": "**",
														"rightExpression": {
															"hexValue": "3138",
															"id": 2468,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2322:2:15",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_18_by_1",
																"typeString": "int_const 18"
															},
															"value": "18"
														},
														"src": "2316:8:15",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000000000000000000_by_1",
															"typeString": "int_const 1000000000000000000"
														}
													},
													"src": "2310:14:15",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_500000000000000000000_by_1",
														"typeString": "int_const 500000000000000000000"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2293:31:15"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2473,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2336:3:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2474,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2340:6:15",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2336:10:15",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2475,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2465,
															"src": "2348:6:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2472,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1125,
														"src": "2330:5:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2476,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2330:25:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2477,
												"nodeType": "ExpressionStatement",
												"src": "2330:25:15"
											},
											{
												"expression": {
													"id": 2483,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2478,
															"name": "token_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2357,
															"src": "2361:14:15",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2481,
														"indexExpression": {
															"expression": {
																"id": 2479,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2376:3:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2480,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2380:6:15",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2376:10:15",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2361:26:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 2482,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2465,
														"src": "2391:6:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2361:36:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2484,
												"nodeType": "ExpressionStatement",
												"src": "2361:36:15"
											}
										]
									},
									"functionSelector": "fee50359",
									"id": 2486,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAward",
									"nameLocation": "2265:8:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2462,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2273:2:15"
									},
									"returnParameters": {
										"id": 2463,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2287:0:15"
									},
									"scope": 2649,
									"src": "2256:146:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2534,
										"nodeType": "Block",
										"src": "2457:302:15",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2497,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 2492,
																	"name": "token_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2357,
																	"src": "2471:14:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2495,
																"indexExpression": {
																	"expression": {
																		"id": 2493,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2486:3:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 2494,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2490:6:15",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2486:10:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2471:26:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 2496,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2488,
																"src": "2501:6:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2471:36:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206d75737420616c77617973206265206c657373207468616e20746865206e756d626572206f6620706f7373657373696f6e73",
															"id": 2498,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2509:59:15",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_016c8545763eb7f610fbb2f8b4daaad18a1230ddad0f63d2a64bb442c88834da",
																"typeString": "literal_string \"Amount must always be less than the number of possessions\""
															},
															"value": "Amount must always be less than the number of possessions"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_016c8545763eb7f610fbb2f8b4daaad18a1230ddad0f63d2a64bb442c88834da",
																"typeString": "literal_string \"Amount must always be less than the number of possessions\""
															}
														],
														"id": 2491,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2463:7:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2499,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2463:106:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2500,
												"nodeType": "ExpressionStatement",
												"src": "2463:106:15"
											},
											{
												"expression": {
													"id": 2506,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2501,
															"name": "token_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2357,
															"src": "2575:14:15",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2504,
														"indexExpression": {
															"expression": {
																"id": 2502,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2590:3:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2503,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2594:6:15",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2590:10:15",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2575:26:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 2505,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2488,
														"src": "2605:6:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2575:36:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2507,
												"nodeType": "ExpressionStatement",
												"src": "2575:36:15"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2509,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2626:3:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2510,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2630:6:15",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2626:10:15",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2511,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2488,
															"src": "2638:6:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2508,
														"name": "Burn_CTK",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2554,
														"src": "2617:8:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2617:28:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2513,
												"nodeType": "ExpressionStatement",
												"src": "2617:28:15"
											},
											{
												"assignments": [
													2515
												],
												"declarations": [
													{
														"constant": false,
														"id": 2515,
														"mutability": "mutable",
														"name": "transfer_amount",
														"nameLocation": "2656:15:15",
														"nodeType": "VariableDeclaration",
														"scope": 2534,
														"src": "2651:20:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2514,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2651:4:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2524,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2523,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2519,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2516,
																"name": "JPY_ETH",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2648,
																"src": "2674:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																	"typeString": "function () view returns (uint256)"
																}
															},
															"id": 2517,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2674:9:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"id": 2518,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2488,
															"src": "2686:6:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2674:18:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_rational_1000000000000000000_by_1",
															"typeString": "int_const 1000000000000000000"
														},
														"id": 2522,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "3130",
															"id": 2520,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2695:2:15",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10_by_1",
																"typeString": "int_const 10"
															},
															"value": "10"
														},
														"nodeType": "BinaryOperation",
														"operator": "**",
														"rightExpression": {
															"hexValue": "3138",
															"id": 2521,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2701:2:15",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_18_by_1",
																"typeString": "int_const 18"
															},
															"value": "18"
														},
														"src": "2695:8:15",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000000000000000000_by_1",
															"typeString": "int_const 1000000000000000000"
														}
													},
													"src": "2674:29:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2651:52:15"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2531,
															"name": "transfer_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2515,
															"src": "2738:15:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 2527,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2717:3:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 2528,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2721:6:15",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2717:10:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2526,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2709:8:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 2525,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2709:8:15",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 2529,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2709:19:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 2530,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2729:8:15",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "2709:28:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 2532,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2709:45:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2533,
												"nodeType": "ExpressionStatement",
												"src": "2709:45:15"
											}
										]
									},
									"functionSelector": "2e1a7d4d",
									"id": 2535,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "2415:8:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2488,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2429:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 2535,
												"src": "2424:11:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2487,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2424:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2423:13:15"
									},
									"returnParameters": {
										"id": 2490,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2457:0:15"
									},
									"scope": 2649,
									"src": "2406:353:15",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2540,
										"nodeType": "Block",
										"src": "2877:10:15",
										"statements": []
									},
									"id": 2541,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "Get_mint_quantity",
									"nameLocation": "2832:17:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2538,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2537,
												"mutability": "mutable",
												"name": "deposit",
												"nameLocation": "2858:7:15",
												"nodeType": "VariableDeclaration",
												"scope": 2541,
												"src": "2850:15:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2536,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2850:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2849:17:15"
									},
									"returnParameters": {
										"id": 2539,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2877:0:15"
									},
									"scope": 2649,
									"src": "2823:64:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2553,
										"nodeType": "Block",
										"src": "3005:35:15",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2549,
															"name": "_sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2543,
															"src": "3017:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2550,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2545,
															"src": "3026:8:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2548,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1158,
														"src": "3011:5:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2551,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3011:24:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2552,
												"nodeType": "ExpressionStatement",
												"src": "3011:24:15"
											}
										]
									},
									"functionSelector": "abab4673",
									"id": 2554,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "Burn_CTK",
									"nameLocation": "2952:8:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2546,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2543,
												"mutability": "mutable",
												"name": "_sender",
												"nameLocation": "2969:7:15",
												"nodeType": "VariableDeclaration",
												"scope": 2554,
												"src": "2961:15:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2542,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2961:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2545,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "2986:8:15",
												"nodeType": "VariableDeclaration",
												"scope": 2554,
												"src": "2978:16:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2544,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2978:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2960:35:15"
									},
									"returnParameters": {
										"id": 2547,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3005:0:15"
									},
									"scope": 2649,
									"src": "2943:97:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2567,
										"nodeType": "Block",
										"src": "3125:449:15",
										"statements": [
											{
												"assignments": [
													null,
													2560,
													null,
													null,
													null
												],
												"declarations": [
													null,
													{
														"constant": false,
														"id": 2560,
														"mutability": "mutable",
														"name": "price",
														"nameLocation": "3224:5:15",
														"nodeType": "VariableDeclaration",
														"scope": 2567,
														"src": "3217:12:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 2559,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "3217:6:15",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													},
													null,
													null,
													null
												],
												"id": 2564,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 2561,
															"name": "ETH_USD",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2350,
															"src": "3497:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
																"typeString": "contract AggregatorV3Interface"
															}
														},
														"id": 2562,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3505:15:15",
														"memberName": "latestRoundData",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 44,
														"src": "3497:23:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
															"typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
														}
													},
													"id": 2563,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3497:25:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
														"typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3131:391:15"
											},
											{
												"expression": {
													"id": 2565,
													"name": "price",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2560,
													"src": "3536:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2558,
												"id": 2566,
												"nodeType": "Return",
												"src": "3529:12:15"
											}
										]
									},
									"functionSelector": "b7c422f5",
									"id": 2568,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "get_Latest_EU_Price",
									"nameLocation": "3074:19:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2555,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3093:2:15"
									},
									"returnParameters": {
										"id": 2558,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2557,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2568,
												"src": "3117:6:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2556,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "3117:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3116:8:15"
									},
									"scope": 2649,
									"src": "3065:509:15",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2581,
										"nodeType": "Block",
										"src": "3660:442:15",
										"statements": [
											{
												"assignments": [
													null,
													2574,
													null,
													null,
													null
												],
												"declarations": [
													null,
													{
														"constant": false,
														"id": 2574,
														"mutability": "mutable",
														"name": "price",
														"nameLocation": "3759:5:15",
														"nodeType": "VariableDeclaration",
														"scope": 2581,
														"src": "3752:12:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 2573,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "3752:6:15",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													},
													null,
													null,
													null
												],
												"id": 2578,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 2575,
															"name": "USD_JPY",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2353,
															"src": "4032:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
																"typeString": "contract AggregatorV3Interface"
															}
														},
														"id": 2576,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4040:15:15",
														"memberName": "latestRoundData",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 44,
														"src": "4032:23:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
															"typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
														}
													},
													"id": 2577,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4032:25:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
														"typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3666:391:15"
											},
											{
												"expression": {
													"id": 2579,
													"name": "price",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2574,
													"src": "4070:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2572,
												"id": 2580,
												"nodeType": "Return",
												"src": "4063:12:15"
											}
										]
									},
									"functionSelector": "e6c9566c",
									"id": 2582,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "get_Latest_JU_Price",
									"nameLocation": "3609:19:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2569,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3628:2:15"
									},
									"returnParameters": {
										"id": 2572,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2571,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2582,
												"src": "3652:6:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2570,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "3652:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3651:8:15"
									},
									"scope": 2649,
									"src": "3600:502:15",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2619,
										"nodeType": "Block",
										"src": "4182:201:15",
										"statements": [
											{
												"assignments": [
													2588
												],
												"declarations": [
													{
														"constant": false,
														"id": 2588,
														"mutability": "mutable",
														"name": "USD_ETH_price",
														"nameLocation": "4192:13:15",
														"nodeType": "VariableDeclaration",
														"scope": 2619,
														"src": "4188:17:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 2587,
															"name": "int",
															"nodeType": "ElementaryTypeName",
															"src": "4188:3:15",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2591,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2589,
														"name": "get_Latest_EU_Price",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2568,
														"src": "4208:19:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_int256_$",
															"typeString": "function () view returns (int256)"
														}
													},
													"id": 2590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4208:21:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4188:41:15"
											},
											{
												"assignments": [
													2593
												],
												"declarations": [
													{
														"constant": false,
														"id": 2593,
														"mutability": "mutable",
														"name": "USD_JPY_price",
														"nameLocation": "4239:13:15",
														"nodeType": "VariableDeclaration",
														"scope": 2619,
														"src": "4235:17:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 2592,
															"name": "int",
															"nodeType": "ElementaryTypeName",
															"src": "4235:3:15",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2600,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2599,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_rational_100000000_by_1",
															"typeString": "int_const 100000000"
														},
														"id": 2596,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "3130",
															"id": 2594,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4255:2:15",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10_by_1",
																"typeString": "int_const 10"
															},
															"value": "10"
														},
														"nodeType": "BinaryOperation",
														"operator": "**",
														"rightExpression": {
															"hexValue": "38",
															"id": 2595,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4261:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_8_by_1",
																"typeString": "int_const 8"
															},
															"value": "8"
														},
														"src": "4255:7:15",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100000000_by_1",
															"typeString": "int_const 100000000"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2597,
															"name": "get_Latest_JU_Price",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2582,
															"src": "4265:19:15",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_int256_$",
																"typeString": "function () view returns (int256)"
															}
														},
														"id": 2598,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4265:21:15",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "4255:31:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4235:51:15"
											},
											{
												"assignments": [
													2602
												],
												"declarations": [
													{
														"constant": false,
														"id": 2602,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "4298:6:15",
														"nodeType": "VariableDeclaration",
														"scope": 2619,
														"src": "4293:11:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2601,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "4293:4:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2616,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2615,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2611,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2605,
																	"name": "USD_ETH_price",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2588,
																	"src": "4312:13:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 2604,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4307:4:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 2603,
																	"name": "uint",
																	"nodeType": "ElementaryTypeName",
																	"src": "4307:4:15",
																	"typeDescriptions": {}
																}
															},
															"id": 2606,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4307:19:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"arguments": [
																{
																	"id": 2609,
																	"name": "USD_JPY_price",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2593,
																	"src": "4334:13:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 2608,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4329:4:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 2607,
																	"name": "uint",
																	"nodeType": "ElementaryTypeName",
																	"src": "4329:4:15",
																	"typeDescriptions": {}
																}
															},
															"id": 2610,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4329:19:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4307:41:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_rational_10000000000_by_1",
															"typeString": "int_const 10000000000"
														},
														"id": 2614,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "3130",
															"id": 2612,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4351:2:15",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10_by_1",
																"typeString": "int_const 10"
															},
															"value": "10"
														},
														"nodeType": "BinaryOperation",
														"operator": "**",
														"rightExpression": {
															"hexValue": "3130",
															"id": 2613,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4357:2:15",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10_by_1",
																"typeString": "int_const 10"
															},
															"value": "10"
														},
														"src": "4351:8:15",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10000000000_by_1",
															"typeString": "int_const 10000000000"
														}
													},
													"src": "4307:52:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4293:66:15"
											},
											{
												"expression": {
													"id": 2617,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2602,
													"src": "4372:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2586,
												"id": 2618,
												"nodeType": "Return",
												"src": "4365:13:15"
											}
										]
									},
									"functionSelector": "7ce35188",
									"id": 2620,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ETH_JPY",
									"nameLocation": "4140:7:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2583,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4147:2:15"
									},
									"returnParameters": {
										"id": 2586,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2585,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2620,
												"src": "4171:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2584,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4171:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4170:9:15"
									},
									"scope": 2649,
									"src": "4131:252:15",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2647,
										"nodeType": "Block",
										"src": "4438:121:15",
										"statements": [
											{
												"assignments": [
													2626
												],
												"declarations": [
													{
														"constant": false,
														"id": 2626,
														"mutability": "mutable",
														"name": "ETH_JPY_price",
														"nameLocation": "4449:13:15",
														"nodeType": "VariableDeclaration",
														"scope": 2647,
														"src": "4444:18:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2625,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "4444:4:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2636,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2635,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2629,
																	"name": "ETH_JPY",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2620,
																	"src": "4470:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 2630,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4470:9:15",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 2628,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4465:4:15",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 2627,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "4465:4:15",
																"typeDescriptions": {}
															}
														},
														"id": 2631,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4465:15:15",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_rational_1000000000000000000_by_1",
															"typeString": "int_const 1000000000000000000"
														},
														"id": 2634,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "3130",
															"id": 2632,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4483:2:15",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10_by_1",
																"typeString": "int_const 10"
															},
															"value": "10"
														},
														"nodeType": "BinaryOperation",
														"operator": "**",
														"rightExpression": {
															"hexValue": "3138",
															"id": 2633,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4489:2:15",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_18_by_1",
																"typeString": "int_const 18"
															},
															"value": "18"
														},
														"src": "4483:8:15",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000000000000000000_by_1",
															"typeString": "int_const 1000000000000000000"
														}
													},
													"src": "4465:26:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4444:47:15"
											},
											{
												"assignments": [
													2638
												],
												"declarations": [
													{
														"constant": false,
														"id": 2638,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "4502:6:15",
														"nodeType": "VariableDeclaration",
														"scope": 2647,
														"src": "4497:11:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2637,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "4497:4:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2644,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2643,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_rational_1000000000000000000_by_1",
															"typeString": "int_const 1000000000000000000"
														},
														"id": 2641,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "3130",
															"id": 2639,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4511:2:15",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10_by_1",
																"typeString": "int_const 10"
															},
															"value": "10"
														},
														"nodeType": "BinaryOperation",
														"operator": "**",
														"rightExpression": {
															"hexValue": "3138",
															"id": 2640,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4517:2:15",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_18_by_1",
																"typeString": "int_const 18"
															},
															"value": "18"
														},
														"src": "4511:8:15",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000000000000000000_by_1",
															"typeString": "int_const 1000000000000000000"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 2642,
														"name": "ETH_JPY_price",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2626,
														"src": "4522:13:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4511:24:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4497:38:15"
											},
											{
												"expression": {
													"id": 2645,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2638,
													"src": "4548:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2624,
												"id": 2646,
												"nodeType": "Return",
												"src": "4541:13:15"
											}
										]
									},
									"functionSelector": "18b804a5",
									"id": 2648,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "JPY_ETH",
									"nameLocation": "4396:7:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2621,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4403:2:15"
									},
									"returnParameters": {
										"id": 2624,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2623,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2648,
												"src": "4427:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2622,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4427:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4426:9:15"
									},
									"scope": 2649,
									"src": "4387:172:15",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 2650,
							"src": "582:3979:15",
							"usedErrors": [
								76,
								81,
								257,
								260,
								521,
								526,
								1423,
								1428,
								1433,
								1442,
								1447,
								1452,
								1583,
								1596,
								1978,
								1981
							],
							"usedEvents": [
								87,
								265,
								1562,
								1873,
								1882
							]
						}
					],
					"src": "32:4529:15"
				},
				"id": 15
			}
		}
	}
}